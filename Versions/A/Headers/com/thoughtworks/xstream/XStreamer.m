//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/XStreamer.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/XStreamer.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/MarshallingStrategy.h"
#include "com/thoughtworks/xstream/XStream.h"
#include "com/thoughtworks/xstream/XStreamer.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/converters/ConverterMatcher.h"
#include "com/thoughtworks/xstream/converters/ConverterRegistry.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/reflection/FieldKeySorter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/XppDriver.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/security/AnyTypePermission.h"
#include "com/thoughtworks/xstream/security/TypeHierarchyPermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"
#include "com/thoughtworks/xstream/security/WildcardTypePermission.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/ObjectStreamException.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Package.h"

static IOSObjectArray *ComThoughtworksXstreamXStreamer_PERMISSIONS_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamXStreamer, PERMISSIONS_, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamXStreamer)


#line 50
@implementation ComThoughtworksXstreamXStreamer


#line 77
- (NSString *)toXMLWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)xstream
                                              withId:(id)obj {
  JavaIoWriter *writer = new_JavaIoStringWriter_init();
  @try {
    [self toXMLWithComThoughtworksXstreamXStream:xstream withId:obj withJavaIoWriter:writer];
  }
  @catch (
#line 81
  JavaIoObjectStreamException *e) {
    @throw e;
  }
  @catch (
#line 83
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Unexpected IO error from a StringWriter", e);
  }
  return [writer description];
}


#line 108
- (void)toXMLWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)xstream
                                        withId:(id)obj
                              withJavaIoWriter:(JavaIoWriter *)outArg {
  ComThoughtworksXstreamXStream *outer = new_ComThoughtworksXstreamXStream_init();
  JavaIoObjectOutputStream *oos = [outer createObjectOutputStreamWithJavaIoWriter:outArg];
  @try {
    [((JavaIoObjectOutputStream *) nil_chk(oos)) writeObjectWithId:xstream];
    [oos flush];
    [((ComThoughtworksXstreamXStream *) nil_chk(xstream)) toXMLWithId:obj withJavaIoWriter:outArg];
  }
  @finally {
    
#line 116
    [((JavaIoObjectOutputStream *) nil_chk(oos)) close];
  }
}


#line 136
- (id)fromXMLWithNSString:(NSString *)xml {
  @try {
    return [self fromXMLWithJavaIoReader:new_JavaIoStringReader_initWithNSString_(xml)];
  }
  @catch (
#line 139
  JavaIoObjectStreamException *e) {
    @throw e;
  }
  @catch (
#line 141
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Unexpected IO error from a StringReader", e);
  }
}


#line 163
- (id)fromXMLWithNSString:(NSString *)xml
withComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions {
  
#line 165
  @try {
    return [self fromXMLWithJavaIoReader:new_JavaIoStringReader_initWithNSString_(xml) withComThoughtworksXstreamSecurityTypePermissionArray:permissions];
  }
  @catch (
#line 167
  JavaIoObjectStreamException *e) {
    @throw e;
  }
  @catch (
#line 169
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Unexpected IO error from a StringReader", e);
  }
}


#line 190
- (id)fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                     withNSString:(NSString *)xml {
  
#line 192
  @try {
    return [self fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:driver withJavaIoReader:new_JavaIoStringReader_initWithNSString_(xml)];
  }
  @catch (
#line 194
  JavaIoObjectStreamException *e) {
    @throw e;
  }
  @catch (
#line 196
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Unexpected IO error from a StringReader", e);
  }
}


#line 219
- (id)fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                     withNSString:(NSString *)xml
            withComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions {
  
#line 221
  @try {
    return [self fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:driver withJavaIoReader:new_JavaIoStringReader_initWithNSString_(xml) withComThoughtworksXstreamSecurityTypePermissionArray:permissions];
  }
  @catch (
#line 223
  JavaIoObjectStreamException *e) {
    @throw e;
  }
  @catch (
#line 225
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Unexpected IO error from a StringReader", e);
  }
}


#line 246
- (id)fromXMLWithJavaIoReader:(JavaIoReader *)xml {
  return [self fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:new_ComThoughtworksXstreamIoXmlXppDriver_init() withJavaIoReader:xml];
}


#line 268
- (id)fromXMLWithJavaIoReader:(JavaIoReader *)xml
withComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions {
  
#line 270
  return [self fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:new_ComThoughtworksXstreamIoXmlXppDriver_init() withJavaIoReader:xml withComThoughtworksXstreamSecurityTypePermissionArray:permissions];
}


#line 288
- (id)fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                 withJavaIoReader:(JavaIoReader *)xml {
  
#line 290
  return [self fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:driver withJavaIoReader:xml withComThoughtworksXstreamSecurityTypePermissionArray:[IOSObjectArray newArrayWithObjects:(id[]){ ComThoughtworksXstreamSecurityAnyTypePermission_get_ANY_() } count:1 type:ComThoughtworksXstreamSecurityTypePermission_class_()]];
}


#line 310
- (id)fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                 withJavaIoReader:(JavaIoReader *)xml
            withComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions {
  
#line 312
  ComThoughtworksXstreamXStream *outer = new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamIoHierarchicalStreamDriver_(driver);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(permissions))->size_; ++i) {
    [outer addPermissionWithComThoughtworksXstreamSecurityTypePermission:IOSObjectArray_Get(permissions, i)];
  }
  id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader = [((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(driver)) createReaderWithJavaIoReader:xml];
  JavaIoObjectInputStream *configIn = [outer createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:reader];
  @try {
    ComThoughtworksXstreamXStream *configured = (ComThoughtworksXstreamXStream *) check_class_cast([((JavaIoObjectInputStream *) nil_chk(configIn)) readObject], [ComThoughtworksXstreamXStream class]);
    JavaIoObjectInputStream *in = [((ComThoughtworksXstreamXStream *) nil_chk(configured)) createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:reader];
    @try {
      return [((JavaIoObjectInputStream *) nil_chk(in)) readObject];
    }
    @finally {
      
#line 324
      [((JavaIoObjectInputStream *) nil_chk(in)) close];
    }
  }
  @finally {
    
#line 327
    [((JavaIoObjectInputStream *) nil_chk(configIn)) close];
  }
}


#line 341
+ (IOSObjectArray *)getDefaultPermissions {
  return ComThoughtworksXstreamXStreamer_getDefaultPermissions();
}

- (instancetype)init {
  ComThoughtworksXstreamXStreamer_init(self);
  return self;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamXStreamer class]) {
    ComThoughtworksXstreamXStreamer_PERMISSIONS_ = [IOSObjectArray newArrayWithObjects:(id[]){ new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 53
    ComThoughtworksXstreamConvertersConverterMatcher_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 54
    ComThoughtworksXstreamMapperMapper_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(ComThoughtworksXstreamXStream_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 55
    ComThoughtworksXstreamConvertersReflectionReflectionProvider_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 56
    ComThoughtworksXstreamConvertersReflectionFieldKeySorter_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 57
    ComThoughtworksXstreamConvertersConverterLookup_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 58
    ComThoughtworksXstreamConvertersConverterRegistry_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 59
    ComThoughtworksXstreamIoHierarchicalStreamDriver_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 60
    ComThoughtworksXstreamMarshallingStrategy_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 61
    ComThoughtworksXstreamConvertersMarshallingContext_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 62
    ComThoughtworksXstreamConvertersUnmarshallingContext_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 63
    ComThoughtworksXstreamIoNamingNameCoder_class_()), new_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(
#line 64
    ComThoughtworksXstreamSecurityTypePermission_class_()), new_ComThoughtworksXstreamSecurityWildcardTypePermission_initWithNSStringArray_([IOSObjectArray newArrayWithObjects:(id[]){ JreStrcat("$$",
#line 65
    [((JavaLangPackage *) nil_chk([ComThoughtworksXstreamCoreJVM_class_() getPackage])) getName], @".**") } count:1 type:NSString_class_()]) } count:14 type:ComThoughtworksXstreamSecurityTypePermission_class_()];
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamXStreamer)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "toXMLWithComThoughtworksXstreamXStream:withId:", "toXML", "Ljava.lang.String;", 0x1, "Ljava.io.ObjectStreamException;", NULL },
    { "toXMLWithComThoughtworksXstreamXStream:withId:withJavaIoWriter:", "toXML", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "fromXMLWithNSString:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.lang.ClassNotFoundException;Ljava.io.ObjectStreamException;", NULL },
    { "fromXMLWithNSString:withComThoughtworksXstreamSecurityTypePermissionArray:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.lang.ClassNotFoundException;Ljava.io.ObjectStreamException;", NULL },
    { "fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:withNSString:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.lang.ClassNotFoundException;Ljava.io.ObjectStreamException;", NULL },
    { "fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:withNSString:withComThoughtworksXstreamSecurityTypePermissionArray:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.lang.ClassNotFoundException;Ljava.io.ObjectStreamException;", NULL },
    { "fromXMLWithJavaIoReader:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "fromXMLWithJavaIoReader:withComThoughtworksXstreamSecurityTypePermissionArray:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaIoReader:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "fromXMLWithComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaIoReader:withComThoughtworksXstreamSecurityTypePermissionArray:", "fromXML", "Ljava.lang.Object;", 0x1, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "getDefaultPermissions", NULL, "[Lcom.thoughtworks.xstream.security.TypePermission;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PERMISSIONS_", NULL, 0x1a, "[Lcom.thoughtworks.xstream.security.TypePermission;", &ComThoughtworksXstreamXStreamer_PERMISSIONS_, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStreamer = { 2, "XStreamer", "com.thoughtworks.xstream", NULL, 0x1, 12, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamXStreamer;
}

@end


#line 341
IOSObjectArray *ComThoughtworksXstreamXStreamer_getDefaultPermissions() {
  ComThoughtworksXstreamXStreamer_initialize();
  
#line 342
  return [((IOSObjectArray *) nil_chk(ComThoughtworksXstreamXStreamer_PERMISSIONS_)) clone];
}

void ComThoughtworksXstreamXStreamer_init(ComThoughtworksXstreamXStreamer *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamXStreamer *new_ComThoughtworksXstreamXStreamer_init() {
  ComThoughtworksXstreamXStreamer *self = [ComThoughtworksXstreamXStreamer alloc];
  ComThoughtworksXstreamXStreamer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamXStreamer)
