//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/XStream.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/XStream.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/thoughtworks/xstream/InitializationException.h"
#include "com/thoughtworks/xstream/MarshallingStrategy.h"
#include "com/thoughtworks/xstream/XStream.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/converters/ConverterRegistry.h"
#include "com/thoughtworks/xstream/converters/DataHolder.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "com/thoughtworks/xstream/converters/basic/BigDecimalConverter.h"
#include "com/thoughtworks/xstream/converters/basic/BigIntegerConverter.h"
#include "com/thoughtworks/xstream/converters/basic/BooleanConverter.h"
#include "com/thoughtworks/xstream/converters/basic/ByteConverter.h"
#include "com/thoughtworks/xstream/converters/basic/CharConverter.h"
#include "com/thoughtworks/xstream/converters/basic/DateConverter.h"
#include "com/thoughtworks/xstream/converters/basic/DoubleConverter.h"
#include "com/thoughtworks/xstream/converters/basic/FloatConverter.h"
#include "com/thoughtworks/xstream/converters/basic/IntConverter.h"
#include "com/thoughtworks/xstream/converters/basic/LongConverter.h"
#include "com/thoughtworks/xstream/converters/basic/NullConverter.h"
#include "com/thoughtworks/xstream/converters/basic/ShortConverter.h"
#include "com/thoughtworks/xstream/converters/basic/StringBufferConverter.h"
#include "com/thoughtworks/xstream/converters/basic/StringConverter.h"
#include "com/thoughtworks/xstream/converters/basic/URIConverter.h"
#include "com/thoughtworks/xstream/converters/basic/URLConverter.h"
#include "com/thoughtworks/xstream/converters/collections/ArrayConverter.h"
#include "com/thoughtworks/xstream/converters/collections/BitSetConverter.h"
#include "com/thoughtworks/xstream/converters/collections/CharArrayConverter.h"
#include "com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/MapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/PropertiesConverter.h"
#include "com/thoughtworks/xstream/converters/collections/SingletonCollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/SingletonMapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeSetConverter.h"
#include "com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.h"
#include "com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.h"
#include "com/thoughtworks/xstream/converters/extended/FileConverter.h"
#include "com/thoughtworks/xstream/converters/extended/GregorianCalendarConverter.h"
#include "com/thoughtworks/xstream/converters/extended/JavaClassConverter.h"
#include "com/thoughtworks/xstream/converters/extended/JavaFieldConverter.h"
#include "com/thoughtworks/xstream/converters/extended/JavaMethodConverter.h"
#include "com/thoughtworks/xstream/converters/extended/LocaleConverter.h"
#include "com/thoughtworks/xstream/converters/extended/SqlDateConverter.h"
#include "com/thoughtworks/xstream/converters/extended/SqlTimeConverter.h"
#include "com/thoughtworks/xstream/converters/extended/SqlTimestampConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ExternalizableConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/converters/reflection/SerializableConverter.h"
#include "com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/core/DefaultConverterLookup.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/MapBackedDataHolder.h"
#include "com/thoughtworks/xstream/core/ReferenceByIdMarshallingStrategy.h"
#include "com/thoughtworks/xstream/core/ReferenceByXPathMarshallingStrategy.h"
#include "com/thoughtworks/xstream/core/TreeMarshallingStrategy.h"
#include "com/thoughtworks/xstream/core/util/CompositeClassLoader.h"
#include "com/thoughtworks/xstream/core/util/CustomObjectInputStream.h"
#include "com/thoughtworks/xstream/core/util/CustomObjectOutputStream.h"
#include "com/thoughtworks/xstream/core/util/SelfStreamingInstanceChecker.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/StatefulWriter.h"
#include "com/thoughtworks/xstream/io/xml/XppDriver.h"
#include "com/thoughtworks/xstream/mapper/AnnotationConfiguration.h"
#include "com/thoughtworks/xstream/mapper/ArrayMapper.h"
#include "com/thoughtworks/xstream/mapper/AttributeAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/AttributeMapper.h"
#include "com/thoughtworks/xstream/mapper/CachingMapper.h"
#include "com/thoughtworks/xstream/mapper/ClassAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/DefaultImplementationsMapper.h"
#include "com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "com/thoughtworks/xstream/mapper/DynamicProxyMapper.h"
#include "com/thoughtworks/xstream/mapper/FieldAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/ImmutableTypesMapper.h"
#include "com/thoughtworks/xstream/mapper/ImplicitCollectionMapper.h"
#include "com/thoughtworks/xstream/mapper/LocalConversionMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "com/thoughtworks/xstream/mapper/OuterClassMapper.h"
#include "com/thoughtworks/xstream/mapper/PackageAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/SecurityMapper.h"
#include "com/thoughtworks/xstream/mapper/SystemAttributeAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/XStream11XmlFriendlyMapper.h"
#include "com/thoughtworks/xstream/security/AnyTypePermission.h"
#include "com/thoughtworks/xstream/security/ExplicitTypePermission.h"
#include "com/thoughtworks/xstream/security/NoPermission.h"
#include "com/thoughtworks/xstream/security/RegExpTypePermission.h"
#include "com/thoughtworks/xstream/security/TypeHierarchyPermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"
#include "com/thoughtworks/xstream/security/WildcardTypePermission.h"
#include "java/io/EOFException.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/NotActiveException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectInputValidation.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Package.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Method.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/net/URI.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/BitSet.h"
#include "java/util/Calendar.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Hashtable.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/Vector.h"
#include "java/util/regex/Pattern.h"

BOOL ComThoughtworksXstreamXStream_initialized = NO;


#line 303
@implementation ComThoughtworksXstreamXStream

NSString * ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE_ = 
#line 341
@"com.thoughtworks.xstream.mapper.AnnotationMapper";
JavaUtilRegexPattern * ComThoughtworksXstreamXStream_IGNORE_ALL_;


#line 354
- (instancetype)init {
  return
#line 355
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:nil withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>) check_protocol_cast(nil, @protocol(ComThoughtworksXstreamMapperMapper)) withComThoughtworksXstreamIoHierarchicalStreamDriver:[[ComThoughtworksXstreamIoXmlXppDriver alloc] init]];
}


#line 370
- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider {
  return
#line 371
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>) check_protocol_cast(nil, @protocol(ComThoughtworksXstreamMapperMapper)) withComThoughtworksXstreamIoHierarchicalStreamDriver:[[ComThoughtworksXstreamIoXmlXppDriver alloc] init]];
}


#line 386
- (instancetype)initWithComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)hierarchicalStreamDriver {
  return
#line 387
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:nil withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>) check_protocol_cast(nil, @protocol(ComThoughtworksXstreamMapperMapper)) withComThoughtworksXstreamIoHierarchicalStreamDriver:hierarchicalStreamDriver];
}


#line 402
- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)hierarchicalStreamDriver {
  return
#line 404
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>) check_protocol_cast(nil, @protocol(ComThoughtworksXstreamMapperMapper)) withComThoughtworksXstreamIoHierarchicalStreamDriver:hierarchicalStreamDriver];
}


#line 426
- (instancetype)initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                                           withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                             withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver {
  return
#line 428
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withJavaLangClassLoader:[[ComThoughtworksXstreamCoreUtilCompositeClassLoader alloc] init] withComThoughtworksXstreamMapperMapper:mapper];
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                              withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver {
  return [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:
#line 426
reflectionProvider withComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamIoHierarchicalStreamDriver:
#line 427
driver];
}


#line 446
- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                  withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  return
#line 448
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference withComThoughtworksXstreamMapperMapper:nil];
}


#line 462
- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                             withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  return
#line 464
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withJavaLangClassLoader:classLoader withComThoughtworksXstreamMapperMapper:nil];
}


#line 489
- (instancetype)initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                             withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                                                           withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return
#line 491
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:[[ComThoughtworksXstreamCoreClassLoaderReference alloc] initWithJavaLangClassLoader:classLoader] withComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamCoreDefaultConverterLookup:
#line 492
  [[ComThoughtworksXstreamCoreDefaultConverterLookup alloc] init]];
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                             withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                              withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:
#line 489
reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withJavaLangClassLoader:
#line 490
classLoader withComThoughtworksXstreamMapperMapper:mapper];
}


#line 518
- (instancetype)initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                             withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                               withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                                                           withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return
#line 520
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference withComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamCoreDefaultConverterLookup:[[ComThoughtworksXstreamCoreDefaultConverterLookup alloc] init]];
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                  withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                              withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:
#line 518
reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:
#line 519
classLoaderReference withComThoughtworksXstreamMapperMapper:mapper];
}


#line 523
- (instancetype)initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                             withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                               withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoader
                                                                           withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                             withComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)defaultConverterLookup {
  return
#line 526
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:classLoader withComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamConvertersConverterLookup:[[ComThoughtworksXstreamXStream_$1 alloc] initWithComThoughtworksXstreamCoreDefaultConverterLookup:defaultConverterLookup] withComThoughtworksXstreamConvertersConverterRegistry:
#line 531
  [[ComThoughtworksXstreamXStream_$2 alloc] initWithComThoughtworksXstreamCoreDefaultConverterLookup:defaultConverterLookup]];
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                  withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoader
                                              withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                withComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)defaultConverterLookup {
  return [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:
#line 523
reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:
#line 524
classLoader withComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamCoreDefaultConverterLookup:
#line 525
defaultConverterLookup];
}


#line 566
- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                             withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                              withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                 withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                               withComThoughtworksXstreamConvertersConverterRegistry:(id<ComThoughtworksXstreamConvertersConverterRegistry>)converterRegistry {
  return
#line 569
  [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:[[ComThoughtworksXstreamCoreClassLoaderReference alloc] initWithJavaLangClassLoader:classLoader] withComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamConvertersConverterLookup:
#line 570
  converterLookup withComThoughtworksXstreamConvertersConverterRegistry:converterRegistry];
}


#line 604
- (instancetype)initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                             withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                               withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                                                           withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                              withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                                            withComThoughtworksXstreamConvertersConverterRegistry:(id<ComThoughtworksXstreamConvertersConverterRegistry>)converterRegistry {
  if (self = [super init]) {
    
#line 607
    if (reflectionProvider == nil) {
      reflectionProvider = [ComThoughtworksXstreamCoreJVM newReflectionProvider];
    }
    
#line 610
    self->reflectionProvider_ = reflectionProvider;
    
#line 611
    hierarchicalStreamDriver_ = driver;
    
#line 612
    self->classLoaderReference_ = classLoaderReference;
    
#line 613
    self->converterLookup_ = converterLookup;
    
#line 614
    self->converterRegistry_ = converterRegistry;
    
#line 615
    self->mapper_ = mapper == nil ? [self buildMapper] : mapper;
    
#line 617
    [self setupMappers];
    
#line 618
    [self setupSecurity];
    
#line 619
    [self setupAliases];
    
#line 620
    [self setupDefaultImplementations];
    
#line 621
    [self setupConverters];
    
#line 622
    [self setupImmutableTypes];
    
#line 623
    [self setModeWithInt:ComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES];
  }
  return self;
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                  withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                              withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                 withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                               withComThoughtworksXstreamConvertersConverterRegistry:(id<ComThoughtworksXstreamConvertersConverterRegistry>)converterRegistry {
  return [self initComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider:
#line 604
reflectionProvider withComThoughtworksXstreamIoHierarchicalStreamDriver:driver withComThoughtworksXstreamCoreClassLoaderReference:
#line 605
classLoaderReference withComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamConvertersConverterLookup:converterLookup withComThoughtworksXstreamConvertersConverterRegistry:
#line 606
converterRegistry];
}


#line 626
- (id<ComThoughtworksXstreamMapperMapper>)buildMapper {
  
#line 627
  id<ComThoughtworksXstreamMapperMapper> mapper = [[ComThoughtworksXstreamMapperDefaultMapper alloc] initWithComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference_];
  if ([self useXStream11XmlFriendlyMapper]) {
    mapper = [[ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  }
  mapper = [[ComThoughtworksXstreamMapperDynamicProxyMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperPackageAliasingMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperClassAliasingMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperFieldAliasingMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperAttributeAliasingMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperSystemAttributeAliasingMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperImplicitCollectionMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperOuterClassMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperArrayMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperDefaultImplementationsMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
  mapper = [[ComThoughtworksXstreamMapperAttributeMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider_];
  if ([ComThoughtworksXstreamCoreJVM is15]) {
    mapper = [self buildMapperDynamicallyWithNSString:@"com.thoughtworks.xstream.mapper.EnumMapper" withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){
#line 644
      [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamMapperMapper)] } count:1 type:[IOSClass classWithClass:[IOSClass class]]] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ mapper } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    mapper = [[ComThoughtworksXstreamMapperLocalConversionMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
    mapper = [[ComThoughtworksXstreamMapperImmutableTypesMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
    mapper = [[ComThoughtworksXstreamMapperSecurityMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
    if ([ComThoughtworksXstreamCoreJVM is15]) {
      mapper = [self buildMapperDynamicallyWithNSString:ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE_ withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamMapperMapper)],
#line 651
      [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamConvertersConverterRegistry)], [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamConvertersConverterLookup)], [IOSClass classWithClass:[ComThoughtworksXstreamCoreClassLoaderReference class]],
#line 652
      [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamConvertersReflectionReflectionProvider)] } count:5 type:[IOSClass classWithClass:[IOSClass class]]] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ mapper, converterRegistry_, converterLookup_,
#line 653
      classLoaderReference_, reflectionProvider_ } count:5 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    mapper = [self wrapMapperWithComThoughtworksXstreamMapperMapperWrapper:(ComThoughtworksXstreamMapperMapperWrapper *) check_class_cast(mapper, [ComThoughtworksXstreamMapperMapperWrapper class])];
    mapper = [[ComThoughtworksXstreamMapperCachingMapper alloc] initWithComThoughtworksXstreamMapperMapper:mapper];
    return mapper;
  }


#line 660
- (id<ComThoughtworksXstreamMapperMapper>)buildMapperDynamicallyWithNSString:(NSString *)className_
                                                           withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                                                           withNSObjectArray:(IOSObjectArray *)constructorParamValues {
  
#line 662
  @try {
    IOSClass *type = [IOSClass forName:className_ initialize:NO classLoader:[((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference]];
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(type)) getConstructor:constructorParamTypes];
    return (id<ComThoughtworksXstreamMapperMapper>) check_protocol_cast([((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:constructorParamValues], @protocol(ComThoughtworksXstreamMapperMapper));
  }
  @catch (
#line 666
  JavaLangException *e) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$", @"Could not instantiate mapper : ",
#line 668
    className_) withJavaLangThrowable:e];
  }
}


#line 672
- (ComThoughtworksXstreamMapperMapperWrapper *)wrapMapperWithComThoughtworksXstreamMapperMapperWrapper:(ComThoughtworksXstreamMapperMapperWrapper *)next {
  
#line 673
  return next;
}


#line 676
- (jboolean)useXStream11XmlFriendlyMapper {
  
#line 677
  return NO;
}


#line 680
- (void)setupMappers {
  
#line 681
  packageAliasingMapper_ = (ComThoughtworksXstreamMapperPackageAliasingMapper *) check_class_cast([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) lookupMapperOfTypeWithIOSClass:
#line 682
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperPackageAliasingMapper class]]], [ComThoughtworksXstreamMapperPackageAliasingMapper class]);
  classAliasingMapper_ = (ComThoughtworksXstreamMapperClassAliasingMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 684
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperClassAliasingMapper class]]], [ComThoughtworksXstreamMapperClassAliasingMapper class]);
  fieldAliasingMapper_ = (ComThoughtworksXstreamMapperFieldAliasingMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 686
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperFieldAliasingMapper class]]], [ComThoughtworksXstreamMapperFieldAliasingMapper class]);
  attributeMapper_ = (ComThoughtworksXstreamMapperAttributeMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:[IOSClass classWithClass:[ComThoughtworksXstreamMapperAttributeMapper class]]], [ComThoughtworksXstreamMapperAttributeMapper class]);
  attributeAliasingMapper_ = (ComThoughtworksXstreamMapperAttributeAliasingMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 689
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperAttributeAliasingMapper class]]], [ComThoughtworksXstreamMapperAttributeAliasingMapper class]);
  systemAttributeAliasingMapper_ = (ComThoughtworksXstreamMapperSystemAttributeAliasingMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 691
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperSystemAttributeAliasingMapper class]]], [ComThoughtworksXstreamMapperSystemAttributeAliasingMapper class]);
  implicitCollectionMapper_ = (ComThoughtworksXstreamMapperImplicitCollectionMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 693
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperImplicitCollectionMapper class]]], [ComThoughtworksXstreamMapperImplicitCollectionMapper class]);
  defaultImplementationsMapper_ = (ComThoughtworksXstreamMapperDefaultImplementationsMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 695
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperDefaultImplementationsMapper class]]], [ComThoughtworksXstreamMapperDefaultImplementationsMapper class]);
  immutableTypesMapper_ = (ComThoughtworksXstreamMapperImmutableTypesMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 697
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperImmutableTypesMapper class]]], [ComThoughtworksXstreamMapperImmutableTypesMapper class]);
  localConversionMapper_ = (ComThoughtworksXstreamMapperLocalConversionMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 699
  [IOSClass classWithClass:[ComThoughtworksXstreamMapperLocalConversionMapper class]]], [ComThoughtworksXstreamMapperLocalConversionMapper class]);
  securityMapper_ = (ComThoughtworksXstreamMapperSecurityMapper *) check_class_cast([mapper_ lookupMapperOfTypeWithIOSClass:[IOSClass classWithClass:[ComThoughtworksXstreamMapperSecurityMapper class]]], [ComThoughtworksXstreamMapperSecurityMapper class]);
  annotationConfiguration_ = (id<ComThoughtworksXstreamMapperAnnotationConfiguration>) check_protocol_cast([mapper_ lookupMapperOfTypeWithIOSClass:
#line 702
  [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamMapperAnnotationConfiguration)]], @protocol(ComThoughtworksXstreamMapperAnnotationConfiguration));
}


#line 705
- (void)setupSecurity {
  
#line 706
  if (securityMapper_ == nil) {
    return;
  }
  
#line 710
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:ComThoughtworksXstreamSecurityAnyTypePermission_get_ANY_()];
}


#line 713
- (void)setupAliases {
  
#line 714
  if (classAliasingMapper_ == nil) {
    return;
  }
  
#line 718
  [self aliasWithNSString:@"null" withIOSClass:[IOSClass classWithClass:[ComThoughtworksXstreamMapperMapper_Null class]]];
  [self aliasWithNSString:@"int" withIOSClass:[IOSClass classWithClass:[JavaLangInteger class]]];
  [self aliasWithNSString:@"float" withIOSClass:[IOSClass classWithClass:[JavaLangFloat class]]];
  [self aliasWithNSString:@"double" withIOSClass:[IOSClass classWithClass:[JavaLangDouble class]]];
  [self aliasWithNSString:@"long" withIOSClass:[IOSClass classWithClass:[JavaLangLong class]]];
  [self aliasWithNSString:@"short" withIOSClass:[IOSClass classWithClass:[JavaLangShort class]]];
  [self aliasWithNSString:@"char" withIOSClass:[IOSClass classWithClass:[JavaLangCharacter class]]];
  [self aliasWithNSString:@"byte" withIOSClass:[IOSClass classWithClass:[JavaLangByte class]]];
  [self aliasWithNSString:@"boolean" withIOSClass:[IOSClass classWithClass:[JavaLangBoolean class]]];
  [self aliasWithNSString:@"number" withIOSClass:[IOSClass classWithClass:[NSNumber class]]];
  [self aliasWithNSString:@"object" withIOSClass:[IOSClass classWithClass:[NSObject class]]];
  [self aliasWithNSString:@"big-int" withIOSClass:[IOSClass classWithClass:[JavaMathBigInteger class]]];
  [self aliasWithNSString:@"big-decimal" withIOSClass:[IOSClass classWithClass:[JavaMathBigDecimal class]]];
  
#line 732
  [self aliasWithNSString:@"string-buffer" withIOSClass:[IOSClass classWithClass:[JavaLangStringBuffer class]]];
  [self aliasWithNSString:@"string" withIOSClass:[IOSClass classWithClass:[NSString class]]];
  [self aliasWithNSString:@"java-class" withIOSClass:[IOSClass classWithClass:[IOSClass class]]];
  [self aliasWithNSString:@"method" withIOSClass:[IOSClass classWithClass:[JavaLangReflectMethod class]]];
  [self aliasWithNSString:@"constructor" withIOSClass:[IOSClass classWithClass:[JavaLangReflectConstructor class]]];
  [self aliasWithNSString:@"field" withIOSClass:[IOSClass classWithClass:[JavaLangReflectField class]]];
  [self aliasWithNSString:@"date" withIOSClass:[IOSClass classWithClass:[JavaUtilDate class]]];
  [self aliasWithNSString:@"uri" withIOSClass:[IOSClass classWithClass:[JavaNetURI class]]];
  [self aliasWithNSString:@"url" withIOSClass:[IOSClass classWithClass:[JavaNetURL class]]];
  [self aliasWithNSString:@"bit-set" withIOSClass:[IOSClass classWithClass:[JavaUtilBitSet class]]];
  
#line 743
  [self aliasWithNSString:@"map" withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilMap)]];
  [self aliasWithNSString:@"entry" withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilMap_Entry)]];
  [self aliasWithNSString:@"properties" withIOSClass:[IOSClass classWithClass:[JavaUtilProperties class]]];
  [self aliasWithNSString:@"list" withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilList)]];
  [self aliasWithNSString:@"set" withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilSet)]];
  [self aliasWithNSString:@"sorted-set" withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilSortedSet)]];
  
#line 750
  [self aliasWithNSString:@"linked-list" withIOSClass:[IOSClass classWithClass:[JavaUtilLinkedList class]]];
  [self aliasWithNSString:@"vector" withIOSClass:[IOSClass classWithClass:[JavaUtilVector class]]];
  [self aliasWithNSString:@"tree-map" withIOSClass:[IOSClass classWithClass:[JavaUtilTreeMap class]]];
  [self aliasWithNSString:@"tree-set" withIOSClass:[IOSClass classWithClass:[JavaUtilTreeSet class]]];
  [self aliasWithNSString:@"hashtable" withIOSClass:[IOSClass classWithClass:[JavaUtilHashtable class]]];
  
#line 756
  [self aliasWithNSString:@"empty-list" withIOSClass:[((id<JavaUtilList>) nil_chk(JavaUtilCollections_get_EMPTY_LIST_())) getClass]];
  [self aliasWithNSString:@"empty-map" withIOSClass:[((id<JavaUtilMap>) nil_chk(JavaUtilCollections_get_EMPTY_MAP_())) getClass]];
  [self aliasWithNSString:@"empty-set" withIOSClass:[((id<JavaUtilSet>) nil_chk(JavaUtilCollections_get_EMPTY_SET_())) getClass]];
  [self aliasWithNSString:@"singleton-list" withIOSClass:[((id<JavaUtilList>) nil_chk([JavaUtilCollections singletonListWithId:self])) getClass]];
  [self aliasWithNSString:@"singleton-map" withIOSClass:[((id<JavaUtilMap>) nil_chk([JavaUtilCollections singletonMapWithId:self withId:nil])) getClass]];
  [self aliasWithNSString:@"singleton-set" withIOSClass:[((id<JavaUtilSet>) nil_chk([JavaUtilCollections singletonWithId:self])) getClass]];
  
#line 763
  if ([ComThoughtworksXstreamCoreJVM isAWTAvailable]) {
    
#line 769
    [self aliasWithNSString:@"awt-color" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.awt.Color" withBoolean:NO]];
    [self aliasWithNSString:@"awt-font" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.awt.Font" withBoolean:NO]];
    [self aliasWithNSString:@"awt-text-attribute" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.awt.font.TextAttribute"]];
  }
  
#line 774
  if ([ComThoughtworksXstreamCoreJVM isSQLAvailable]) {
    [self aliasWithNSString:@"sql-timestamp" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.sql.Timestamp"]];
    [self aliasWithNSString:@"sql-time" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.sql.Time"]];
    [self aliasWithNSString:@"sql-date" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.sql.Date"]];
  }
  
#line 780
  [self aliasWithNSString:@"file" withIOSClass:[IOSClass classWithClass:[JavaIoFile class]]];
  [self aliasWithNSString:@"locale" withIOSClass:[IOSClass classWithClass:[JavaUtilLocale class]]];
  [self aliasWithNSString:@"gregorian-calendar" withIOSClass:[IOSClass classWithClass:[JavaUtilCalendar class]]];
  
#line 784
  if ([ComThoughtworksXstreamCoreJVM is14]) {
    [self aliasDynamicallyWithNSString:@"auth-subject" withNSString:@"javax.security.auth.Subject"];
    [self aliasWithNSString:@"linked-hash-map" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.util.LinkedHashMap"]];
    [self aliasWithNSString:@"linked-hash-set" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.util.LinkedHashSet"]];
    [self aliasWithNSString:@"trace" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.lang.StackTraceElement"]];
    [self aliasWithNSString:@"currency" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.util.Currency"]];
    [self aliasTypeWithNSString:@"charset" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.nio.charset.Charset"]];
  }
  
#line 793
  if ([ComThoughtworksXstreamCoreJVM is15]) {
    [self aliasDynamicallyWithNSString:@"duration" withNSString:@"javax.xml.datatype.Duration"];
    [self aliasWithNSString:@"concurrent-hash-map" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.util.concurrent.ConcurrentHashMap"]];
    [self aliasWithNSString:@"enum-set" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.util.EnumSet"]];
    [self aliasWithNSString:@"enum-map" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.util.EnumMap"]];
    [self aliasWithNSString:@"string-builder" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.lang.StringBuilder"]];
    [self aliasWithNSString:@"uuid" withIOSClass:[ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"java.util.UUID"]];
  }
}


#line 803
- (void)aliasDynamicallyWithNSString:(NSString *)alias
                        withNSString:(NSString *)className_ {
  
#line 804
  IOSClass *type = [ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:className_];
  if (type != nil) {
    [self aliasWithNSString:alias withIOSClass:type];
  }
}


#line 810
- (void)setupDefaultImplementations {
  
#line 811
  if (defaultImplementationsMapper_ == nil) {
    return;
  }
  [self addDefaultImplementationWithIOSClass:[IOSClass classWithClass:[JavaUtilHashMap class]] withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilMap)]];
  [self addDefaultImplementationWithIOSClass:[IOSClass classWithClass:[JavaUtilArrayList class]] withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilList)]];
  [self addDefaultImplementationWithIOSClass:[IOSClass classWithClass:[JavaUtilHashSet class]] withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilSet)]];
  [self addDefaultImplementationWithIOSClass:[IOSClass classWithClass:[JavaUtilTreeSet class]] withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilSortedSet)]];
  [self addDefaultImplementationWithIOSClass:[IOSClass classWithClass:[JavaUtilGregorianCalendar class]] withIOSClass:[IOSClass classWithClass:[JavaUtilCalendar class]]];
}


#line 821
- (void)setupConverters {
  
#line 822
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersReflectionReflectionConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_ withComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider_] withInt:ComThoughtworksXstreamXStream_PRIORITY_VERY_LOW];
  
#line 824
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersReflectionSerializableConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_ withComThoughtworksXstreamConvertersReflectionReflectionProvider:reflectionProvider_ withComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference_] withInt:
#line 825
  ComThoughtworksXstreamXStream_PRIORITY_LOW];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersReflectionExternalizableConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_ withComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference_] withInt:ComThoughtworksXstreamXStream_PRIORITY_LOW];
  
#line 828
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersBasicNullConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_VERY_HIGH];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicIntConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicFloatConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicDoubleConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicLongConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicShortConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>) check_protocol_cast([[ComThoughtworksXstreamConvertersBasicCharConverter alloc] init], @protocol(ComThoughtworksXstreamConvertersConverter)) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicBooleanConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicByteConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  
#line 838
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicStringConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicStringBufferConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicDateConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsBitSetConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicURIConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicURLConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicBigIntegerConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersBasicBigDecimalConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  
#line 847
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsArrayConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsCharArrayConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsCollectionConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsMapConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsTreeMapConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsTreeSetConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsSingletonCollectionConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersCollectionsPropertiesConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>) check_protocol_cast([[ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter alloc] init], @protocol(ComThoughtworksXstreamConvertersConverter)) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  
#line 858
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersExtendedFileConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  if ([ComThoughtworksXstreamCoreJVM isSQLAvailable]) {
    [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersExtendedSqlTimestampConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
    [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersExtendedSqlTimeConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
    [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersExtendedSqlDateConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  }
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter alloc] initWithComThoughtworksXstreamMapperMapper:mapper_ withComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersExtendedJavaClassConverter alloc] initWithComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersExtendedJavaMethodConverter alloc] initWithComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersExtendedJavaFieldConverter alloc] initWithComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference_] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:[[ComThoughtworksXstreamConvertersExtendedLocaleConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersExtendedGregorianCalendarConverter alloc] init] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  
#line 871
  if ([ComThoughtworksXstreamCoreJVM is14]) {
    
#line 873
    [self registerConverterDynamicallyWithNSString:@"com.thoughtworks.xstream.converters.extended.SubjectConverter" withInt:
#line 874
    ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamMapperMapper)] } count:1 type:[IOSClass classWithClass:[IOSClass class]]] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ mapper_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
    [self registerConverterDynamicallyWithNSString:
#line 876
    @"com.thoughtworks.xstream.converters.extended.ThrowableConverter" withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){
#line 877
      [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamConvertersConverterLookup)] } count:1 type:[IOSClass classWithClass:[IOSClass class]]] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ converterLookup_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      [self registerConverterDynamicallyWithNSString:
#line 879
      @"com.thoughtworks.xstream.converters.extended.StackTraceElementConverter" withInt:
#line 880
      ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:nil withNSObjectArray:nil];
      [self registerConverterDynamicallyWithNSString:
#line 882
      @"com.thoughtworks.xstream.converters.extended.CurrencyConverter" withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:nil withNSObjectArray:
#line 883
      nil];
      [self registerConverterDynamicallyWithNSString:
#line 885
      @"com.thoughtworks.xstream.converters.extended.RegexPatternConverter" withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:
#line 886
      nil withNSObjectArray:nil];
      [self registerConverterDynamicallyWithNSString:@"com.thoughtworks.xstream.converters.extended.CharsetConverter" withInt:
#line 888
      ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:nil withNSObjectArray:nil];
    }
    
#line 891
    if ([ComThoughtworksXstreamCoreJVM is15]) {
      
#line 893
      if ([ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:@"javax.xml.datatype.Duration"] != nil) {
        [self registerConverterDynamicallyWithNSString:
#line 895
        @"com.thoughtworks.xstream.converters.extended.DurationConverter" withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:
#line 896
        nil withNSObjectArray:nil];
      }
      [self registerConverterDynamicallyWithNSString:@"com.thoughtworks.xstream.converters.enums.EnumConverter" withInt:
#line 899
      ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:nil withNSObjectArray:nil];
      [self registerConverterDynamicallyWithNSString:@"com.thoughtworks.xstream.converters.enums.EnumSetConverter" withInt:
#line 901
      ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamMapperMapper)] } count:1 type:[IOSClass classWithClass:[IOSClass class]]] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ mapper_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      [self registerConverterDynamicallyWithNSString:@"com.thoughtworks.xstream.converters.enums.EnumMapConverter" withInt:
#line 903
      ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ [IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamMapperMapper)] } count:1 type:[IOSClass classWithClass:[IOSClass class]]] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ mapper_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      [self registerConverterDynamicallyWithNSString:
#line 905
      @"com.thoughtworks.xstream.converters.basic.StringBuilderConverter" withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:
#line 906
      nil withNSObjectArray:nil];
      [self registerConverterDynamicallyWithNSString:@"com.thoughtworks.xstream.converters.basic.UUIDConverter" withInt:
#line 908
      ComThoughtworksXstreamXStream_PRIORITY_NORMAL withIOSClassArray:nil withNSObjectArray:nil];
    }
    
#line 911
    [self registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamCoreUtilSelfStreamingInstanceChecker alloc] initWithComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withId:self] withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  }


#line 914
- (void)registerConverterDynamicallyWithNSString:(NSString *)className_
                                         withInt:(jint)priority
                               withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                               withNSObjectArray:(IOSObjectArray *)constructorParamValues {
  
#line 916
  @try {
    IOSClass *type = [IOSClass forName:className_ initialize:NO classLoader:[((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference]];
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(type)) getConstructor:constructorParamTypes];
    id instance = [((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:constructorParamValues];
    if ([instance conformsToProtocol: @protocol(ComThoughtworksXstreamConvertersConverter)]) {
      [self registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>) check_protocol_cast(instance, @protocol(ComThoughtworksXstreamConvertersConverter)) withInt:priority];
    }
    else
#line 922
    if ([instance conformsToProtocol: @protocol(ComThoughtworksXstreamConvertersSingleValueConverter)]) {
      [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>) check_protocol_cast(instance, @protocol(ComThoughtworksXstreamConvertersSingleValueConverter)) withInt:priority];
    }
  }
  @catch (
#line 925
  JavaLangException *e) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$", @"Could not instantiate converter : ",
#line 927
    className_) withJavaLangThrowable:e];
  }
}


#line 931
- (void)setupImmutableTypes {
  
#line 932
  if (immutableTypesMapper_ == nil) {
    return;
  }
  
#line 937
  [self addImmutableTypeWithIOSClass:[IOSClass booleanClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangBoolean class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass byteClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangByte class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass charClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangCharacter class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass doubleClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangDouble class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass floatClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangFloat class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass intClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangInteger class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass longClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangLong class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass shortClass]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaLangShort class]]];
  
#line 955
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[ComThoughtworksXstreamMapperMapper_Null class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaMathBigDecimal class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaMathBigInteger class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[NSString class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaNetURI class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaNetURL class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[JavaIoFile class]]];
  [self addImmutableTypeWithIOSClass:[IOSClass classWithClass:[IOSClass class]]];
  
#line 964
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilList>) nil_chk(JavaUtilCollections_get_EMPTY_LIST_())) getClass]];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilSet>) nil_chk(JavaUtilCollections_get_EMPTY_SET_())) getClass]];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilMap>) nil_chk(JavaUtilCollections_get_EMPTY_MAP_())) getClass]];
  
#line 968
  if ([ComThoughtworksXstreamCoreJVM isAWTAvailable]) {
    [self addImmutableTypeDynamicallyWithNSString:@"java.awt.font.TextAttribute"];
  }
  
#line 972
  if ([ComThoughtworksXstreamCoreJVM is14]) {
    
#line 974
    [self addImmutableTypeDynamicallyWithNSString:@"java.nio.charset.Charset"];
    [self addImmutableTypeDynamicallyWithNSString:@"java.util.Currency"];
  }
}


#line 979
- (void)addImmutableTypeDynamicallyWithNSString:(NSString *)className_ {
  
#line 980
  IOSClass *type = [ComThoughtworksXstreamCoreJVM loadClassForNameWithNSString:className_];
  if (type != nil) {
    [self addImmutableTypeWithIOSClass:type];
  }
}


#line 986
- (void)setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:(id<ComThoughtworksXstreamMarshallingStrategy>)marshallingStrategy {
  
#line 987
  self->marshallingStrategy_ = marshallingStrategy;
}


#line 996
- (NSString *)toXMLWithId:(id)obj {
  
#line 997
  JavaIoWriter *writer = [[JavaIoStringWriter alloc] init];
  [self toXMLWithId:obj withJavaIoWriter:writer];
  return [writer description];
}


#line 1009
- (void)toXMLWithId:(id)obj
   withJavaIoWriter:(JavaIoWriter *)outArg {
  
#line 1010
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer = [((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:outArg];
  @try {
    [self marshalWithId:obj withComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
  @finally {
    
#line 1014
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) flush];
  }
}


#line 1025
- (void)toXMLWithId:(id)obj
withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  
#line 1026
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer = [((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg];
  @try {
    [self marshalWithId:obj withComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
  @finally {
    
#line 1030
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) flush];
  }
}

- (void)marshalWithId:(id)obj
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  
#line 1041
  [self marshalWithId:obj withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersDataHolder:nil];
}


#line 1053
- (void)marshalWithId:(id)obj
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersDataHolder:(id<ComThoughtworksXstreamConvertersDataHolder>)dataHolder {
  
#line 1054
  [((id<ComThoughtworksXstreamMarshallingStrategy>) nil_chk(marshallingStrategy_)) marshalWithComThoughtworksXstreamIoHierarchicalStreamWriter:writer withId:obj withComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withComThoughtworksXstreamMapperMapper:mapper_ withComThoughtworksXstreamConvertersDataHolder:dataHolder];
}


#line 1063
- (id)fromXMLWithNSString:(NSString *)xml {
  
#line 1064
  return [self fromXMLWithJavaIoReader:[[JavaIoStringReader alloc] initWithNSString:xml]];
}


#line 1073
- (id)fromXMLWithJavaIoReader:(JavaIoReader *)reader {
  
#line 1074
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:reader] withId:nil];
}


#line 1083
- (id)fromXMLWithJavaIoInputStream:(JavaIoInputStream *)input {
  
#line 1084
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:input] withId:nil];
}


#line 1097
- (id)fromXMLWithJavaNetURL:(JavaNetURL *)url {
  
#line 1098
  return [self fromXMLWithJavaNetURL:url withId:nil];
}


#line 1111
- (id)fromXMLWithJavaIoFile:(JavaIoFile *)file {
  
#line 1112
  return [self fromXMLWithJavaIoFile:file withId:nil];
}


#line 1124
- (id)fromXMLWithNSString:(NSString *)xml
                   withId:(id)root {
  
#line 1125
  return [self fromXMLWithJavaIoReader:[[JavaIoStringReader alloc] initWithNSString:xml] withId:root];
}


#line 1137
- (id)fromXMLWithJavaIoReader:(JavaIoReader *)xml
                       withId:(id)root {
  
#line 1138
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:xml] withId:root];
}


#line 1154
- (id)fromXMLWithJavaNetURL:(JavaNetURL *)url
                     withId:(id)root {
  
#line 1155
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaNetURL:url] withId:root];
}


#line 1171
- (id)fromXMLWithJavaIoFile:(JavaIoFile *)file
                     withId:(id)root {
  
#line 1172
  id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader = [((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoFile:file];
  @try {
    return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:root];
  }
  @finally {
    
#line 1176
    [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) close];
  }
}


#line 1189
- (id)fromXMLWithJavaIoInputStream:(JavaIoInputStream *)input
                            withId:(id)root {
  
#line 1190
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:input] withId:root];
}


#line 1199
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  
#line 1200
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:nil withComThoughtworksXstreamConvertersDataHolder:nil];
}


#line 1213
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                             withId:(id)root {
  
#line 1214
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:root withComThoughtworksXstreamConvertersDataHolder:nil];
}


#line 1232
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                             withId:(id)root
                     withComThoughtworksXstreamConvertersDataHolder:(id<ComThoughtworksXstreamConvertersDataHolder>)dataHolder {
  
#line 1233
  @try {
    return [((id<ComThoughtworksXstreamMarshallingStrategy>) nil_chk(marshallingStrategy_)) unmarshalWithId:root withComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersDataHolder:dataHolder withComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withComThoughtworksXstreamMapperMapper:mapper_];
  }
  @catch (ComThoughtworksXstreamConvertersConversionException *e) {
    JavaLangPackage *pkg = [[self getClass] getPackage];
    NSString *version_ = pkg != nil ? [pkg getImplementationVersion] : nil;
    [((ComThoughtworksXstreamConvertersConversionException *) nil_chk(e)) addWithNSString:@"version" withNSString:version_ != nil ? version_ : @"not available"];
    @throw e;
  }
}


#line 1254
- (void)aliasWithNSString:(NSString *)name
             withIOSClass:(IOSClass *)type {
  
#line 1255
  if (classAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1257
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperClassAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperClassAliasingMapper *) nil_chk(classAliasingMapper_)) addClassAliasWithNSString:name withIOSClass:type];
}


#line 1274
- (void)aliasTypeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)type {
  
#line 1275
  if (classAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1277
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperClassAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperClassAliasingMapper *) nil_chk(classAliasingMapper_)) addTypeAliasWithNSString:name withIOSClass:type];
}


#line 1295
- (void)aliasWithNSString:(NSString *)name
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)defaultImplementation {
  
#line 1296
  [self aliasWithNSString:name withIOSClass:type];
  [self addDefaultImplementationWithIOSClass:defaultImplementation withIOSClass:type];
}


#line 1312
- (void)aliasPackageWithNSString:(NSString *)name
                    withNSString:(NSString *)pkgName {
  
#line 1313
  if (packageAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1315
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperPackageAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperPackageAliasingMapper *) nil_chk(packageAliasingMapper_)) addPackageAliasWithNSString:name withNSString:pkgName];
}


#line 1332
- (void)aliasFieldWithNSString:(NSString *)alias
                  withIOSClass:(IOSClass *)definedIn
                  withNSString:(NSString *)fieldName {
  
#line 1333
  if (fieldAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1335
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperFieldAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperFieldAliasingMapper *) nil_chk(fieldAliasingMapper_)) addFieldAliasWithNSString:alias withIOSClass:definedIn withNSString:fieldName];
}


#line 1350
- (void)aliasAttributeWithNSString:(NSString *)alias
                      withNSString:(NSString *)attributeName {
  
#line 1351
  if (attributeAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1353
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperAttributeAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperAttributeAliasingMapper *) nil_chk(attributeAliasingMapper_)) addAliasForWithNSString:attributeName withNSString:alias];
}


#line 1372
- (void)aliasSystemAttributeWithNSString:(NSString *)alias
                            withNSString:(NSString *)systemAttributeName {
  
#line 1373
  if (systemAttributeAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1375
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperSystemAttributeAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperSystemAttributeAliasingMapper *) nil_chk(systemAttributeAliasingMapper_)) addAliasForWithNSString:systemAttributeName withNSString:alias];
}


#line 1393
- (void)aliasAttributeWithIOSClass:(IOSClass *)definedIn
                      withNSString:(NSString *)attributeName
                      withNSString:(NSString *)alias {
  
#line 1394
  [self aliasFieldWithNSString:alias withIOSClass:definedIn withNSString:attributeName];
  [self useAttributeForWithIOSClass:definedIn withNSString:attributeName];
}


#line 1409
- (void)useAttributeForWithNSString:(NSString *)fieldName
                       withIOSClass:(IOSClass *)type {
  
#line 1410
  if (attributeMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1412
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperAttributeMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperAttributeMapper *) nil_chk(attributeMapper_)) addAttributeForWithNSString:fieldName withIOSClass:type];
}


#line 1428
- (void)useAttributeForWithIOSClass:(IOSClass *)definedIn
                       withNSString:(NSString *)fieldName {
  
#line 1429
  if (attributeMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1431
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperAttributeMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperAttributeMapper *) nil_chk(attributeMapper_)) addAttributeForWithIOSClass:definedIn withNSString:fieldName];
}


#line 1445
- (void)useAttributeForWithIOSClass:(IOSClass *)type {
  
#line 1446
  if (attributeMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1448
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperAttributeMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperAttributeMapper *) nil_chk(attributeMapper_)) addAttributeForWithIOSClass:type];
}


#line 1464
- (void)addDefaultImplementationWithIOSClass:(IOSClass *)defaultImplementation
                                withIOSClass:(IOSClass *)ofType {
  
#line 1465
  if (defaultImplementationsMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1467
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperDefaultImplementationsMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperDefaultImplementationsMapper *) nil_chk(defaultImplementationsMapper_)) addDefaultImplementationWithIOSClass:defaultImplementation withIOSClass:ofType];
}


#line 1479
- (void)addImmutableTypeWithIOSClass:(IOSClass *)type {
  
#line 1480
  if (immutableTypesMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1482
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperImmutableTypesMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperImmutableTypesMapper *) nil_chk(immutableTypesMapper_)) addImmutableTypeWithIOSClass:type];
}


#line 1487
- (void)registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  
#line 1488
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:converter withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}


#line 1491
- (void)registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter
                                                               withInt:(jint)priority {
  
#line 1492
  if (converterRegistry_ != nil) {
    [converterRegistry_ registerConverterWithComThoughtworksXstreamConvertersConverter:converter withInt:priority];
  }
}


#line 1497
- (void)registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>)converter {
  
#line 1498
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:converter withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}


#line 1501
- (void)registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>)converter
                                                                          withInt:(jint)priority {
  
#line 1502
  if (converterRegistry_ != nil) {
    [converterRegistry_ registerConverterWithComThoughtworksXstreamConvertersConverter:[[ComThoughtworksXstreamConvertersSingleValueConverterWrapper alloc] initWithComThoughtworksXstreamConvertersSingleValueConverter:converter] withInt:priority];
  }
}


#line 1518
- (void)registerLocalConverterWithIOSClass:(IOSClass *)definedIn
                              withNSString:(NSString *)fieldName
withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  
#line 1519
  if (localConversionMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1521
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperLocalConversionMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperLocalConversionMapper *) nil_chk(localConversionMapper_)) registerLocalConverterWithIOSClass:definedIn withNSString:fieldName withComThoughtworksXstreamConvertersConverter:converter];
}


#line 1537
- (void)registerLocalConverterWithIOSClass:(IOSClass *)definedIn
                              withNSString:(NSString *)fieldName
withComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>)converter {
  
#line 1539
  [self registerLocalConverterWithIOSClass:definedIn withNSString:fieldName withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>) check_protocol_cast([[ComThoughtworksXstreamConvertersSingleValueConverterWrapper alloc] initWithComThoughtworksXstreamConvertersSingleValueConverter:
#line 1540
  converter], @protocol(ComThoughtworksXstreamConvertersConverter))];
}


#line 1550
- (id<ComThoughtworksXstreamMapperMapper>)getMapper {
  
#line 1551
  return mapper_;
}


#line 1560
- (id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)getReflectionProvider {
  
#line 1561
  return reflectionProvider_;
}


#line 1564
- (id<ComThoughtworksXstreamConvertersConverterLookup>)getConverterLookup {
  
#line 1565
  return converterLookup_;
}


#line 1581
- (void)setModeWithInt:(jint)mode {
  
#line 1582
  switch (mode) {
    case ComThoughtworksXstreamXStream_NO_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:[[ComThoughtworksXstreamCoreTreeMarshallingStrategy alloc] init]];
    break;
    case ComThoughtworksXstreamXStream_ID_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:[[ComThoughtworksXstreamCoreReferenceByIdMarshallingStrategy alloc] init]];
    break;
    case ComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:[[ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy alloc] initWithInt:ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_RELATIVE_()]];
    
#line 1592
    break;
    case ComThoughtworksXstreamXStream_XPATH_ABSOLUTE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:[[ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy alloc] initWithInt:ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_ABSOLUTE_()]];
    
#line 1596
    break;
    case ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_RELATIVE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:[[ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy alloc] initWithInt:
#line 1599
    ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_RELATIVE_() | ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_SINGLE_NODE_()]];
    
#line 1601
    break;
    case ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:[[ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy alloc] initWithInt:
#line 1604
    ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_ABSOLUTE_() | ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_SINGLE_NODE_()]];
    
#line 1606
    break;
    default:
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Unknown mode : ", mode)];
  }
}


#line 1622
- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName {
  
#line 1623
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:nil];
}


#line 1640
- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName
                             withIOSClass:(IOSClass *)itemType {
  
#line 1641
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:itemType];
}


#line 1661
- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName
                             withNSString:(NSString *)itemFieldName
                             withIOSClass:(IOSClass *)itemType {
  
#line 1663
  [self addImplicitMapWithIOSClass:ownerType withNSString:fieldName withNSString:itemFieldName withIOSClass:itemType withNSString:nil];
}


#line 1675
- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName {
  
#line 1676
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName];
}


#line 1694
- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName
                        withIOSClass:(IOSClass *)itemType {
  
#line 1695
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withIOSClass:itemType];
}


#line 1712
- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName
                        withNSString:(NSString *)itemName {
  
#line 1713
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:itemName withIOSClass:nil];
}


#line 1732
- (void)addImplicitMapWithIOSClass:(IOSClass *)ownerType
                      withNSString:(NSString *)fieldName
                      withIOSClass:(IOSClass *)itemType
                      withNSString:(NSString *)keyFieldName {
  
#line 1733
  [self addImplicitMapWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:itemType withNSString:keyFieldName];
}


#line 1754
- (void)addImplicitMapWithIOSClass:(IOSClass *)ownerType
                      withNSString:(NSString *)fieldName
                      withNSString:(NSString *)itemName
                      withIOSClass:(IOSClass *)itemType
                      withNSString:(NSString *)keyFieldName {
  
#line 1756
  if (implicitCollectionMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 1758
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperImplicitCollectionMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperImplicitCollectionMapper *) nil_chk(implicitCollectionMapper_)) addWithIOSClass:ownerType withNSString:fieldName withNSString:itemName withIOSClass:itemType withNSString:keyFieldName];
}


#line 1771
- (id<ComThoughtworksXstreamConvertersDataHolder>)newDataHolder {
  
#line 1772
  return [[ComThoughtworksXstreamCoreMapBackedDataHolder alloc] init];
}


#line 1788
- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoWriter:(JavaIoWriter *)writer {
  
#line 1789
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:writer] withNSString:@"object-stream"];
}


#line 1805
- (JavaIoObjectOutputStream *)createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  
#line 1807
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:writer withNSString:@"object-stream"];
}


#line 1819
- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoWriter:(JavaIoWriter *)writer
                                                          withNSString:(NSString *)rootNodeName {
  
#line 1821
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:writer] withNSString:rootNodeName];
}


#line 1837
- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  
#line 1838
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg] withNSString:@"object-stream"];
}


#line 1850
- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                                                withNSString:(NSString *)rootNodeName {
  
#line 1852
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg] withNSString:rootNodeName];
}


#line 1884
- (JavaIoObjectOutputStream *)createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                                                                                              withNSString:(NSString *)rootNodeName {
  
#line 1886
  ComThoughtworksXstreamIoStatefulWriter *statefulWriter = [[ComThoughtworksXstreamIoStatefulWriter alloc] initWithComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  [statefulWriter startNodeWithNSString:rootNodeName withIOSClass:nil];
  return [[ComThoughtworksXstreamCoreUtilCustomObjectOutputStream alloc] initWithComThoughtworksXstreamCoreUtilCustomObjectOutputStream_StreamCallback:[[ComThoughtworksXstreamXStream_$3 alloc] initWithComThoughtworksXstreamXStream:self withComThoughtworksXstreamIoStatefulWriter:statefulWriter]];
}


#line 1928
- (JavaIoObjectInputStream *)createObjectInputStreamWithJavaIoReader:(JavaIoReader *)xmlReader {
  
#line 1929
  return [self createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:xmlReader]];
}


#line 1941
- (JavaIoObjectInputStream *)createObjectInputStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  
#line 1942
  return [self createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:inArg]];
}


#line 1960
- (JavaIoObjectInputStream *)createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  
#line 1962
  return [[ComThoughtworksXstreamCoreUtilCustomObjectInputStream alloc] initWithComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:[[ComThoughtworksXstreamXStream_$4 alloc] initWithComThoughtworksXstreamXStream:self withComThoughtworksXstreamIoHierarchicalStreamReader:reader] withComThoughtworksXstreamCoreClassLoaderReference:
#line 1994
  classLoaderReference_];
}


#line 2007
- (void)setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  
#line 2008
  [((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) setReferenceWithJavaLangClassLoader:classLoader];
}


#line 2016
- (JavaLangClassLoader *)getClassLoader {
  
#line 2017
  return [((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference];
}


#line 2028
- (ComThoughtworksXstreamCoreClassLoaderReference *)getClassLoaderReference {
  
#line 2029
  return classLoaderReference_;
}


#line 2040
- (void)omitFieldWithIOSClass:(IOSClass *)definedIn
                 withNSString:(NSString *)fieldName {
  
#line 2041
  if (fieldAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 2043
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperFieldAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperFieldAliasingMapper *) nil_chk(fieldAliasingMapper_)) omitFieldWithIOSClass:definedIn withNSString:fieldName];
}


#line 2053
- (void)ignoreUnknownElements {
  
#line 2054
  [self ignoreUnknownElementsWithJavaUtilRegexPattern:ComThoughtworksXstreamXStream_IGNORE_ALL_];
}


#line 2064
- (void)ignoreUnknownElementsWithNSString:(NSString *)pattern {
  
#line 2065
  [self ignoreUnknownElementsWithJavaUtilRegexPattern:[JavaUtilRegexPattern compileWithNSString:pattern]];
}


#line 2075
- (void)ignoreUnknownElementsWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern {
  
#line 2076
  if (fieldAliasingMapper_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ",
#line 2078
    [[IOSClass classWithClass:[ComThoughtworksXstreamMapperFieldAliasingMapper class]] getName], @" available")];
  }
  [((ComThoughtworksXstreamMapperFieldAliasingMapper *) nil_chk(fieldAliasingMapper_)) addFieldsToIgnoreWithJavaUtilRegexPattern:pattern];
}


#line 2090
- (void)processAnnotationsWithIOSClassArray:(IOSObjectArray *)types {
  
#line 2091
  if (annotationConfiguration_ == nil) {
    @throw [[ComThoughtworksXstreamInitializationException alloc] initWithNSString:JreStrcat("$$$", @"No ", ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE_, @" available")];
  }
  
#line 2095
  [((id<ComThoughtworksXstreamMapperAnnotationConfiguration>) nil_chk(annotationConfiguration_)) processAnnotationsWithIOSClassArray:types];
}


#line 2107
- (void)processAnnotationsWithIOSClass:(IOSClass *)type {
  
#line 2108
  [self processAnnotationsWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ type } count:1 type:[IOSClass classWithClass:[IOSClass class]]]];
}


#line 2122
- (void)autodetectAnnotationsWithBoolean:(jboolean)mode {
  
#line 2123
  if (annotationConfiguration_ != nil) {
    [annotationConfiguration_ autodetectAnnotationsWithBoolean:mode];
  }
}


#line 2141
- (void)addPermissionWithComThoughtworksXstreamSecurityTypePermission:(id<ComThoughtworksXstreamSecurityTypePermission>)permission {
  
#line 2142
  if (securityMapper_ != nil) {
    [securityMapper_ addPermissionWithComThoughtworksXstreamSecurityTypePermission:permission];
  }
}


#line 2154
- (void)allowTypesWithNSStringArray:(IOSObjectArray *)names {
  
#line 2155
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityExplicitTypePermission alloc] initWithNSStringArray:names]];
}


#line 2165
- (void)allowTypesWithIOSClassArray:(IOSObjectArray *)types {
  
#line 2166
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityExplicitTypePermission alloc] initWithIOSClassArray:types]];
}


#line 2176
- (void)allowTypeHierarchyWithIOSClass:(IOSClass *)type {
  
#line 2177
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityTypeHierarchyPermission alloc] initWithIOSClass:type]];
}


#line 2188
- (void)allowTypesByRegExpWithNSStringArray:(IOSObjectArray *)regexps {
  
#line 2189
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityRegExpTypePermission alloc] initWithNSStringArray:regexps]];
}


#line 2200
- (void)allowTypesByRegExpWithJavaUtilRegexPatternArray:(IOSObjectArray *)regexps {
  
#line 2201
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityRegExpTypePermission alloc] initWithJavaUtilRegexPatternArray:regexps]];
}


#line 2223
- (void)allowTypesByWildcardWithNSStringArray:(IOSObjectArray *)patterns {
  
#line 2224
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityWildcardTypePermission alloc] initWithNSStringArray:patterns]];
}


#line 2234
- (void)denyPermissionWithComThoughtworksXstreamSecurityTypePermission:(id<ComThoughtworksXstreamSecurityTypePermission>)permission {
  
#line 2235
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityNoPermission alloc] initWithComThoughtworksXstreamSecurityTypePermission:permission]];
}


#line 2245
- (void)denyTypesWithNSStringArray:(IOSObjectArray *)names {
  
#line 2246
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityExplicitTypePermission alloc] initWithNSStringArray:names]];
}


#line 2256
- (void)denyTypesWithIOSClassArray:(IOSObjectArray *)types {
  
#line 2257
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityExplicitTypePermission alloc] initWithIOSClassArray:types]];
}


#line 2267
- (void)denyTypeHierarchyWithIOSClass:(IOSClass *)type {
  
#line 2268
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityTypeHierarchyPermission alloc] initWithIOSClass:type]];
}


#line 2279
- (void)denyTypesByRegExpWithNSStringArray:(IOSObjectArray *)regexps {
  
#line 2280
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityRegExpTypePermission alloc] initWithNSStringArray:regexps]];
}


#line 2291
- (void)denyTypesByRegExpWithJavaUtilRegexPatternArray:(IOSObjectArray *)regexps {
  
#line 2292
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityRegExpTypePermission alloc] initWithJavaUtilRegexPatternArray:regexps]];
}


#line 2314
- (void)denyTypesByWildcardWithNSStringArray:(IOSObjectArray *)patterns {
  
#line 2315
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:[[ComThoughtworksXstreamSecurityWildcardTypePermission alloc] initWithNSStringArray:patterns]];
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamXStream *)other {
  [super copyAllFieldsTo:other];
  other->annotationConfiguration_ = annotationConfiguration_;
  other->attributeAliasingMapper_ = attributeAliasingMapper_;
  other->attributeMapper_ = attributeMapper_;
  other->classAliasingMapper_ = classAliasingMapper_;
  other->classLoaderReference_ = classLoaderReference_;
  other->converterLookup_ = converterLookup_;
  other->converterRegistry_ = converterRegistry_;
  other->defaultImplementationsMapper_ = defaultImplementationsMapper_;
  other->fieldAliasingMapper_ = fieldAliasingMapper_;
  other->hierarchicalStreamDriver_ = hierarchicalStreamDriver_;
  other->immutableTypesMapper_ = immutableTypesMapper_;
  other->implicitCollectionMapper_ = implicitCollectionMapper_;
  other->localConversionMapper_ = localConversionMapper_;
  other->mapper_ = mapper_;
  other->marshallingStrategy_ = marshallingStrategy_;
  other->packageAliasingMapper_ = packageAliasingMapper_;
  other->reflectionProvider_ = reflectionProvider_;
  other->securityMapper_ = securityMapper_;
  other->systemAttributeAliasingMapper_ = systemAttributeAliasingMapper_;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamXStream class]) {
    ComThoughtworksXstreamXStream_IGNORE_ALL_ =
#line 342
    [JavaUtilRegexPattern compileWithNSString:@".*"];
    ComThoughtworksXstreamXStream_initialized = YES;
  }
}

+ (IOSObjectArray *)__annotations_ComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_ComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_ComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_ComThoughtworksXstreamXStreamWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamIoHierarchicalStreamDriver:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamIoHierarchicalStreamDriver:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:withComThoughtworksXstreamMapperMapper:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamCoreDefaultConverterLookup:", "XStream", NULL, 0x2, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamConvertersConverterRegistry:", "XStream", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamConvertersConverterRegistry:", "XStream", NULL, 0x1, NULL },
    { "buildMapper", NULL, "Lcom.thoughtworks.xstream.mapper.Mapper;", 0x2, NULL },
    { "buildMapperDynamicallyWithNSString:withIOSClassArray:withNSObjectArray:", "buildMapperDynamically", "Lcom.thoughtworks.xstream.mapper.Mapper;", 0x2, NULL },
    { "wrapMapperWithComThoughtworksXstreamMapperMapperWrapper:", "wrapMapper", "Lcom.thoughtworks.xstream.mapper.MapperWrapper;", 0x4, NULL },
    { "useXStream11XmlFriendlyMapper", NULL, "Z", 0x4, NULL },
    { "setupMappers", NULL, "V", 0x2, NULL },
    { "setupSecurity", NULL, "V", 0x4, NULL },
    { "setupAliases", NULL, "V", 0x4, NULL },
    { "aliasDynamicallyWithNSString:withNSString:", "aliasDynamically", "V", 0x2, NULL },
    { "setupDefaultImplementations", NULL, "V", 0x4, NULL },
    { "setupConverters", NULL, "V", 0x4, NULL },
    { "registerConverterDynamicallyWithNSString:withInt:withIOSClassArray:withNSObjectArray:", "registerConverterDynamically", "V", 0x2, NULL },
    { "setupImmutableTypes", NULL, "V", 0x4, NULL },
    { "addImmutableTypeDynamicallyWithNSString:", "addImmutableTypeDynamically", "V", 0x2, NULL },
    { "setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:", "setMarshallingStrategy", "V", 0x1, NULL },
    { "toXMLWithId:", "toXML", "Ljava.lang.String;", 0x1, NULL },
    { "toXMLWithId:withJavaIoWriter:", "toXML", "V", 0x1, NULL },
    { "toXMLWithId:withJavaIoOutputStream:", "toXML", "V", 0x1, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:", "marshal", "V", 0x1, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersDataHolder:", "marshal", "V", 0x1, NULL },
    { "fromXMLWithNSString:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaIoReader:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaIoInputStream:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaNetURL:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaIoFile:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithNSString:withId:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaIoReader:withId:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaNetURL:withId:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaIoFile:withId:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "fromXMLWithJavaIoInputStream:withId:", "fromXML", "Ljava.lang.Object;", 0x1, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withId:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withId:withComThoughtworksXstreamConvertersDataHolder:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
    { "aliasWithNSString:withIOSClass:", "alias", "V", 0x1, NULL },
    { "aliasTypeWithNSString:withIOSClass:", "aliasType", "V", 0x1, NULL },
    { "aliasWithNSString:withIOSClass:withIOSClass:", "alias", "V", 0x1, NULL },
    { "aliasPackageWithNSString:withNSString:", "aliasPackage", "V", 0x1, NULL },
    { "aliasFieldWithNSString:withIOSClass:withNSString:", "aliasField", "V", 0x1, NULL },
    { "aliasAttributeWithNSString:withNSString:", "aliasAttribute", "V", 0x1, NULL },
    { "aliasSystemAttributeWithNSString:withNSString:", "aliasSystemAttribute", "V", 0x1, NULL },
    { "aliasAttributeWithIOSClass:withNSString:withNSString:", "aliasAttribute", "V", 0x1, NULL },
    { "useAttributeForWithNSString:withIOSClass:", "useAttributeFor", "V", 0x1, NULL },
    { "useAttributeForWithIOSClass:withNSString:", "useAttributeFor", "V", 0x1, NULL },
    { "useAttributeForWithIOSClass:", "useAttributeFor", "V", 0x1, NULL },
    { "addDefaultImplementationWithIOSClass:withIOSClass:", "addDefaultImplementation", "V", 0x1, NULL },
    { "addImmutableTypeWithIOSClass:", "addImmutableType", "V", 0x1, NULL },
    { "registerConverterWithComThoughtworksXstreamConvertersConverter:", "registerConverter", "V", 0x1, NULL },
    { "registerConverterWithComThoughtworksXstreamConvertersConverter:withInt:", "registerConverter", "V", 0x1, NULL },
    { "registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:", "registerConverter", "V", 0x1, NULL },
    { "registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:withInt:", "registerConverter", "V", 0x1, NULL },
    { "registerLocalConverterWithIOSClass:withNSString:withComThoughtworksXstreamConvertersConverter:", "registerLocalConverter", "V", 0x1, NULL },
    { "registerLocalConverterWithIOSClass:withNSString:withComThoughtworksXstreamConvertersSingleValueConverter:", "registerLocalConverter", "V", 0x1, NULL },
    { "getMapper", NULL, "Lcom.thoughtworks.xstream.mapper.Mapper;", 0x1, NULL },
    { "getReflectionProvider", NULL, "Lcom.thoughtworks.xstream.converters.reflection.ReflectionProvider;", 0x1, NULL },
    { "getConverterLookup", NULL, "Lcom.thoughtworks.xstream.converters.ConverterLookup;", 0x1, NULL },
    { "setModeWithInt:", "setMode", "V", 0x1, NULL },
    { "addImplicitCollectionWithIOSClass:withNSString:", "addImplicitCollection", "V", 0x1, NULL },
    { "addImplicitCollectionWithIOSClass:withNSString:withIOSClass:", "addImplicitCollection", "V", 0x1, NULL },
    { "addImplicitCollectionWithIOSClass:withNSString:withNSString:withIOSClass:", "addImplicitCollection", "V", 0x1, NULL },
    { "addImplicitArrayWithIOSClass:withNSString:", "addImplicitArray", "V", 0x1, NULL },
    { "addImplicitArrayWithIOSClass:withNSString:withIOSClass:", "addImplicitArray", "V", 0x1, NULL },
    { "addImplicitArrayWithIOSClass:withNSString:withNSString:", "addImplicitArray", "V", 0x1, NULL },
    { "addImplicitMapWithIOSClass:withNSString:withIOSClass:withNSString:", "addImplicitMap", "V", 0x1, NULL },
    { "addImplicitMapWithIOSClass:withNSString:withNSString:withIOSClass:withNSString:", "addImplicitMap", "V", 0x1, NULL },
    { "newDataHolder", NULL, "Lcom.thoughtworks.xstream.converters.DataHolder;", 0x1, NULL },
    { "createObjectOutputStreamWithJavaIoWriter:", "createObjectOutputStream", "Ljava.io.ObjectOutputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:", "createObjectOutputStream", "Ljava.io.ObjectOutputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectOutputStreamWithJavaIoWriter:withNSString:", "createObjectOutputStream", "Ljava.io.ObjectOutputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectOutputStreamWithJavaIoOutputStream:", "createObjectOutputStream", "Ljava.io.ObjectOutputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectOutputStreamWithJavaIoOutputStream:withNSString:", "createObjectOutputStream", "Ljava.io.ObjectOutputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:withNSString:", "createObjectOutputStream", "Ljava.io.ObjectOutputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectInputStreamWithJavaIoReader:", "createObjectInputStream", "Ljava.io.ObjectInputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectInputStreamWithJavaIoInputStream:", "createObjectInputStream", "Ljava.io.ObjectInputStream;", 0x1, "Ljava.io.IOException;" },
    { "createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:", "createObjectInputStream", "Ljava.io.ObjectInputStream;", 0x1, "Ljava.io.IOException;" },
    { "setClassLoaderWithJavaLangClassLoader:", "setClassLoader", "V", 0x1, NULL },
    { "getClassLoader", NULL, "Ljava.lang.ClassLoader;", 0x1, NULL },
    { "getClassLoaderReference", NULL, "Lcom.thoughtworks.xstream.core.ClassLoaderReference;", 0x1, NULL },
    { "omitFieldWithIOSClass:withNSString:", "omitField", "V", 0x1, NULL },
    { "ignoreUnknownElements", NULL, "V", 0x1, NULL },
    { "ignoreUnknownElementsWithNSString:", "ignoreUnknownElements", "V", 0x1, NULL },
    { "ignoreUnknownElementsWithJavaUtilRegexPattern:", "ignoreUnknownElements", "V", 0x2, NULL },
    { "processAnnotationsWithIOSClassArray:", "processAnnotations", "V", 0x1, NULL },
    { "processAnnotationsWithIOSClass:", "processAnnotations", "V", 0x1, NULL },
    { "autodetectAnnotationsWithBoolean:", "autodetectAnnotations", "V", 0x1, NULL },
    { "addPermissionWithComThoughtworksXstreamSecurityTypePermission:", "addPermission", "V", 0x1, NULL },
    { "allowTypesWithNSStringArray:", "allowTypes", "V", 0x1, NULL },
    { "allowTypesWithIOSClassArray:", "allowTypes", "V", 0x1, NULL },
    { "allowTypeHierarchyWithIOSClass:", "allowTypeHierarchy", "V", 0x1, NULL },
    { "allowTypesByRegExpWithNSStringArray:", "allowTypesByRegExp", "V", 0x1, NULL },
    { "allowTypesByRegExpWithJavaUtilRegexPatternArray:", "allowTypesByRegExp", "V", 0x1, NULL },
    { "allowTypesByWildcardWithNSStringArray:", "allowTypesByWildcard", "V", 0x1, NULL },
    { "denyPermissionWithComThoughtworksXstreamSecurityTypePermission:", "denyPermission", "V", 0x1, NULL },
    { "denyTypesWithNSStringArray:", "denyTypes", "V", 0x1, NULL },
    { "denyTypesWithIOSClassArray:", "denyTypes", "V", 0x1, NULL },
    { "denyTypeHierarchyWithIOSClass:", "denyTypeHierarchy", "V", 0x1, NULL },
    { "denyTypesByRegExpWithNSStringArray:", "denyTypesByRegExp", "V", 0x1, NULL },
    { "denyTypesByRegExpWithJavaUtilRegexPatternArray:", "denyTypesByRegExp", "V", 0x1, NULL },
    { "denyTypesByWildcardWithNSStringArray:", "denyTypesByWildcard", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "reflectionProvider_", NULL, 0x2, "Lcom.thoughtworks.xstream.converters.reflection.ReflectionProvider;", NULL,  },
    { "hierarchicalStreamDriver_", NULL, 0x2, "Lcom.thoughtworks.xstream.io.HierarchicalStreamDriver;", NULL,  },
    { "classLoaderReference_", NULL, 0x2, "Lcom.thoughtworks.xstream.core.ClassLoaderReference;", NULL,  },
    { "marshallingStrategy_", NULL, 0x2, "Lcom.thoughtworks.xstream.MarshallingStrategy;", NULL,  },
    { "converterLookup_", NULL, 0x2, "Lcom.thoughtworks.xstream.converters.ConverterLookup;", NULL,  },
    { "converterRegistry_", NULL, 0x2, "Lcom.thoughtworks.xstream.converters.ConverterRegistry;", NULL,  },
    { "mapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL,  },
    { "packageAliasingMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.PackageAliasingMapper;", NULL,  },
    { "classAliasingMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.ClassAliasingMapper;", NULL,  },
    { "fieldAliasingMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.FieldAliasingMapper;", NULL,  },
    { "attributeAliasingMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.AttributeAliasingMapper;", NULL,  },
    { "systemAttributeAliasingMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper;", NULL,  },
    { "attributeMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.AttributeMapper;", NULL,  },
    { "defaultImplementationsMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.DefaultImplementationsMapper;", NULL,  },
    { "immutableTypesMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.ImmutableTypesMapper;", NULL,  },
    { "implicitCollectionMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.ImplicitCollectionMapper;", NULL,  },
    { "localConversionMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.LocalConversionMapper;", NULL,  },
    { "securityMapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.SecurityMapper;", NULL,  },
    { "annotationConfiguration_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.AnnotationConfiguration;", NULL,  },
    { "NO_REFERENCES_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_NO_REFERENCES },
    { "ID_REFERENCES_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_ID_REFERENCES },
    { "XPATH_RELATIVE_REFERENCES_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES },
    { "XPATH_ABSOLUTE_REFERENCES_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_XPATH_ABSOLUTE_REFERENCES },
    { "SINGLE_NODE_XPATH_RELATIVE_REFERENCES_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_RELATIVE_REFERENCES },
    { "SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES },
    { "PRIORITY_VERY_HIGH_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_VERY_HIGH },
    { "PRIORITY_NORMAL_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_NORMAL },
    { "PRIORITY_LOW_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_LOW },
    { "PRIORITY_VERY_LOW_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_VERY_LOW },
    { "ANNOTATION_MAPPER_TYPE_", NULL, 0x1a, "Ljava.lang.String;", &ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE_,  },
    { "IGNORE_ALL_", NULL, 0x1a, "Ljava.util.regex.Pattern;", &ComThoughtworksXstreamXStream_IGNORE_ALL_,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream = { "XStream", "com.thoughtworks.xstream", NULL, 0x1, 109, methods, 31, fields, 0, NULL};
  return &_ComThoughtworksXstreamXStream;
}

@end


#line 2324
@implementation ComThoughtworksXstreamXStream_InitializationException


#line 2331
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  return
#line 2332
  [super initWithNSString:message withJavaLangThrowable:cause];
}


#line 2341
- (instancetype)initWithNSString:(NSString *)message {
  return
#line 2342
  [super initWithNSString:message];
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_ComThoughtworksXstreamXStream_InitializationExceptionWithNSString_withJavaLangThrowable_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_ComThoughtworksXstreamXStream_InitializationExceptionWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaLangThrowable:", "InitializationException", NULL, 0x1, NULL },
    { "initWithNSString:", "InitializationException", NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_InitializationException = { "InitializationException", "com.thoughtworks.xstream", "XStream", 0x9, 2, methods, 0, NULL, 0, NULL};
  return &_ComThoughtworksXstreamXStream_InitializationException;
}

@end

@implementation ComThoughtworksXstreamXStream_$1


#line 528
- (id<ComThoughtworksXstreamConvertersConverter>)lookupConverterForTypeWithIOSClass:(IOSClass *)type {
  
#line 529
  return [((ComThoughtworksXstreamCoreDefaultConverterLookup *) nil_chk(val$defaultConverterLookup_)) lookupConverterForTypeWithIOSClass:type];
}

- (instancetype)initWithComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0 {
  val$defaultConverterLookup_ = capture$0;
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "lookupConverterForTypeWithIOSClass:", "lookupConverterForType", "Lcom.thoughtworks.xstream.converters.Converter;", 0x1, NULL },
    { "initWithComThoughtworksXstreamCoreDefaultConverterLookup:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$defaultConverterLookup_", NULL, 0x1012, "Lcom.thoughtworks.xstream.core.DefaultConverterLookup;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_$1 = { "$1", "com.thoughtworks.xstream", "XStream", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamXStream_$1;
}

@end

@implementation ComThoughtworksXstreamXStream_$2


#line 533
- (void)registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter
                                                               withInt:(jint)priority {
  
#line 534
  [((ComThoughtworksXstreamCoreDefaultConverterLookup *) nil_chk(val$defaultConverterLookup_)) registerConverterWithComThoughtworksXstreamConvertersConverter:converter withInt:priority];
}

- (instancetype)initWithComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0 {
  val$defaultConverterLookup_ = capture$0;
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "registerConverterWithComThoughtworksXstreamConvertersConverter:withInt:", "registerConverter", "V", 0x1, NULL },
    { "initWithComThoughtworksXstreamCoreDefaultConverterLookup:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$defaultConverterLookup_", NULL, 0x1012, "Lcom.thoughtworks.xstream.core.DefaultConverterLookup;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_$2 = { "$2", "com.thoughtworks.xstream", "XStream", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamXStream_$2;
}

@end

@implementation ComThoughtworksXstreamXStream_$3


#line 1890
- (void)writeToStreamWithId:(id)object {
  
#line 1891
  [this$0_ marshalWithId:object withComThoughtworksXstreamIoHierarchicalStreamWriter:val$statefulWriter_];
}


#line 1895
- (void)writeFieldsToStreamWithJavaUtilMap:(id<JavaUtilMap>)fields {
  @throw [[JavaIoNotActiveException alloc] initWithNSString:@"not in call to writeObject"];
}


#line 1900
- (void)defaultWriteObject {
  
#line 1901
  @throw [[JavaIoNotActiveException alloc] initWithNSString:@"not in call to writeObject"];
}


#line 1905
- (void)flush {
  [((ComThoughtworksXstreamIoStatefulWriter *) nil_chk(val$statefulWriter_)) flush];
}


#line 1910
- (void)close {
  
#line 1911
  if ([((ComThoughtworksXstreamIoStatefulWriter *) nil_chk(val$statefulWriter_)) state] != ComThoughtworksXstreamIoStatefulWriter_get_STATE_CLOSED_()) {
    [val$statefulWriter_ endNode];
    [val$statefulWriter_ close];
  }
}

- (instancetype)initWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)outer$
           withComThoughtworksXstreamIoStatefulWriter:(ComThoughtworksXstreamIoStatefulWriter *)capture$0 {
  this$0_ = outer$;
  val$statefulWriter_ = capture$0;
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "writeToStreamWithId:", "writeToStream", "V", 0x1, NULL },
    { "writeFieldsToStreamWithJavaUtilMap:", "writeFieldsToStream", "V", 0x1, "Ljava.io.NotActiveException;" },
    { "defaultWriteObject", NULL, "V", 0x1, "Ljava.io.NotActiveException;" },
    { "flush", NULL, "V", 0x1, NULL },
    { "close", NULL, "V", 0x1, NULL },
    { "initWithComThoughtworksXstreamXStream:withComThoughtworksXstreamIoStatefulWriter:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.XStream;", NULL,  },
    { "val$statefulWriter_", NULL, 0x1012, "Lcom.thoughtworks.xstream.io.StatefulWriter;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_$3 = { "$3", "com.thoughtworks.xstream", "XStream", 0x8000, 6, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamXStream_$3;
}

@end

@implementation ComThoughtworksXstreamXStream_$4


#line 1964
- (id)readFromStream {
  
#line 1965
  if (![((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(val$reader_)) hasMoreChildren]) {
    @throw [[JavaIoEOFException alloc] init];
  }
  [val$reader_ moveDown];
  id result = [this$0_ unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:val$reader_];
  [val$reader_ moveUp];
  return result;
}


#line 1975
- (id<JavaUtilMap>)readFieldsFromStream {
  @throw [[JavaIoNotActiveException alloc] initWithNSString:@"not in call to readObject"];
}


#line 1980
- (void)defaultReadObject {
  
#line 1981
  @throw [[JavaIoNotActiveException alloc] initWithNSString:@"not in call to readObject"];
}


#line 1985
- (void)registerValidationWithJavaIoObjectInputValidation:(id<JavaIoObjectInputValidation>)validation
                                                  withInt:(jint)priority {
  
#line 1987
  @throw [[JavaIoNotActiveException alloc] initWithNSString:@"stream inactive"];
}


#line 1991
- (void)close {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(val$reader_)) close];
}

- (instancetype)initWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)outer$
 withComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)capture$0 {
  this$0_ = outer$;
  val$reader_ = capture$0;
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readFromStream", NULL, "Ljava.lang.Object;", 0x1, "Ljava.io.EOFException;" },
    { "readFieldsFromStream", NULL, "Ljava.util.Map;", 0x1, "Ljava.io.IOException;" },
    { "defaultReadObject", NULL, "V", 0x1, "Ljava.io.NotActiveException;" },
    { "registerValidationWithJavaIoObjectInputValidation:withInt:", "registerValidation", "V", 0x1, "Ljava.io.NotActiveException;" },
    { "close", NULL, "V", 0x1, NULL },
    { "initWithComThoughtworksXstreamXStream:withComThoughtworksXstreamIoHierarchicalStreamReader:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.XStream;", NULL,  },
    { "val$reader_", NULL, 0x1012, "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_$4 = { "$4", "com.thoughtworks.xstream", "XStream", 0x8000, 6, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamXStream_$4;
}

@end
