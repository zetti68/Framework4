//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/ExplicitTypePermission.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/ExplicitTypePermission.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/security/ExplicitTypePermission.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamSecurityExplicitTypePermission_$1 : NSObject {
 @public
  IOSObjectArray *val$types_;
}

- (IOSObjectArray *)getNames;

- (instancetype)initWithIOSClassArray:(IOSObjectArray *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamSecurityExplicitTypePermission_$1)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamSecurityExplicitTypePermission_$1, val$types_, IOSObjectArray *)

__attribute__((unused)) static void ComThoughtworksXstreamSecurityExplicitTypePermission_$1_initWithIOSClassArray_(ComThoughtworksXstreamSecurityExplicitTypePermission_$1 *self, IOSObjectArray *capture$0);

__attribute__((unused)) static ComThoughtworksXstreamSecurityExplicitTypePermission_$1 *new_ComThoughtworksXstreamSecurityExplicitTypePermission_$1_initWithIOSClassArray_(IOSObjectArray *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamSecurityExplicitTypePermission_$1)


#line 21
@implementation ComThoughtworksXstreamSecurityExplicitTypePermission


#line 28
- (instancetype)initWithIOSClassArray:(IOSObjectArray *)types {
  ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(self, types);
  return self;
}


#line 44
- (instancetype)initWithNSStringArray:(IOSObjectArray *)names {
  ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(self, names);
  return self;
}


#line 48
- (jboolean)allowsWithIOSClass:(IOSClass *)type {
  if (type == nil)
#line 50
  return NO;
  return [((id<JavaUtilSet>) nil_chk(names_)) containsWithId:[((IOSClass *) nil_chk(type)) getName]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClassArray:", "ExplicitTypePermission", NULL, 0x1, NULL, NULL },
    { "initWithNSStringArray:", "ExplicitTypePermission", NULL, 0x1, NULL, NULL },
    { "allowsWithIOSClass:", "allows", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "names_", NULL, 0x10, "Ljava.util.Set;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamSecurityExplicitTypePermission = { 2, "ExplicitTypePermission", "com.thoughtworks.xstream.security", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamSecurityExplicitTypePermission;
}

@end


#line 28
void ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(ComThoughtworksXstreamSecurityExplicitTypePermission *self, IOSObjectArray *types) {
  (void) ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(self, [new_ComThoughtworksXstreamSecurityExplicitTypePermission_$1_initWithIOSClassArray_(types) getNames]);
}


#line 28
ComThoughtworksXstreamSecurityExplicitTypePermission *new_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(IOSObjectArray *types) {
  ComThoughtworksXstreamSecurityExplicitTypePermission *self = [ComThoughtworksXstreamSecurityExplicitTypePermission alloc];
  ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(self, types);
  return self;
}


#line 44
void ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(ComThoughtworksXstreamSecurityExplicitTypePermission *self, IOSObjectArray *names) {
  (void) NSObject_init(self);
  
#line 45
  self->names_ = names == nil ? ((id) JavaUtilCollections_get_EMPTY_SET_()) : new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(names));
}


#line 44
ComThoughtworksXstreamSecurityExplicitTypePermission *new_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(IOSObjectArray *names) {
  ComThoughtworksXstreamSecurityExplicitTypePermission *self = [ComThoughtworksXstreamSecurityExplicitTypePermission alloc];
  ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(self, names);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamSecurityExplicitTypePermission)

@implementation ComThoughtworksXstreamSecurityExplicitTypePermission_$1


#line 30
- (IOSObjectArray *)getNames {
  if (val$types_ == nil)
#line 32
  return nil;
  IOSObjectArray *names = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(val$types_))->size_ type:NSString_class_()];
  for (jint i = 0; i < val$types_->size_; ++i)
#line 35
  (void) IOSObjectArray_Set(names, i, [((IOSClass *) nil_chk(IOSObjectArray_Get(val$types_, i))) getName]);
  return names;
}

- (instancetype)initWithIOSClassArray:(IOSObjectArray *)capture$0 {
  ComThoughtworksXstreamSecurityExplicitTypePermission_$1_initWithIOSClassArray_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getNames", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithIOSClassArray:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$types_", NULL, 0x1012, "[Ljava.lang.Class;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComThoughtworksXstreamSecurityExplicitTypePermission", "initWithIOSClassArray:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamSecurityExplicitTypePermission_$1 = { 2, "", "com.thoughtworks.xstream.security", "ExplicitTypePermission", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComThoughtworksXstreamSecurityExplicitTypePermission_$1;
}

@end

void ComThoughtworksXstreamSecurityExplicitTypePermission_$1_initWithIOSClassArray_(ComThoughtworksXstreamSecurityExplicitTypePermission_$1 *self, IOSObjectArray *capture$0) {
  self->val$types_ = capture$0;
  (void) NSObject_init(self);
}

ComThoughtworksXstreamSecurityExplicitTypePermission_$1 *new_ComThoughtworksXstreamSecurityExplicitTypePermission_$1_initWithIOSClassArray_(IOSObjectArray *capture$0) {
  ComThoughtworksXstreamSecurityExplicitTypePermission_$1 *self = [ComThoughtworksXstreamSecurityExplicitTypePermission_$1 alloc];
  ComThoughtworksXstreamSecurityExplicitTypePermission_$1_initWithIOSClassArray_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamSecurityExplicitTypePermission_$1)
