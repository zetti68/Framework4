//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/security/NullPermission.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/security/NullPermission.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/security/NullPermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"

BOOL ComThoughtworksXstreamSecurityNullPermission_initialized = NO;


#line 17
@implementation ComThoughtworksXstreamSecurityNullPermission

id<ComThoughtworksXstreamSecurityTypePermission> ComThoughtworksXstreamSecurityNullPermission_NULL__;


#line 23
- (jboolean)allowsWithIOSClass:(IOSClass *)type {
  
#line 24
  return type == nil || type == [IOSClass classWithClass:[ComThoughtworksXstreamMapperMapper_Null class]];
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamSecurityNullPermission class]) {
    ComThoughtworksXstreamSecurityNullPermission_NULL__ =
#line 21
    [[ComThoughtworksXstreamSecurityNullPermission alloc] init];
    ComThoughtworksXstreamSecurityNullPermission_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "allowsWithIOSClass:", "allows", "Z", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NULL__", "NULL", 0x19, "Lcom.thoughtworks.xstream.security.TypePermission;", &ComThoughtworksXstreamSecurityNullPermission_NULL__,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamSecurityNullPermission = { "NullPermission", "com.thoughtworks.xstream.security", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamSecurityNullPermission;
}

@end
