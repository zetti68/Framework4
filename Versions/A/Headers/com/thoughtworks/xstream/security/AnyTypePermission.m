//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/AnyTypePermission.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/AnyTypePermission.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/security/AnyTypePermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamSecurityAnyTypePermission)

id<ComThoughtworksXstreamSecurityTypePermission> ComThoughtworksXstreamSecurityAnyTypePermission_ANY_;


#line 15
@implementation ComThoughtworksXstreamSecurityAnyTypePermission


#line 21
- (jboolean)allowsWithIOSClass:(IOSClass *)type {
  return YES;
}

- (NSUInteger)hash {
  return 3;
}

- (jboolean)isEqual:(id)obj {
  return obj != nil && [obj getClass] == ComThoughtworksXstreamSecurityAnyTypePermission_class_();
}

- (instancetype)init {
  ComThoughtworksXstreamSecurityAnyTypePermission_init(self);
  return self;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamSecurityAnyTypePermission class]) {
    ComThoughtworksXstreamSecurityAnyTypePermission_ANY_ = new_ComThoughtworksXstreamSecurityAnyTypePermission_init();
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamSecurityAnyTypePermission)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "allowsWithIOSClass:", "allows", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ANY_", NULL, 0x19, "Lcom.thoughtworks.xstream.security.TypePermission;", &ComThoughtworksXstreamSecurityAnyTypePermission_ANY_, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamSecurityAnyTypePermission = { 2, "AnyTypePermission", "com.thoughtworks.xstream.security", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamSecurityAnyTypePermission;
}

@end

void ComThoughtworksXstreamSecurityAnyTypePermission_init(ComThoughtworksXstreamSecurityAnyTypePermission *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamSecurityAnyTypePermission *new_ComThoughtworksXstreamSecurityAnyTypePermission_init() {
  ComThoughtworksXstreamSecurityAnyTypePermission *self = [ComThoughtworksXstreamSecurityAnyTypePermission alloc];
  ComThoughtworksXstreamSecurityAnyTypePermission_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamSecurityAnyTypePermission)
