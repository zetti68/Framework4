//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/NoPermission.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/NoPermission.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/security/ForbiddenClassException.h"
#include "com/thoughtworks/xstream/security/NoPermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"

@interface ComThoughtworksXstreamSecurityNoPermission () {
 @public
  id<ComThoughtworksXstreamSecurityTypePermission> permission_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamSecurityNoPermission, permission_, id<ComThoughtworksXstreamSecurityTypePermission>)


#line 19
@implementation ComThoughtworksXstreamSecurityNoPermission


#line 29
- (instancetype)initWithComThoughtworksXstreamSecurityTypePermission:(id<ComThoughtworksXstreamSecurityTypePermission>)permission {
  ComThoughtworksXstreamSecurityNoPermission_initWithComThoughtworksXstreamSecurityTypePermission_(self, permission);
  return self;
}


#line 33
- (jboolean)allowsWithIOSClass:(IOSClass *)type {
  if (permission_ == nil || [permission_ allowsWithIOSClass:type]) {
    @throw new_ComThoughtworksXstreamSecurityForbiddenClassException_initWithIOSClass_(type);
  }
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamSecurityTypePermission:", "NoPermission", NULL, 0x1, NULL, NULL },
    { "allowsWithIOSClass:", "allows", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "permission_", NULL, 0x12, "Lcom.thoughtworks.xstream.security.TypePermission;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamSecurityNoPermission = { 2, "NoPermission", "com.thoughtworks.xstream.security", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamSecurityNoPermission;
}

@end


#line 29
void ComThoughtworksXstreamSecurityNoPermission_initWithComThoughtworksXstreamSecurityTypePermission_(ComThoughtworksXstreamSecurityNoPermission *self, id<ComThoughtworksXstreamSecurityTypePermission> permission) {
  (void) NSObject_init(self);
  
#line 30
  self->permission_ = permission;
}


#line 29
ComThoughtworksXstreamSecurityNoPermission *new_ComThoughtworksXstreamSecurityNoPermission_initWithComThoughtworksXstreamSecurityTypePermission_(id<ComThoughtworksXstreamSecurityTypePermission> permission) {
  ComThoughtworksXstreamSecurityNoPermission *self = [ComThoughtworksXstreamSecurityNoPermission alloc];
  ComThoughtworksXstreamSecurityNoPermission_initWithComThoughtworksXstreamSecurityTypePermission_(self, permission);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamSecurityNoPermission)
