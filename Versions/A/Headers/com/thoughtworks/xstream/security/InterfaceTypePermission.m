//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/security/InterfaceTypePermission.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/security/InterfaceTypePermission.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/security/InterfaceTypePermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"

BOOL ComThoughtworksXstreamSecurityInterfaceTypePermission_initialized = NO;


#line 15
@implementation ComThoughtworksXstreamSecurityInterfaceTypePermission

id<ComThoughtworksXstreamSecurityTypePermission> ComThoughtworksXstreamSecurityInterfaceTypePermission_INTERFACES_;


#line 21
- (jboolean)allowsWithIOSClass:(IOSClass *)type {
  
#line 22
  return type != nil && [type isInterface];
}

- (NSUInteger)hash {
  
#line 26
  return 31;
}

- (jboolean)isEqual:(id)obj {
  
#line 30
  return obj != nil && [obj getClass] == [IOSClass classWithClass:[ComThoughtworksXstreamSecurityInterfaceTypePermission class]];
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamSecurityInterfaceTypePermission class]) {
    ComThoughtworksXstreamSecurityInterfaceTypePermission_INTERFACES_ =
#line 19
    [[ComThoughtworksXstreamSecurityInterfaceTypePermission alloc] init];
    ComThoughtworksXstreamSecurityInterfaceTypePermission_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "allowsWithIOSClass:", "allows", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INTERFACES_", NULL, 0x19, "Lcom.thoughtworks.xstream.security.TypePermission;", &ComThoughtworksXstreamSecurityInterfaceTypePermission_INTERFACES_,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamSecurityInterfaceTypePermission = { "InterfaceTypePermission", "com.thoughtworks.xstream.security", NULL, 0x1, 4, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamSecurityInterfaceTypePermission;
}

@end
