//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/ProxyTypePermission.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/security/ProxyTypePermission.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/mapper/DynamicProxyMapper.h"
#include "com/thoughtworks/xstream/security/ProxyTypePermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"
#include "java/lang/reflect/Proxy.h"

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamSecurityProxyTypePermission)

id<ComThoughtworksXstreamSecurityTypePermission> ComThoughtworksXstreamSecurityProxyTypePermission_PROXIES_;


#line 20
@implementation ComThoughtworksXstreamSecurityProxyTypePermission


#line 26
- (jboolean)allowsWithIOSClass:(IOSClass *)type {
  return type != nil && (JavaLangReflectProxy_isProxyClassWithIOSClass_(type) || type == ComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_class_());
}

- (NSUInteger)hash {
  return 17;
}

- (jboolean)isEqual:(id)obj {
  return obj != nil && [obj getClass] == ComThoughtworksXstreamSecurityProxyTypePermission_class_();
}

- (instancetype)init {
  ComThoughtworksXstreamSecurityProxyTypePermission_init(self);
  return self;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamSecurityProxyTypePermission class]) {
    ComThoughtworksXstreamSecurityProxyTypePermission_PROXIES_ = new_ComThoughtworksXstreamSecurityProxyTypePermission_init();
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamSecurityProxyTypePermission)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "allowsWithIOSClass:", "allows", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PROXIES_", NULL, 0x19, "Lcom.thoughtworks.xstream.security.TypePermission;", &ComThoughtworksXstreamSecurityProxyTypePermission_PROXIES_, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamSecurityProxyTypePermission = { 2, "ProxyTypePermission", "com.thoughtworks.xstream.security", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamSecurityProxyTypePermission;
}

@end

void ComThoughtworksXstreamSecurityProxyTypePermission_init(ComThoughtworksXstreamSecurityProxyTypePermission *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamSecurityProxyTypePermission *new_ComThoughtworksXstreamSecurityProxyTypePermission_init() {
  ComThoughtworksXstreamSecurityProxyTypePermission *self = [ComThoughtworksXstreamSecurityProxyTypePermission alloc];
  ComThoughtworksXstreamSecurityProxyTypePermission_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamSecurityProxyTypePermission)
