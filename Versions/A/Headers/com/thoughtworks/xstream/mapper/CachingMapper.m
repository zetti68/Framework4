//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/CachingMapper.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/CachingMapper.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/XStreamException.h"
#include "com/thoughtworks/xstream/mapper/CachingMapper.h"
#include "com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "com/thoughtworks/xstream/security/ForbiddenClassException.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface ComThoughtworksXstreamMapperCachingMapper () {
 @public
  id<JavaUtilMap> realClassCache_;
}

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamMapperCachingMapper, realClassCache_, id<JavaUtilMap>)

__attribute__((unused)) static id ComThoughtworksXstreamMapperCachingMapper_readResolve(ComThoughtworksXstreamMapperCachingMapper *self);


#line 28
@implementation ComThoughtworksXstreamMapperCachingMapper


#line 32
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  ComThoughtworksXstreamMapperCachingMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (IOSClass *)realClassWithNSString:(NSString *)elementName {
  id cached = [((id<JavaUtilMap>) nil_chk(realClassCache_)) getWithId:elementName];
  if (cached != nil) {
    if ([cached isKindOfClass:[IOSClass class]]) {
      return (IOSClass *) check_class_cast(cached, [IOSClass class]);
    }
    @throw (ComThoughtworksXstreamXStreamException *) check_class_cast(cached, [ComThoughtworksXstreamXStreamException class]);
  }
  
#line 46
  @try {
    IOSClass *result = [super realClassWithNSString:elementName];
    (void) [realClassCache_ putWithId:elementName withId:result];
    return result;
  }
  @catch (
#line 50
  ComThoughtworksXstreamSecurityForbiddenClassException *e) {
    (void) [realClassCache_ putWithId:elementName withId:e];
    @throw e;
  }
  @catch (
#line 53
  ComThoughtworksXstreamMapperCannotResolveClassException *e) {
    (void) [realClassCache_ putWithId:elementName withId:e];
    @throw e;
  }
}


#line 59
- (void)flushCache {
  [((id<JavaUtilMap>) nil_chk(realClassCache_)) clear];
}

- (id)readResolve {
  return ComThoughtworksXstreamMapperCachingMapper_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "CachingMapper", NULL, 0x1, NULL, NULL },
    { "realClassWithNSString:", "realClass", "Ljava.lang.Class;", 0x1, NULL, NULL },
    { "flushCache", NULL, "V", 0x1, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "realClassCache_", NULL, 0x82, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperCachingMapper = { 2, "CachingMapper", "com.thoughtworks.xstream.mapper", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamMapperCachingMapper;
}

@end


#line 32
void ComThoughtworksXstreamMapperCachingMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperCachingMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped) {
  (void) ComThoughtworksXstreamMapperMapperWrapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  (void) ComThoughtworksXstreamMapperCachingMapper_readResolve(self);
}


#line 32
ComThoughtworksXstreamMapperCachingMapper *new_ComThoughtworksXstreamMapperCachingMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) {
  ComThoughtworksXstreamMapperCachingMapper *self = [ComThoughtworksXstreamMapperCachingMapper alloc];
  ComThoughtworksXstreamMapperCachingMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}


#line 63
id ComThoughtworksXstreamMapperCachingMapper_readResolve(ComThoughtworksXstreamMapperCachingMapper *self) {
  self->realClassCache_ = JavaUtilCollections_synchronizedMapWithJavaUtilMap_(new_JavaUtilHashMap_initWithInt_(128));
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperCachingMapper)
