//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/mapper/CachingMapper.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/mapper/CachingMapper.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/XStreamException.h"
#include "com/thoughtworks/xstream/mapper/CachingMapper.h"
#include "com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/security/ForbiddenClassException.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"


#line 28
@implementation ComThoughtworksXstreamMapperCachingMapper


#line 32
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  if (self =
#line 33
  [super initWithComThoughtworksXstreamMapperMapper:wrapped]) {
    
#line 34
    (void) [self readResolve];
  }
  return self;
}


#line 37
- (IOSClass *)realClassWithNSString:(NSString *)elementName {
  
#line 38
  id cached = [((id<JavaUtilMap>) nil_chk(realClassCache_)) getWithId:elementName];
  if (cached != nil) {
    if ([cached isKindOfClass:[IOSClass class]]) {
      return (IOSClass *) check_class_cast(cached, [IOSClass class]);
    }
    @throw (ComThoughtworksXstreamXStreamException *) check_class_cast(cached, [ComThoughtworksXstreamXStreamException class]);
  }
  
#line 46
  @try {
    IOSClass *result = [super realClassWithNSString:elementName];
    (void) [realClassCache_ putWithId:elementName withId:result];
    return result;
  }
  @catch (
#line 50
  ComThoughtworksXstreamSecurityForbiddenClassException *e) {
    (void) [realClassCache_ putWithId:elementName withId:e];
    @throw e;
  }
  @catch (
#line 53
  ComThoughtworksXstreamMapperCannotResolveClassException *e) {
    (void) [realClassCache_ putWithId:elementName withId:e];
    @throw e;
  }
}


#line 59
- (void)flushCache {
  
#line 60
  [((id<JavaUtilMap>) nil_chk(realClassCache_)) clear];
}


#line 63
- (id)readResolve {
  
#line 64
  realClassCache_ = [JavaUtilCollections synchronizedMapWithJavaUtilMap:[[JavaUtilHashMap alloc] initWithInt:128]];
  return self;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamMapperCachingMapper *)other {
  [super copyAllFieldsTo:other];
  other->realClassCache_ = realClassCache_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "CachingMapper", NULL, 0x1, NULL },
    { "realClassWithNSString:", "realClass", "Ljava.lang.Class;", 0x1, NULL },
    { "flushCache", NULL, "V", 0x1, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "realClassCache_", NULL, 0x82, "Ljava.util.Map;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperCachingMapper = { "CachingMapper", "com.thoughtworks.xstream.mapper", NULL, 0x1, 4, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamMapperCachingMapper;
}

@end
