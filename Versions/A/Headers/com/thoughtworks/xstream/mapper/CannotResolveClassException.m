//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/CannotResolveClassException.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/CannotResolveClassException.java"

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/XStreamException.h"
#include "com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "java/lang/Throwable.h"


#line 23
@implementation ComThoughtworksXstreamMapperCannotResolveClassException


#line 24
- (instancetype)initWithNSString:(NSString *)className_ {
  ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_(self, className_);
  return self;
}


#line 30
- (instancetype)initWithNSString:(NSString *)className_
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_withJavaLangThrowable_(self, className_, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "CannotResolveClassException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withJavaLangThrowable:", "CannotResolveClassException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperCannotResolveClassException = { 2, "CannotResolveClassException", "com.thoughtworks.xstream.mapper", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamMapperCannotResolveClassException;
}

@end


#line 24
void ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_(ComThoughtworksXstreamMapperCannotResolveClassException *self, NSString *className_) {
  (void) ComThoughtworksXstreamXStreamException_initWithNSString_(self, className_);
}


#line 24
ComThoughtworksXstreamMapperCannotResolveClassException *new_ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_(NSString *className_) {
  ComThoughtworksXstreamMapperCannotResolveClassException *self = [ComThoughtworksXstreamMapperCannotResolveClassException alloc];
  ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_(self, className_);
  return self;
}

void ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_withJavaLangThrowable_(ComThoughtworksXstreamMapperCannotResolveClassException *self, NSString *className_, JavaLangThrowable *cause) {
  (void) ComThoughtworksXstreamXStreamException_initWithNSString_withJavaLangThrowable_(self, className_, cause);
}


#line 30
ComThoughtworksXstreamMapperCannotResolveClassException *new_ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_withJavaLangThrowable_(NSString *className_, JavaLangThrowable *cause) {
  ComThoughtworksXstreamMapperCannotResolveClassException *self = [ComThoughtworksXstreamMapperCannotResolveClassException alloc];
  ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_withJavaLangThrowable_(self, className_, cause);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperCannotResolveClassException)
