//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/MapperWrapper.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/MapperWrapper.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/mapper/MapperWrapper.h"

@interface ComThoughtworksXstreamMapperMapperWrapper () {
 @public
  id<ComThoughtworksXstreamMapperMapper> wrapped_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamMapperMapperWrapper, wrapped_, id<ComThoughtworksXstreamMapperMapper>)


#line 17
@implementation ComThoughtworksXstreamMapperMapperWrapper


#line 21
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  ComThoughtworksXstreamMapperMapperWrapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}


#line 25
- (NSString *)serializedClassWithIOSClass:(IOSClass *)type {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) serializedClassWithIOSClass:type];
}

- (IOSClass *)realClassWithNSString:(NSString *)elementName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) realClassWithNSString:elementName];
}

- (NSString *)serializedMemberWithIOSClass:(IOSClass *)type
                              withNSString:(NSString *)memberName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) serializedMemberWithIOSClass:type withNSString:memberName];
}


#line 37
- (NSString *)realMemberWithIOSClass:(IOSClass *)type
                        withNSString:(NSString *)serialized {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) realMemberWithIOSClass:type withNSString:serialized];
}


#line 41
- (jboolean)isImmutableValueTypeWithIOSClass:(IOSClass *)type {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) isImmutableValueTypeWithIOSClass:type];
}

- (IOSClass *)defaultImplementationOfWithIOSClass:(IOSClass *)type {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) defaultImplementationOfWithIOSClass:type];
}

- (NSString *)aliasForAttributeWithNSString:(NSString *)attribute {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) aliasForAttributeWithNSString:attribute];
}

- (NSString *)attributeForAliasWithNSString:(NSString *)alias {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) attributeForAliasWithNSString:alias];
}

- (NSString *)aliasForSystemAttributeWithNSString:(NSString *)attribute {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) aliasForSystemAttributeWithNSString:attribute];
}

- (NSString *)getFieldNameForItemTypeAndNameWithIOSClass:(IOSClass *)definedIn
                                            withIOSClass:(IOSClass *)itemType
                                            withNSString:(NSString *)itemFieldName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getFieldNameForItemTypeAndNameWithIOSClass:definedIn withIOSClass:itemType withNSString:itemFieldName];
}


#line 65
- (IOSClass *)getItemTypeForItemFieldNameWithIOSClass:(IOSClass *)definedIn
                                         withNSString:(NSString *)itemFieldName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getItemTypeForItemFieldNameWithIOSClass:definedIn withNSString:itemFieldName];
}


#line 69
- (id<ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>)getImplicitCollectionDefForFieldNameWithIOSClass:(IOSClass *)itemType
                                                                                                        withNSString:(NSString *)fieldName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getImplicitCollectionDefForFieldNameWithIOSClass:itemType withNSString:fieldName];
}


#line 73
- (jboolean)shouldSerializeMemberWithIOSClass:(IOSClass *)definedIn
                                 withNSString:(NSString *)fieldName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:fieldName];
}


#line 80
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                    withIOSClass:(IOSClass *)type {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromItemTypeWithNSString:fieldName withIOSClass:type];
}


#line 87
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithIOSClass:(IOSClass *)type {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromItemTypeWithIOSClass:type];
}


#line 94
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithNSString:(NSString *)name {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromAttributeWithNSString:name];
}

- (id<ComThoughtworksXstreamConvertersConverter>)getLocalConverterWithIOSClass:(IOSClass *)definedIn
                                                                  withNSString:(NSString *)fieldName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getLocalConverterWithIOSClass:definedIn withNSString:fieldName];
}


#line 102
- (id<ComThoughtworksXstreamMapperMapper>)lookupMapperOfTypeWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isAssignableFrom:[self getClass]] ? self : ((id) [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) lookupMapperOfTypeWithIOSClass:type]);
}

- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                    withIOSClass:(IOSClass *)type
                                                                                    withIOSClass:(IOSClass *)definedIn {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromItemTypeWithNSString:fieldName withIOSClass:type withIOSClass:definedIn];
}


#line 113
- (NSString *)aliasForAttributeWithIOSClass:(IOSClass *)definedIn
                               withNSString:(NSString *)fieldName {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) aliasForAttributeWithIOSClass:definedIn withNSString:fieldName];
}


#line 120
- (NSString *)attributeForAliasWithIOSClass:(IOSClass *)definedIn
                               withNSString:(NSString *)alias {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) attributeForAliasWithIOSClass:definedIn withNSString:alias];
}


#line 127
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)type
                                                                                     withNSString:(NSString *)attribute {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromAttributeWithIOSClass:type withNSString:attribute];
}


#line 131
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                     withNSString:(NSString *)attribute
                                                                                     withIOSClass:(IOSClass *)type {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromAttributeWithIOSClass:definedIn withNSString:attribute withIOSClass:type];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "MapperWrapper", NULL, 0x1, NULL, NULL },
    { "serializedClassWithIOSClass:", "serializedClass", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "realClassWithNSString:", "realClass", "Ljava.lang.Class;", 0x1, NULL, NULL },
    { "serializedMemberWithIOSClass:withNSString:", "serializedMember", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "realMemberWithIOSClass:withNSString:", "realMember", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isImmutableValueTypeWithIOSClass:", "isImmutableValueType", "Z", 0x1, NULL, NULL },
    { "defaultImplementationOfWithIOSClass:", "defaultImplementationOf", "Ljava.lang.Class;", 0x1, NULL, NULL },
    { "aliasForAttributeWithNSString:", "aliasForAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "attributeForAliasWithNSString:", "attributeForAlias", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "aliasForSystemAttributeWithNSString:", "aliasForSystemAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFieldNameForItemTypeAndNameWithIOSClass:withIOSClass:withNSString:", "getFieldNameForItemTypeAndName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getItemTypeForItemFieldNameWithIOSClass:withNSString:", "getItemTypeForItemFieldName", "Ljava.lang.Class;", 0x1, NULL, NULL },
    { "getImplicitCollectionDefForFieldNameWithIOSClass:withNSString:", "getImplicitCollectionDefForFieldName", "Lcom.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping;", 0x1, NULL, NULL },
    { "shouldSerializeMemberWithIOSClass:withNSString:", "shouldSerializeMember", "Z", 0x1, NULL, NULL },
    { "getConverterFromItemTypeWithNSString:withIOSClass:", "getConverterFromItemType", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
    { "getConverterFromItemTypeWithIOSClass:", "getConverterFromItemType", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
    { "getConverterFromAttributeWithNSString:", "getConverterFromAttribute", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
    { "getLocalConverterWithIOSClass:withNSString:", "getLocalConverter", "Lcom.thoughtworks.xstream.converters.Converter;", 0x1, NULL, NULL },
    { "lookupMapperOfTypeWithIOSClass:", "lookupMapperOfType", "Lcom.thoughtworks.xstream.mapper.Mapper;", 0x1, NULL, NULL },
    { "getConverterFromItemTypeWithNSString:withIOSClass:withIOSClass:", "getConverterFromItemType", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
    { "aliasForAttributeWithIOSClass:withNSString:", "aliasForAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "attributeForAliasWithIOSClass:withNSString:", "attributeForAlias", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getConverterFromAttributeWithIOSClass:withNSString:", "getConverterFromAttribute", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
    { "getConverterFromAttributeWithIOSClass:withNSString:withIOSClass:", "getConverterFromAttribute", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "wrapped_", NULL, 0x12, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperMapperWrapper = { 2, "MapperWrapper", "com.thoughtworks.xstream.mapper", NULL, 0x401, 24, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamMapperMapperWrapper;
}

@end


#line 21
void ComThoughtworksXstreamMapperMapperWrapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperMapperWrapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped) {
  (void) NSObject_init(self);
  
#line 22
  self->wrapped_ = wrapped;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperMapperWrapper)
