//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/AbstractAttributeAliasingMapper.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/mapper/AbstractAttributeAliasingMapper.java"

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/mapper/AbstractAttributeAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper ()

- (id)readResolve;

@end


#line 23
@implementation ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper


#line 28
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}


#line 32
- (void)addAliasForWithNSString:(NSString *)attributeName
                   withNSString:(NSString *)alias {
  (void) [((id<JavaUtilMap>) nil_chk(aliasToName_)) putWithId:alias withId:attributeName];
  (void) [((id<JavaUtilMap>) nil_chk(nameToAlias_)) putWithId:attributeName withId:alias];
}


#line 37
- (id)readResolve {
  nameToAlias_ = new_JavaUtilHashMap_init();
  for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(aliasToName_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
    id alias = [iter next];
    (void) [nameToAlias_ putWithId:[aliasToName_ getWithId:alias] withId:alias];
  }
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "AbstractAttributeAliasingMapper", NULL, 0x1, NULL, NULL },
    { "addAliasForWithNSString:withNSString:", "addAliasFor", "V", 0x1, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "aliasToName_", NULL, 0x14, "Ljava.util.Map;", NULL, NULL,  },
    { "nameToAlias_", NULL, 0x84, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper = { 2, "AbstractAttributeAliasingMapper", "com.thoughtworks.xstream.mapper", NULL, 0x401, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper;
}

@end


#line 28
void ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped) {
  (void) ComThoughtworksXstreamMapperMapperWrapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  self->aliasToName_ = new_JavaUtilHashMap_init();
  self->nameToAlias_ = new_JavaUtilHashMap_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper)
