//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/mapper/ImmutableTypesMapper.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/mapper/ImmutableTypesMapper.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/mapper/ImmutableTypesMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"


#line 23
@implementation ComThoughtworksXstreamMapperImmutableTypesMapper


#line 27
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  if (self =
#line 28
  [super initWithComThoughtworksXstreamMapperMapper:wrapped]) {
    immutableTypes_ =
#line 25
    [[JavaUtilHashSet alloc] init];
  }
  return self;
}


#line 31
- (void)addImmutableTypeWithIOSClass:(IOSClass *)type {
  
#line 32
  [((id<JavaUtilSet>) nil_chk(immutableTypes_)) addWithId:type];
}


#line 35
- (jboolean)isImmutableValueTypeWithIOSClass:(IOSClass *)type {
  
#line 36
  if ([((id<JavaUtilSet>) nil_chk(immutableTypes_)) containsWithId:type]) {
    return YES;
  }
  else {
    
#line 39
    return [super isImmutableValueTypeWithIOSClass:type];
  }
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamMapperImmutableTypesMapper *)other {
  [super copyAllFieldsTo:other];
  other->immutableTypes_ = immutableTypes_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "ImmutableTypesMapper", NULL, 0x1, NULL },
    { "addImmutableTypeWithIOSClass:", "addImmutableType", "V", 0x1, NULL },
    { "isImmutableValueTypeWithIOSClass:", "isImmutableValueType", "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "immutableTypes_", NULL, 0x12, "Ljava.util.Set;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperImmutableTypesMapper = { "ImmutableTypesMapper", "com.thoughtworks.xstream.mapper", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamMapperImmutableTypesMapper;
}

@end
