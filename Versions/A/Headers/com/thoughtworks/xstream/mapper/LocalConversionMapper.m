//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/mapper/LocalConversionMapper.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/mapper/LocalConversionMapper.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/core/util/FastField.h"
#include "com/thoughtworks/xstream/mapper/AttributeMapper.h"
#include "com/thoughtworks/xstream/mapper/LocalConversionMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"


#line 27
@implementation ComThoughtworksXstreamMapperLocalConversionMapper


#line 38
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  if (self =
#line 39
  [super initWithComThoughtworksXstreamMapperMapper:wrapped]) {
    localConverters_ =
#line 29
    [[JavaUtilHashMap alloc] init];
    
#line 40
    (void) [self readResolve];
  }
  return self;
}


#line 43
- (void)registerLocalConverterWithIOSClass:(IOSClass *)definedIn
                              withNSString:(NSString *)fieldName
withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  
#line 44
  (void) [((id<JavaUtilMap>) nil_chk(localConverters_)) putWithId:[[ComThoughtworksXstreamCoreUtilFastField alloc] initWithIOSClass:definedIn withNSString:fieldName] withId:converter];
}


#line 47
- (id<ComThoughtworksXstreamConvertersConverter>)getLocalConverterWithIOSClass:(IOSClass *)definedIn
                                                                  withNSString:(NSString *)fieldName {
  
#line 48
  return (id<ComThoughtworksXstreamConvertersConverter>) check_protocol_cast([((id<JavaUtilMap>) nil_chk(localConverters_)) getWithId:[[ComThoughtworksXstreamCoreUtilFastField alloc] initWithIOSClass:definedIn withNSString:fieldName]], @protocol(ComThoughtworksXstreamConvertersConverter));
}


#line 51
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                     withNSString:(NSString *)attribute
                                                                                     withIOSClass:(IOSClass *)type {
  
#line 53
  id<ComThoughtworksXstreamConvertersSingleValueConverter> converter = [self getLocalSingleValueConverterWithIOSClass:
#line 54
  definedIn withNSString:attribute withIOSClass:type];
  return converter == nil ?
#line 56
  [super getConverterFromAttributeWithIOSClass:definedIn withNSString:attribute withIOSClass:type] :
#line 57
  converter;
}


#line 60
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                    withIOSClass:(IOSClass *)type
                                                                                    withIOSClass:(IOSClass *)definedIn {
  
#line 62
  id<ComThoughtworksXstreamConvertersSingleValueConverter> converter = [self getLocalSingleValueConverterWithIOSClass:
#line 63
  definedIn withNSString:fieldName withIOSClass:type];
  return converter == nil ?
#line 65
  [super getConverterFromItemTypeWithNSString:fieldName withIOSClass:type withIOSClass:definedIn] :
#line 66
  converter;
}


#line 69
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getLocalSingleValueConverterWithIOSClass:(IOSClass *)definedIn
                                                                                        withNSString:(NSString *)fieldName
                                                                                        withIOSClass:(IOSClass *)type {
  
#line 71
  if (attributeMapper_ != nil &&
#line 72
  [attributeMapper_ shouldLookForSingleValueConverterWithNSString:fieldName withIOSClass:type withIOSClass:definedIn]) {
    id<ComThoughtworksXstreamConvertersConverter> converter = [self getLocalConverterWithIOSClass:definedIn withNSString:fieldName];
    if (converter != nil && [(id) converter conformsToProtocol: @protocol(ComThoughtworksXstreamConvertersSingleValueConverter)]) {
      return (id<ComThoughtworksXstreamConvertersSingleValueConverter>) check_protocol_cast(converter, @protocol(ComThoughtworksXstreamConvertersSingleValueConverter));
    }
  }
  return nil;
}


#line 81
- (id)readResolve {
  
#line 82
  self->attributeMapper_ = (ComThoughtworksXstreamMapperAttributeMapper *) check_class_cast([self lookupMapperOfTypeWithIOSClass:[IOSClass classWithClass:[ComThoughtworksXstreamMapperAttributeMapper class]]], [ComThoughtworksXstreamMapperAttributeMapper class]);
  return self;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamMapperLocalConversionMapper *)other {
  [super copyAllFieldsTo:other];
  other->attributeMapper_ = attributeMapper_;
  other->localConverters_ = localConverters_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "LocalConversionMapper", NULL, 0x1, NULL },
    { "registerLocalConverterWithIOSClass:withNSString:withComThoughtworksXstreamConvertersConverter:", "registerLocalConverter", "V", 0x1, NULL },
    { "getLocalConverterWithIOSClass:withNSString:", "getLocalConverter", "Lcom.thoughtworks.xstream.converters.Converter;", 0x1, NULL },
    { "getConverterFromAttributeWithIOSClass:withNSString:withIOSClass:", "getConverterFromAttribute", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL },
    { "getConverterFromItemTypeWithNSString:withIOSClass:withIOSClass:", "getConverterFromItemType", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL },
    { "getLocalSingleValueConverterWithIOSClass:withNSString:withIOSClass:", "getLocalSingleValueConverter", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x2, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "localConverters_", NULL, 0x12, "Ljava.util.Map;", NULL,  },
    { "attributeMapper_", NULL, 0x82, "Lcom.thoughtworks.xstream.mapper.AttributeMapper;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperLocalConversionMapper = { "LocalConversionMapper", "com.thoughtworks.xstream.mapper", NULL, 0x1, 7, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamMapperLocalConversionMapper;
}

@end
