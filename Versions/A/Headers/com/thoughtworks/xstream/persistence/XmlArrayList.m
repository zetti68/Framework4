//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/persistence/XmlArrayList.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/persistence/XmlArrayList.java"

#include "com/thoughtworks/xstream/persistence/PersistenceStrategy.h"
#include "com/thoughtworks/xstream/persistence/XmlArrayList.h"
#include "com/thoughtworks/xstream/persistence/XmlMap.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"


#line 21
@implementation ComThoughtworksXstreamPersistenceXmlArrayList


#line 25
- (instancetype)initWithComThoughtworksXstreamPersistencePersistenceStrategy:(id<ComThoughtworksXstreamPersistencePersistenceStrategy>)persistenceStrategy {
  if (self = [super init]) {
    
#line 26
    self->map_ = [[ComThoughtworksXstreamPersistenceXmlMap alloc] initWithComThoughtworksXstreamPersistencePersistenceStrategy:persistenceStrategy];
  }
  return self;
}


#line 29
- (jint)size {
  
#line 30
  return [((ComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) size];
}


#line 33
- (id)setWithInt:(jint)index
          withId:(id)element {
  
#line 34
  [self rangeCheckWithInt:index];
  id value = [self getWithInt:index];
  (void) [((ComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) putWithId:[[JavaLangInteger alloc] initWithInt:index] withId:element];
  return value;
}


#line 40
- (void)addWithInt:(jint)index
            withId:(id)element {
  
#line 41
  jint size = [self size];
  if (index >= (size + 1) || index < 0) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:JreStrcat("$I$I", @"Index: ", index, @", Size: ",
#line 44
    size)];
  }
  jint to = index != size ? index - 1 : index;
  for (jint i = size; i > to; i--) {
    (void) [map_ putWithId:[[JavaLangInteger alloc] initWithInt:i + 1] withId:[((ComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) getWithId:[[JavaLangInteger alloc] initWithInt:i]]];
  }
  (void) [((ComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) putWithId:[[JavaLangInteger alloc] initWithInt:index] withId:element];
}


#line 53
- (void)rangeCheckWithInt:(jint)index {
  
#line 54
  jint size = [self size];
  if (index >= size || index < 0) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:JreStrcat("$I$I", @"Index: ", index, @", Size: ",
#line 57
    size)];
  }
}


#line 61
- (id)getWithInt:(jint)index {
  
#line 62
  [self rangeCheckWithInt:index];
  return [((ComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) getWithId:[[JavaLangInteger alloc] initWithInt:index]];
}


#line 66
- (id)removeWithInt:(jint)index {
  
#line 67
  jint size = [self size];
  [self rangeCheckWithInt:index];
  id value = [((ComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) getWithId:[[JavaLangInteger alloc] initWithInt:index]];
  for (jint i = index; i < size - 1; i++) {
    (void) [map_ putWithId:[[JavaLangInteger alloc] initWithInt:i] withId:[map_ getWithId:[[JavaLangInteger alloc] initWithInt:i + 1]]];
  }
  (void) [map_ removeWithId:[[JavaLangInteger alloc] initWithInt:size - 1]];
  return value;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamPersistenceXmlArrayList *)other {
  [super copyAllFieldsTo:other];
  other->map_ = map_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamPersistencePersistenceStrategy:", "XmlArrayList", NULL, 0x1, NULL },
    { "size", NULL, "I", 0x1, NULL },
    { "setWithInt:withId:", "set", "Ljava.lang.Object;", 0x1, NULL },
    { "addWithInt:withId:", "add", "V", 0x1, NULL },
    { "rangeCheckWithInt:", "rangeCheck", "V", 0x2, NULL },
    { "getWithInt:", "get", "Ljava.lang.Object;", 0x1, NULL },
    { "removeWithInt:", "remove", "Ljava.lang.Object;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "map_", NULL, 0x12, "Lcom.thoughtworks.xstream.persistence.XmlMap;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamPersistenceXmlArrayList = { "XmlArrayList", "com.thoughtworks.xstream.persistence", NULL, 0x1, 7, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamPersistenceXmlArrayList;
}

@end
