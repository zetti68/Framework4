//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/annotations/AnnotationReflectionConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/annotations/AnnotationReflectionConverter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/annotations/AnnotationProvider.h"
#include "com/thoughtworks/xstream/annotations/AnnotationReflectionConverter.h"
#include "com/thoughtworks/xstream/annotations/XStreamConverter.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterMatcher.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/reflection/ObjectAccessException.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter () {
 @public
  ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider_;
  id<JavaUtilMap> cachedConverters_;
}

- (void)ensureCacheWithIOSClass:(IOSClass *)type;

- (id<ComThoughtworksXstreamConvertersConverter>)newInstanceWithIOSClass:(IOSClass *)type OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter, annotationProvider_, ComThoughtworksXstreamAnnotationsAnnotationProvider *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter, cachedConverters_, id<JavaUtilMap>)

__attribute__((unused)) static void ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type);

__attribute__((unused)) static id<ComThoughtworksXstreamConvertersConverter> ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type);


#line 39
@implementation ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter


#line 46
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
   withComThoughtworksXstreamAnnotationsAnnotationProvider:(ComThoughtworksXstreamAnnotationsAnnotationProvider *)annotationProvider {
  ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(self, mapper, reflectionProvider, annotationProvider);
  return self;
}


#line 54
- (void)marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context
                                                                     withId:(id)newObj
                                                   withJavaLangReflectField:(JavaLangReflectField *)field {
  id<ComThoughtworksXstreamAnnotationsXStreamConverter> annotation = [((ComThoughtworksXstreamAnnotationsAnnotationProvider *) nil_chk(annotationProvider_)) getAnnotationWithJavaLangReflectField:
#line 56
  field withIOSClass:ComThoughtworksXstreamAnnotationsXStreamConverter_class_()];
  if (annotation != nil) {
    IOSClass *type = [annotation value];
    ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(self, type);
    [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:newObj withComThoughtworksXstreamConvertersConverter:[((id<JavaUtilMap>) nil_chk(cachedConverters_)) getWithId:type]];
  }
  else {
    
#line 62
    [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:newObj];
  }
}


#line 66
- (void)ensureCacheWithIOSClass:(IOSClass *)type {
  ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(self, type);
}


#line 72
- (id)unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                       withId:(id)result
                                                                 withIOSClass:(IOSClass *)type
                                                     withJavaLangReflectField:(JavaLangReflectField *)field {
  
#line 75
  id<ComThoughtworksXstreamAnnotationsXStreamConverter> annotation = [((ComThoughtworksXstreamAnnotationsAnnotationProvider *) nil_chk(annotationProvider_)) getAnnotationWithJavaLangReflectField:
#line 76
  field withIOSClass:ComThoughtworksXstreamAnnotationsXStreamConverter_class_()];
  if (annotation != nil) {
    IOSClass *converterType = (IOSClass *) check_class_cast([annotation value], [IOSClass class]);
    ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(self, converterType);
    return [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type withComThoughtworksXstreamConvertersConverter:[((id<JavaUtilMap>) nil_chk(cachedConverters_)) getWithId:converterType]];
  }
  else {
    
#line 82
    return [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
  }
}


#line 92
- (id<ComThoughtworksXstreamConvertersConverter>)newInstanceWithIOSClass:(IOSClass *)type {
  return ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(self, type);
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamAnnotationsAnnotationProvider:", "AnnotationReflectionConverter", NULL, 0x1, NULL, NULL },
    { "marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:withId:withJavaLangReflectField:", "marshallField", "V", 0x4, NULL, NULL },
    { "ensureCacheWithIOSClass:", "ensureCache", "V", 0x2, NULL, NULL },
    { "unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:withId:withIOSClass:withJavaLangReflectField:", "unmarshallField", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "newInstanceWithIOSClass:", "newInstance", "Lcom.thoughtworks.xstream.converters.Converter;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "annotationProvider_", NULL, 0x12, "Lcom.thoughtworks.xstream.annotations.AnnotationProvider;", NULL, NULL,  },
    { "cachedConverters_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Class<+Lcom/thoughtworks/xstream/converters/ConverterMatcher;>;Lcom/thoughtworks/xstream/converters/Converter;>;",  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter = { 2, "AnnotationReflectionConverter", "com.thoughtworks.xstream.annotations", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter;
}

@end


#line 46
void ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider) {
  (void) ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self,
#line 49
  mapper, reflectionProvider);
  self->annotationProvider_ = annotationProvider;
  self->cachedConverters_ = new_JavaUtilHashMap_init();
}


#line 46
ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *new_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider) {
  ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self = [ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter alloc];
  ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(self, mapper, reflectionProvider, annotationProvider);
  return self;
}


#line 66
void ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type) {
  if (![((id<JavaUtilMap>) nil_chk(self->cachedConverters_)) containsKeyWithId:type]) {
    (void) [self->cachedConverters_ putWithId:type withId:ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(self, type)];
  }
}


#line 92
id<ComThoughtworksXstreamConvertersConverter> ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type) {
  id<ComThoughtworksXstreamConvertersConverter> converter;
  
#line 95
  @try {
    if ([ComThoughtworksXstreamConvertersSingleValueConverter_class_() isAssignableFrom:type]) {
      id<ComThoughtworksXstreamConvertersSingleValueConverter> svc = (id<ComThoughtworksXstreamConvertersSingleValueConverter>) check_protocol_cast([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(type)) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], @protocol(ComThoughtworksXstreamConvertersSingleValueConverter));
      converter = new_ComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithComThoughtworksXstreamConvertersSingleValueConverter_(svc);
    }
    else {
      
#line 100
      converter = (id<ComThoughtworksXstreamConvertersConverter>) check_protocol_cast([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(type)) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], @protocol(ComThoughtworksXstreamConvertersConverter));
    }
  }
  @catch (
#line 102
  JavaLangReflectInvocationTargetException *e) {
    @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), [((JavaLangReflectInvocationTargetException *) nil_chk(e)) getCause]);
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), e);
  }
  @catch (
#line 107
  JavaLangIllegalAccessException *e) {
    @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), e);
  }
  @catch (
#line 109
  JavaLangNoSuchMethodException *e) {
    @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), e);
  }
  return converter;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter)
