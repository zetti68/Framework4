//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/AbstractDriver.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/AbstractDriver.java"

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/AbstractDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/naming/NoNameCoder.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/net/URL.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComThoughtworksXstreamIoAbstractDriver () {
 @public
  id<ComThoughtworksXstreamIoNamingNameCoder> replacer_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoAbstractDriver, replacer_, id<ComThoughtworksXstreamIoNamingNameCoder>)


#line 32
@implementation ComThoughtworksXstreamIoAbstractDriver


#line 39
- (instancetype)init {
  ComThoughtworksXstreamIoAbstractDriver_init(self);
  return self;
}


#line 48
- (instancetype)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoAbstractDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}


#line 52
- (id<ComThoughtworksXstreamIoNamingNameCoder>)getNameCoder {
  return replacer_;
}


#line 59
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaNetURL:(JavaNetURL *)inArg {
  JavaIoInputStream *stream = nil;
  @try {
    stream = [((JavaNetURL *) nil_chk(inArg)) openStream];
  }
  @catch (
#line 63
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
  return [self createReaderWithJavaIoInputStream:stream];
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoFile:(JavaIoFile *)inArg {
  @try {
    return [self createReaderWithJavaIoInputStream:new_JavaIoFileInputStream_initWithJavaIoFile_(inArg)];
  }
  @catch (
#line 75
  JavaIoFileNotFoundException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractDriver", NULL, 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamIoNamingNameCoder:", "AbstractDriver", NULL, 0x1, NULL, NULL },
    { "getNameCoder", NULL, "Lcom.thoughtworks.xstream.io.naming.NameCoder;", 0x4, NULL, NULL },
    { "createReaderWithJavaNetURL:", "createReader", "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL, NULL },
    { "createReaderWithJavaIoFile:", "createReader", "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "replacer_", NULL, 0x2, "Lcom.thoughtworks.xstream.io.naming.NameCoder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoAbstractDriver = { 2, "AbstractDriver", "com.thoughtworks.xstream.io", NULL, 0x401, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamIoAbstractDriver;
}

@end


#line 39
void ComThoughtworksXstreamIoAbstractDriver_init(ComThoughtworksXstreamIoAbstractDriver *self) {
  (void) ComThoughtworksXstreamIoAbstractDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, new_ComThoughtworksXstreamIoNamingNoNameCoder_init());
}


#line 48
void ComThoughtworksXstreamIoAbstractDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoAbstractDriver *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  (void) NSObject_init(self);
  
#line 49
  self->replacer_ = nameCoder;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoAbstractDriver)
