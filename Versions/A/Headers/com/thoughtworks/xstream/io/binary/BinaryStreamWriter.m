//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/binary/BinaryStreamWriter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/binary/BinaryStreamWriter.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/binary/BinaryStreamWriter.h"
#include "com/thoughtworks/xstream/io/binary/Token.h"
#include "java/io/DataOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Long.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"


#line 27
@implementation ComThoughtworksXstreamIoBinaryBinaryStreamWriter


#line 33
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  if (self = [super init]) {
    idRegistry_ =
#line 29
    [[ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry alloc] initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter:self];
    tokenFormatter_ =
#line 31
    [[ComThoughtworksXstreamIoBinaryToken_Formatter alloc] init];
    
#line 34
    out_ = [[JavaIoDataOutputStream alloc] initWithJavaIoOutputStream:outputStream];
  }
  return self;
}


#line 37
- (void)startNodeWithNSString:(NSString *)name {
  
#line 38
  [self writeWithComThoughtworksXstreamIoBinaryToken:[[ComThoughtworksXstreamIoBinaryToken_StartNode alloc] initWithLong:[((ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *) nil_chk(idRegistry_)) getIdWithNSString:name]]];
}


#line 41
- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz {
  
#line 42
  [self startNodeWithNSString:name];
}


#line 45
- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  
#line 46
  [self writeWithComThoughtworksXstreamIoBinaryToken:[[ComThoughtworksXstreamIoBinaryToken_Attribute alloc] initWithLong:[((ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *) nil_chk(idRegistry_)) getIdWithNSString:name] withNSString:value]];
}


#line 49
- (void)setValueWithNSString:(NSString *)text {
  
#line 50
  [self writeWithComThoughtworksXstreamIoBinaryToken:[[ComThoughtworksXstreamIoBinaryToken_Value alloc] initWithNSString:text]];
}


#line 53
- (void)endNode {
  
#line 54
  [self writeWithComThoughtworksXstreamIoBinaryToken:[[ComThoughtworksXstreamIoBinaryToken_EndNode alloc] init]];
}


#line 57
- (void)flush {
  
#line 58
  @try {
    [((JavaIoDataOutputStream *) nil_chk(out_)) flush];
  }
  @catch (
#line 60
  JavaIoIOException *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
}


#line 65
- (void)close {
  
#line 66
  @try {
    [((JavaIoDataOutputStream *) nil_chk(out_)) close];
  }
  @catch (
#line 68
  JavaIoIOException *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
}


#line 73
- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)underlyingWriter {
  
#line 74
  return self;
}


#line 77
- (void)writeWithComThoughtworksXstreamIoBinaryToken:(ComThoughtworksXstreamIoBinaryToken *)token {
  
#line 78
  @try {
    [((ComThoughtworksXstreamIoBinaryToken_Formatter *) nil_chk(tokenFormatter_)) writeWithJavaIoDataOutput:out_ withComThoughtworksXstreamIoBinaryToken:token];
  }
  @catch (
#line 80
  JavaIoIOException *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *)other {
  [super copyAllFieldsTo:other];
  other->idRegistry_ = idRegistry_;
  other->out_ = out_;
  other->tokenFormatter_ = tokenFormatter_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoOutputStream:", "BinaryStreamWriter", NULL, 0x1, NULL },
    { "startNodeWithNSString:", "startNode", "V", 0x1, NULL },
    { "startNodeWithNSString:withIOSClass:", "startNode", "V", 0x1, NULL },
    { "addAttributeWithNSString:withNSString:", "addAttribute", "V", 0x1, NULL },
    { "setValueWithNSString:", "setValue", "V", 0x1, NULL },
    { "endNode", NULL, "V", 0x1, NULL },
    { "flush", NULL, "V", 0x1, NULL },
    { "close", NULL, "V", 0x1, NULL },
    { "underlyingWriter", NULL, "Lcom.thoughtworks.xstream.io.HierarchicalStreamWriter;", 0x1, NULL },
    { "writeWithComThoughtworksXstreamIoBinaryToken:", "write", "V", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "idRegistry_", NULL, 0x12, "Lcom.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry;", NULL,  },
    { "out_", NULL, 0x12, "Ljava.io.DataOutputStream;", NULL,  },
    { "tokenFormatter_", NULL, 0x12, "Lcom.thoughtworks.xstream.io.binary.Token$Formatter;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoBinaryBinaryStreamWriter = { "BinaryStreamWriter", "com.thoughtworks.xstream.io.binary", NULL, 0x1, 10, methods, 3, fields, 0, NULL};
  return &_ComThoughtworksXstreamIoBinaryBinaryStreamWriter;
}

@end


#line 85
@implementation ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry


#line 90
- (jlong)getIdWithNSString:(NSString *)value {
  
#line 91
  JavaLangLong *id_ = (JavaLangLong *) check_class_cast([((id<JavaUtilMap>) nil_chk(ids_)) getWithId:value], [JavaLangLong class]);
  if (id_ == nil) {
    id_ = [[JavaLangLong alloc] initWithLong:++nextId_];
    (void) [ids_ putWithId:value withId:id_];
    [this$0_ writeWithComThoughtworksXstreamIoBinaryToken:[[ComThoughtworksXstreamIoBinaryToken_MapIdToValue alloc] initWithLong:[id_ longLongValue] withNSString:value]];
  }
  return [((JavaLangLong *) nil_chk(id_)) longLongValue];
}

- (instancetype)initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter:(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *)outer$ {
  this$0_ = outer$;
  if (self = [super init]) {
    nextId_ =
#line 87
    0;
    ids_ =
#line 88
    [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *)other {
  [super copyAllFieldsTo:other];
  other->ids_ = ids_;
  other->nextId_ = nextId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getIdWithNSString:", "getId", "J", 0x1, NULL },
    { "initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.io.binary.BinaryStreamWriter;", NULL,  },
    { "nextId_", NULL, 0x2, "J", NULL,  },
    { "ids_", NULL, 0x2, "Ljava.util.Map;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry = { "IdRegistry", "com.thoughtworks.xstream.io.binary", "BinaryStreamWriter", 0x2, 2, methods, 3, fields, 0, NULL};
  return &_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry;
}

@end
