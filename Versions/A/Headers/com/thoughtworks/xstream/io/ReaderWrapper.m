//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/ReaderWrapper.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/ReaderWrapper.java"

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ErrorWriter.h"
#include "com/thoughtworks/xstream/io/ExtendedHierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/ReaderWrapper.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Iterator.h"


#line 23
@implementation ComThoughtworksXstreamIoReaderWrapper


#line 27
- (instancetype)initWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  ComThoughtworksXstreamIoReaderWrapper_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader);
  return self;
}


#line 31
- (jboolean)hasMoreChildren {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) hasMoreChildren];
}

- (void)moveDown {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) moveDown];
}

- (void)moveUp {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) moveUp];
}

- (NSString *)getNodeName {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getNodeName];
}

- (NSString *)getValue {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getValue];
}

- (NSString *)getAttributeWithNSString:(NSString *)name {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeWithNSString:name];
}

- (NSString *)getAttributeWithInt:(jint)index {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeWithInt:index];
}

- (jint)getAttributeCount {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeCount];
}

- (NSString *)getAttributeNameWithInt:(jint)index {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeNameWithInt:index];
}

- (id<JavaUtilIterator>)getAttributeNames {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeNames];
}

- (void)appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:(id<ComThoughtworksXstreamConvertersErrorWriter>)errorWriter {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:errorWriter];
}

- (void)close {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) close];
}

- (NSString *)peekNextChild {
  if (!([ComThoughtworksXstreamIoExtendedHierarchicalStreamReader_class_() isInstance:wrapped_])) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"peekNextChild");
  }
  return [((id<ComThoughtworksXstreamIoExtendedHierarchicalStreamReader>) nil_chk(((id<ComThoughtworksXstreamIoExtendedHierarchicalStreamReader>) check_protocol_cast(wrapped_, @protocol(ComThoughtworksXstreamIoExtendedHierarchicalStreamReader))))) peekNextChild];
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)underlyingReader {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) underlyingReader];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamIoHierarchicalStreamReader:", "ReaderWrapper", NULL, 0x4, NULL, NULL },
    { "hasMoreChildren", NULL, "Z", 0x1, NULL, NULL },
    { "moveDown", NULL, "V", 0x1, NULL, NULL },
    { "moveUp", NULL, "V", 0x1, NULL, NULL },
    { "getNodeName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAttributeWithNSString:", "getAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAttributeWithInt:", "getAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAttributeCount", NULL, "I", 0x1, NULL, NULL },
    { "getAttributeNameWithInt:", "getAttributeName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAttributeNames", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:", "appendErrors", "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "peekNextChild", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "underlyingReader", NULL, "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "wrapped_", NULL, 0x4, "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoReaderWrapper = { 2, "ReaderWrapper", "com.thoughtworks.xstream.io", NULL, 0x401, 15, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamIoReaderWrapper;
}

@end


#line 27
void ComThoughtworksXstreamIoReaderWrapper_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamIoReaderWrapper *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader) {
  (void) NSObject_init(self);
  
#line 28
  self->wrapped_ = reader;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoReaderWrapper)
