//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/path/PathTrackingWriter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/path/PathTrackingWriter.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/io/AbstractWriter.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/path/PathTracker.h"
#include "com/thoughtworks/xstream/io/path/PathTrackingWriter.h"


#line 26
@implementation ComThoughtworksXstreamIoPathPathTrackingWriter


#line 31
- (instancetype)initWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                             withComThoughtworksXstreamIoPathPathTracker:(ComThoughtworksXstreamIoPathPathTracker *)pathTracker {
  if (self =
#line 32
  [super initWithComThoughtworksXstreamIoHierarchicalStreamWriter:writer]) {
    
#line 33
    self->isNameEncoding_ = [(id) [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) underlyingWriter] isKindOfClass:[ComThoughtworksXstreamIoAbstractWriter class]];
    
#line 34
    self->pathTracker_ = pathTracker;
  }
  return self;
}


#line 37
- (void)startNodeWithNSString:(NSString *)name {
  
#line 38
  [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) pushElementWithNSString:isNameEncoding_ ? [((ComThoughtworksXstreamIoAbstractWriter *) nil_chk(((ComThoughtworksXstreamIoAbstractWriter *) check_class_cast([((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(wrapped_)) underlyingWriter], [ComThoughtworksXstreamIoAbstractWriter class])))) encodeNodeWithNSString:name] : name];
  [super startNodeWithNSString:name];
}


#line 42
- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz {
  
#line 43
  [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) pushElementWithNSString:isNameEncoding_ ? [((ComThoughtworksXstreamIoAbstractWriter *) nil_chk(((ComThoughtworksXstreamIoAbstractWriter *) check_class_cast([((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(wrapped_)) underlyingWriter], [ComThoughtworksXstreamIoAbstractWriter class])))) encodeNodeWithNSString:name] : name];
  [super startNodeWithNSString:name withIOSClass:clazz];
}


#line 47
- (void)endNode {
  
#line 48
  [super endNode];
  [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) popElement];
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoPathPathTrackingWriter *)other {
  [super copyAllFieldsTo:other];
  other->isNameEncoding_ = isNameEncoding_;
  other->pathTracker_ = pathTracker_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamIoPathPathTracker:", "PathTrackingWriter", NULL, 0x1, NULL },
    { "startNodeWithNSString:", "startNode", "V", 0x1, NULL },
    { "startNodeWithNSString:withIOSClass:", "startNode", "V", 0x1, NULL },
    { "endNode", NULL, "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pathTracker_", NULL, 0x12, "Lcom.thoughtworks.xstream.io.path.PathTracker;", NULL,  },
    { "isNameEncoding_", NULL, 0x12, "Z", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoPathPathTrackingWriter = { "PathTrackingWriter", "com.thoughtworks.xstream.io.path", NULL, 0x1, 4, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamIoPathPathTrackingWriter;
}

@end
