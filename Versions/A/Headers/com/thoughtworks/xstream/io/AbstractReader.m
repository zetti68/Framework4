//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/AbstractReader.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/AbstractReader.java"

#include "com/thoughtworks/xstream/core/util/Cloneables.h"
#include "com/thoughtworks/xstream/io/AbstractReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/naming/NoNameCoder.h"
#include "java/lang/UnsupportedOperationException.h"

#pragma clang diagnostic ignored "-Wprotocol"


#line 26
@implementation ComThoughtworksXstreamIoAbstractReader


#line 35
- (instancetype)init {
  return
#line 36
  [self initComThoughtworksXstreamIoAbstractReaderWithComThoughtworksXstreamIoNamingNameCoder:[[ComThoughtworksXstreamIoNamingNoNameCoder alloc] init]];
}


#line 45
- (instancetype)initComThoughtworksXstreamIoAbstractReaderWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  if (self = [super init]) {
    
#line 46
    self->nameCoder_ = (id<ComThoughtworksXstreamIoNamingNameCoder>) check_protocol_cast([ComThoughtworksXstreamCoreUtilCloneables cloneIfPossibleWithId:nameCoder], @protocol(ComThoughtworksXstreamIoNamingNameCoder));
  }
  return self;
}

- (instancetype)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  return [self initComThoughtworksXstreamIoAbstractReaderWithComThoughtworksXstreamIoNamingNameCoder:
#line 45
nameCoder];
}


#line 52
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)underlyingReader {
  
#line 53
  return self;
}


#line 63
- (NSString *)decodeNodeWithNSString:(NSString *)name {
  
#line 64
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) decodeNodeWithNSString:name];
}


#line 74
- (NSString *)decodeAttributeWithNSString:(NSString *)name {
  
#line 75
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) decodeAttributeWithNSString:name];
}


#line 85
- (NSString *)encodeNodeWithNSString:(NSString *)name {
  
#line 86
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) encodeNodeWithNSString:name];
}


#line 96
- (NSString *)encodeAttributeWithNSString:(NSString *)name {
  
#line 97
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) encodeAttributeWithNSString:name];
}


#line 100
- (NSString *)peekNextChild {
  
#line 101
  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"peekNextChild"];
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoAbstractReader *)other {
  [super copyAllFieldsTo:other];
  other->nameCoder_ = nameCoder_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractReader", NULL, 0x4, NULL },
    { "initWithComThoughtworksXstreamIoNamingNameCoder:", "AbstractReader", NULL, 0x4, NULL },
    { "underlyingReader", NULL, "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL },
    { "decodeNodeWithNSString:", "decodeNode", "Ljava.lang.String;", 0x1, NULL },
    { "decodeAttributeWithNSString:", "decodeAttribute", "Ljava.lang.String;", 0x1, NULL },
    { "encodeNodeWithNSString:", "encodeNode", "Ljava.lang.String;", 0x4, NULL },
    { "encodeAttributeWithNSString:", "encodeAttribute", "Ljava.lang.String;", 0x4, NULL },
    { "peekNextChild", NULL, "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nameCoder_", NULL, 0x2, "Lcom.thoughtworks.xstream.io.naming.NameCoder;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoAbstractReader = { "AbstractReader", "com.thoughtworks.xstream.io", NULL, 0x401, 8, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamIoAbstractReader;
}

@end
