//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/AbstractReader.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/AbstractReader.java"

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/Cloneables.h"
#include "com/thoughtworks/xstream/io/AbstractReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/naming/NoNameCoder.h"
#include "java/lang/UnsupportedOperationException.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComThoughtworksXstreamIoAbstractReader () {
 @public
  id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoAbstractReader, nameCoder_, id<ComThoughtworksXstreamIoNamingNameCoder>)


#line 26
@implementation ComThoughtworksXstreamIoAbstractReader


#line 35
- (instancetype)init {
  ComThoughtworksXstreamIoAbstractReader_init(self);
  return self;
}


#line 45
- (instancetype)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoAbstractReader_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}


#line 52
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)underlyingReader {
  return self;
}


#line 63
- (NSString *)decodeNodeWithNSString:(NSString *)name {
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) decodeNodeWithNSString:name];
}


#line 74
- (NSString *)decodeAttributeWithNSString:(NSString *)name {
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) decodeAttributeWithNSString:name];
}


#line 85
- (NSString *)encodeNodeWithNSString:(NSString *)name {
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) encodeNodeWithNSString:name];
}


#line 96
- (NSString *)encodeAttributeWithNSString:(NSString *)name {
  return [((id<ComThoughtworksXstreamIoNamingNameCoder>) nil_chk(nameCoder_)) encodeAttributeWithNSString:name];
}

- (NSString *)peekNextChild {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"peekNextChild");
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractReader", NULL, 0x4, NULL, NULL },
    { "initWithComThoughtworksXstreamIoNamingNameCoder:", "AbstractReader", NULL, 0x4, NULL, NULL },
    { "underlyingReader", NULL, "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL, NULL },
    { "decodeNodeWithNSString:", "decodeNode", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "decodeAttributeWithNSString:", "decodeAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "encodeNodeWithNSString:", "encodeNode", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "encodeAttributeWithNSString:", "encodeAttribute", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "peekNextChild", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nameCoder_", NULL, 0x2, "Lcom.thoughtworks.xstream.io.naming.NameCoder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoAbstractReader = { 2, "AbstractReader", "com.thoughtworks.xstream.io", NULL, 0x401, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamIoAbstractReader;
}

@end


#line 35
void ComThoughtworksXstreamIoAbstractReader_init(ComThoughtworksXstreamIoAbstractReader *self) {
  (void) ComThoughtworksXstreamIoAbstractReader_initWithComThoughtworksXstreamIoNamingNameCoder_(self, new_ComThoughtworksXstreamIoNamingNoNameCoder_init());
}


#line 45
void ComThoughtworksXstreamIoAbstractReader_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoAbstractReader *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  (void) NSObject_init(self);
  
#line 46
  self->nameCoder_ = (id<ComThoughtworksXstreamIoNamingNameCoder>) check_protocol_cast(ComThoughtworksXstreamCoreUtilCloneables_cloneIfPossibleWithId_(nameCoder), @protocol(ComThoughtworksXstreamIoNamingNameCoder));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoAbstractReader)
