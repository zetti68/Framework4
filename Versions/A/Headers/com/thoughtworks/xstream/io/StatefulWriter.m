//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/StatefulWriter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/StatefulWriter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/FastStack.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/StatefulWriter.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/WriterWrapper.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamIoStatefulWriter () {
 @public
  jint state__;
  jint balance_;
  ComThoughtworksXstreamCoreUtilFastStack *attributes_;
}

- (void)startNodeCommon;

- (void)checkClosed;

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoStatefulWriter, attributes_, ComThoughtworksXstreamCoreUtilFastStack *)

__attribute__((unused)) static void ComThoughtworksXstreamIoStatefulWriter_startNodeCommon(ComThoughtworksXstreamIoStatefulWriter *self);

__attribute__((unused)) static void ComThoughtworksXstreamIoStatefulWriter_checkClosed(ComThoughtworksXstreamIoStatefulWriter *self);

jint ComThoughtworksXstreamIoStatefulWriter_STATE_OPEN_ = 
#line 37
0;
jint ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START_ = 
#line 43
1;
jint ComThoughtworksXstreamIoStatefulWriter_STATE_VALUE_ = 
#line 49
2;
jint ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END_ = 
#line 55
3;
jint ComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED_ = 
#line 61
4;


#line 30
@implementation ComThoughtworksXstreamIoStatefulWriter


#line 73
- (instancetype)initWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)wrapped {
  ComThoughtworksXstreamIoStatefulWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_(self, wrapped);
  return self;
}

- (void)startNodeWithNSString:(NSString *)name {
  ComThoughtworksXstreamIoStatefulWriter_startNodeCommon(self);
  [super startNodeWithNSString:name];
}

- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz {
  ComThoughtworksXstreamIoStatefulWriter_startNodeCommon(self);
  [super startNodeWithNSString:name withIOSClass:clazz];
}


#line 88
- (void)startNodeCommon {
  ComThoughtworksXstreamIoStatefulWriter_startNodeCommon(self);
}


#line 99
- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  ComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (state__ != ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START_) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"Writing attribute '",
#line 103
    name, @"' without an opened node")));
  }
  
#line 106
  id<JavaUtilSet> currentAttributes = (id<JavaUtilSet>) check_protocol_cast([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(attributes_)) peek], @protocol(JavaUtilSet));
  if ([((id<JavaUtilSet>) nil_chk(currentAttributes)) containsWithId:name]) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"Writing attribute '",
#line 109
    name, @"' twice")));
  }
  
#line 112
  [currentAttributes addWithId:name];
  [super addAttributeWithNSString:name withNSString:value];
}


#line 116
- (void)setValueWithNSString:(NSString *)text {
  ComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (state__ != ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START_) {
    
#line 120
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(new_JavaLangIllegalStateException_initWithNSString_(
#line 121
    @"Writing text without an opened node"));
  }
  state__ = ComThoughtworksXstreamIoStatefulWriter_STATE_VALUE_;
  [super setValueWithNSString:text];
}


#line 127
- (void)endNode {
  ComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (balance_-- == 0) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(new_JavaLangIllegalStateException_initWithNSString_(@"Unbalanced node"));
  }
  [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(attributes_)) popSilently];
  state__ = ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END_;
  [super endNode];
}

- (void)flush {
  ComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  [super flush];
}

- (void)close {
  if (state__ != ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END_ && state__ != ComThoughtworksXstreamIoStatefulWriter_STATE_OPEN_) {
  }
  
#line 147
  state__ = ComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED_;
  [super close];
}

- (void)checkClosed {
  ComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
}


#line 168
- (jint)state {
  return state__;
}

- (id)readResolve {
  attributes_ = new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(16);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamIoHierarchicalStreamWriter:", "StatefulWriter", NULL, 0x1, NULL, NULL },
    { "startNodeWithNSString:", "startNode", "V", 0x1, NULL, NULL },
    { "startNodeWithNSString:withIOSClass:", "startNode", "V", 0x1, NULL, NULL },
    { "startNodeCommon", NULL, "V", 0x2, NULL, NULL },
    { "addAttributeWithNSString:withNSString:", "addAttribute", "V", 0x1, NULL, NULL },
    { "setValueWithNSString:", "setValue", "V", 0x1, NULL, NULL },
    { "endNode", NULL, "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "checkClosed", NULL, "V", 0x2, NULL, NULL },
    { "state", NULL, "I", 0x1, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STATE_OPEN_", NULL, 0x9, "I", &ComThoughtworksXstreamIoStatefulWriter_STATE_OPEN_, NULL,  },
    { "STATE_NODE_START_", NULL, 0x9, "I", &ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START_, NULL,  },
    { "STATE_VALUE_", NULL, 0x9, "I", &ComThoughtworksXstreamIoStatefulWriter_STATE_VALUE_, NULL,  },
    { "STATE_NODE_END_", NULL, 0x9, "I", &ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END_, NULL,  },
    { "STATE_CLOSED_", NULL, 0x9, "I", &ComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED_, NULL,  },
    { "state__", "state", 0x82, "I", NULL, NULL,  },
    { "balance_", NULL, 0x82, "I", NULL, NULL,  },
    { "attributes_", NULL, 0x82, "Lcom.thoughtworks.xstream.core.util.FastStack;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoStatefulWriter = { 2, "StatefulWriter", "com.thoughtworks.xstream.io", NULL, 0x1, 12, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamIoStatefulWriter;
}

@end


#line 73
void ComThoughtworksXstreamIoStatefulWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamIoStatefulWriter *self, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped) {
  (void) ComThoughtworksXstreamIoWriterWrapper_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_(self, wrapped);
  self->state__ = ComThoughtworksXstreamIoStatefulWriter_STATE_OPEN_;
  
#line 75
  self->attributes_ = new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(16);
}


#line 73
ComThoughtworksXstreamIoStatefulWriter *new_ComThoughtworksXstreamIoStatefulWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_(id<ComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped) {
  ComThoughtworksXstreamIoStatefulWriter *self = [ComThoughtworksXstreamIoStatefulWriter alloc];
  ComThoughtworksXstreamIoStatefulWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_(self, wrapped);
  return self;
}


#line 88
void ComThoughtworksXstreamIoStatefulWriter_startNodeCommon(ComThoughtworksXstreamIoStatefulWriter *self) {
  ComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (self->state__ == ComThoughtworksXstreamIoStatefulWriter_STATE_VALUE_) {
    
#line 92
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(new_JavaLangIllegalStateException_initWithNSString_(@"Opening node after writing text"));
  }
  self->state__ = ComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START_;
  ++self->balance_;
  (void) [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->attributes_)) pushWithId:new_JavaUtilHashSet_init()];
}


#line 151
void ComThoughtworksXstreamIoStatefulWriter_checkClosed(ComThoughtworksXstreamIoStatefulWriter *self) {
  if (self->state__ == ComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED_) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(new_JavaIoIOException_initWithNSString_(@"Writing on a closed stream"));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoStatefulWriter)
