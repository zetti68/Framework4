//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/xml/AbstractPullReader.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/xml/AbstractPullReader.java"

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/FastStack.h"
#include "com/thoughtworks/xstream/io/AttributeNameIterator.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/AbstractPullReader.h"
#include "com/thoughtworks/xstream/io/xml/AbstractXmlReader.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Iterator.h"

@class ComThoughtworksXstreamIoXmlAbstractPullReader_Event;

@interface ComThoughtworksXstreamIoXmlAbstractPullReader () {
 @public
  ComThoughtworksXstreamCoreUtilFastStack *elementStack_;
  ComThoughtworksXstreamCoreUtilFastStack *pool_;
  ComThoughtworksXstreamCoreUtilFastStack *lookahead_;
  ComThoughtworksXstreamCoreUtilFastStack *lookback_;
  jboolean marked_;
}

- (void)move;

- (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *)readEvent;

- (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *)readRealEvent;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlAbstractPullReader, elementStack_, ComThoughtworksXstreamCoreUtilFastStack *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlAbstractPullReader, pool_, ComThoughtworksXstreamCoreUtilFastStack *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlAbstractPullReader, lookahead_, ComThoughtworksXstreamCoreUtilFastStack *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlAbstractPullReader, lookback_, ComThoughtworksXstreamCoreUtilFastStack *)

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlAbstractPullReader_move(ComThoughtworksXstreamIoXmlAbstractPullReader *self);

__attribute__((unused)) static ComThoughtworksXstreamIoXmlAbstractPullReader_Event *ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(ComThoughtworksXstreamIoXmlAbstractPullReader *self);

__attribute__((unused)) static ComThoughtworksXstreamIoXmlAbstractPullReader_Event *ComThoughtworksXstreamIoXmlAbstractPullReader_readRealEvent(ComThoughtworksXstreamIoXmlAbstractPullReader *self);

@interface ComThoughtworksXstreamIoXmlAbstractPullReader_Event : NSObject {
 @public
  jint type_;
  NSString *value_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoXmlAbstractPullReader_Event)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlAbstractPullReader_Event, value_, NSString *)

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlAbstractPullReader_Event_init(ComThoughtworksXstreamIoXmlAbstractPullReader_Event *self);

__attribute__((unused)) static ComThoughtworksXstreamIoXmlAbstractPullReader_Event *new_ComThoughtworksXstreamIoXmlAbstractPullReader_Event_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoXmlAbstractPullReader_Event)


#line 27
@implementation ComThoughtworksXstreamIoXmlAbstractPullReader


#line 50
- (instancetype)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoXmlAbstractPullReader_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}


#line 58
- (instancetype)initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  ComThoughtworksXstreamIoXmlAbstractPullReader_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, replacer);
  return self;
}


#line 72
- (jint)pullNextEvent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 77
- (NSString *)pullElementName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 82
- (NSString *)pullText {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 84
- (jboolean)hasMoreChildren {
  [self mark];
  while (YES) {
    switch (((ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) nil_chk(ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(self)))->type_) {
      case ComThoughtworksXstreamIoXmlAbstractPullReader_START_NODE:
      [self reset];
      return YES;
      case ComThoughtworksXstreamIoXmlAbstractPullReader_END_NODE:
      [self reset];
      return NO;
      default:
      continue;
    }
  }
}

- (void)moveDown {
  jint currentDepth = [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(elementStack_)) size];
  while ([elementStack_ size] <= currentDepth) {
    ComThoughtworksXstreamIoXmlAbstractPullReader_move(self);
    if ([elementStack_ size] < currentDepth) {
      @throw new_JavaLangRuntimeException_init();
    }
  }
}

- (void)moveUp {
  jint currentDepth = [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(elementStack_)) size];
  while ([elementStack_ size] >= currentDepth) {
    ComThoughtworksXstreamIoXmlAbstractPullReader_move(self);
  }
}

- (void)move {
  ComThoughtworksXstreamIoXmlAbstractPullReader_move(self);
}


#line 130
- (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *)readEvent {
  return ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(self);
}


#line 146
- (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *)readRealEvent {
  return ComThoughtworksXstreamIoXmlAbstractPullReader_readRealEvent(self);
}


#line 159
- (void)mark {
  marked_ = YES;
}

- (void)reset {
  while ([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(lookahead_)) hasStuff]) {
    (void) [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(lookback_)) pushWithId:[lookahead_ pop]];
  }
  marked_ = NO;
}

- (NSString *)getValue {
  
#line 176
  NSString *last = nil;
  JavaLangStringBuffer *buffer = nil;
  
#line 179
  [self mark];
  ComThoughtworksXstreamIoXmlAbstractPullReader_Event *event = ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(self);
  while (YES) {
    if (((ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) nil_chk(event))->type_ == ComThoughtworksXstreamIoXmlAbstractPullReader_TEXT) {
      NSString *text = event->value_;
      if (text != nil && ((jint) [text length]) > 0) {
        if (last == nil) {
          last = text;
        }
        else {
          
#line 188
          if (buffer == nil) {
            buffer = new_JavaLangStringBuffer_initWithNSString_(last);
          }
          (void) [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:text];
        }
      }
    }
    else
#line 194
    if (event->type_ != ComThoughtworksXstreamIoXmlAbstractPullReader_COMMENT) {
      break;
    }
    event = ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(self);
  }
  [self reset];
  if (buffer != nil) {
    return [buffer description];
  }
  else {
    
#line 203
    return (last == nil) ? @"" : last;
  }
}


#line 207
- (id<JavaUtilIterator>)getAttributeNames {
  return new_ComThoughtworksXstreamIoAttributeNameIterator_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(self);
}

- (NSString *)getNodeName {
  return [self unescapeXmlNameWithNSString:(NSString *) check_class_cast([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(elementStack_)) peek], [NSString class])];
}

- (NSString *)peekNextChild {
  [self mark];
  while (YES) {
    ComThoughtworksXstreamIoXmlAbstractPullReader_Event *ev = ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(self);
    switch (((ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) nil_chk(ev))->type_) {
      case ComThoughtworksXstreamIoXmlAbstractPullReader_START_NODE:
      [self reset];
      return ev->value_;
      case ComThoughtworksXstreamIoXmlAbstractPullReader_END_NODE:
      [self reset];
      return nil;
      default:
      continue;
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamIoNamingNameCoder:", "AbstractPullReader", NULL, 0x4, NULL, NULL },
    { "initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:", "AbstractPullReader", NULL, 0x4, NULL, NULL },
    { "pullNextEvent", NULL, "I", 0x404, NULL, NULL },
    { "pullElementName", NULL, "Ljava.lang.String;", 0x404, NULL, NULL },
    { "pullText", NULL, "Ljava.lang.String;", 0x404, NULL, NULL },
    { "hasMoreChildren", NULL, "Z", 0x1, NULL, NULL },
    { "moveDown", NULL, "V", 0x1, NULL, NULL },
    { "moveUp", NULL, "V", 0x1, NULL, NULL },
    { "move", NULL, "V", 0x2, NULL, NULL },
    { "readEvent", NULL, "Lcom.thoughtworks.xstream.io.xml.AbstractPullReader$Event;", 0x2, NULL, NULL },
    { "readRealEvent", NULL, "Lcom.thoughtworks.xstream.io.xml.AbstractPullReader$Event;", 0x2, NULL, NULL },
    { "mark", NULL, "V", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAttributeNames", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "getNodeName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "peekNextChild", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "START_NODE_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = ComThoughtworksXstreamIoXmlAbstractPullReader_START_NODE },
    { "END_NODE_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = ComThoughtworksXstreamIoXmlAbstractPullReader_END_NODE },
    { "TEXT_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = ComThoughtworksXstreamIoXmlAbstractPullReader_TEXT },
    { "COMMENT_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = ComThoughtworksXstreamIoXmlAbstractPullReader_COMMENT },
    { "OTHER_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = ComThoughtworksXstreamIoXmlAbstractPullReader_OTHER },
    { "elementStack_", NULL, 0x12, "Lcom.thoughtworks.xstream.core.util.FastStack;", NULL, NULL,  },
    { "pool_", NULL, 0x12, "Lcom.thoughtworks.xstream.core.util.FastStack;", NULL, NULL,  },
    { "lookahead_", NULL, 0x12, "Lcom.thoughtworks.xstream.core.util.FastStack;", NULL, NULL,  },
    { "lookback_", NULL, 0x12, "Lcom.thoughtworks.xstream.core.util.FastStack;", NULL, NULL,  },
    { "marked_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.thoughtworks.xstream.io.xml.AbstractPullReader$Event;"};
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlAbstractPullReader = { 2, "AbstractPullReader", "com.thoughtworks.xstream.io.xml", NULL, 0x401, 17, methods, 10, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComThoughtworksXstreamIoXmlAbstractPullReader;
}

@end


#line 50
void ComThoughtworksXstreamIoXmlAbstractPullReader_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlAbstractPullReader *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  (void) ComThoughtworksXstreamIoXmlAbstractXmlReader_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  self->elementStack_ = new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(
#line 35
  16);
  self->pool_ = new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(16);
  self->lookahead_ = new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(
#line 38
  4);
  self->lookback_ = new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(4);
}


#line 58
void ComThoughtworksXstreamIoXmlAbstractPullReader_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlAbstractPullReader *self, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  (void) ComThoughtworksXstreamIoXmlAbstractPullReader_initWithComThoughtworksXstreamIoNamingNameCoder_(self, replacer);
}


#line 117
void ComThoughtworksXstreamIoXmlAbstractPullReader_move(ComThoughtworksXstreamIoXmlAbstractPullReader *self) {
  ComThoughtworksXstreamIoXmlAbstractPullReader_Event *event = ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(self);
  (void) [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->pool_)) pushWithId:event];
  switch (((ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) nil_chk(event))->type_) {
    case ComThoughtworksXstreamIoXmlAbstractPullReader_START_NODE:
    (void) [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->elementStack_)) pushWithId:[self pullElementName]];
    break;
    case ComThoughtworksXstreamIoXmlAbstractPullReader_END_NODE:
    (void) [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->elementStack_)) pop];
    break;
  }
}

ComThoughtworksXstreamIoXmlAbstractPullReader_Event *ComThoughtworksXstreamIoXmlAbstractPullReader_readEvent(ComThoughtworksXstreamIoXmlAbstractPullReader *self) {
  if (self->marked_) {
    if ([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->lookback_)) hasStuff]) {
      return (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) check_class_cast([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->lookahead_)) pushWithId:[self->lookback_ pop]], [ComThoughtworksXstreamIoXmlAbstractPullReader_Event class]);
    }
    else {
      
#line 135
      return (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) check_class_cast([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->lookahead_)) pushWithId:ComThoughtworksXstreamIoXmlAbstractPullReader_readRealEvent(self)], [ComThoughtworksXstreamIoXmlAbstractPullReader_Event class]);
    }
  }
  else {
    
#line 138
    if ([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->lookback_)) hasStuff]) {
      return (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) check_class_cast([self->lookback_ pop], [ComThoughtworksXstreamIoXmlAbstractPullReader_Event class]);
    }
    else {
      
#line 141
      return ComThoughtworksXstreamIoXmlAbstractPullReader_readRealEvent(self);
    }
  }
}


#line 146
ComThoughtworksXstreamIoXmlAbstractPullReader_Event *ComThoughtworksXstreamIoXmlAbstractPullReader_readRealEvent(ComThoughtworksXstreamIoXmlAbstractPullReader *self) {
  ComThoughtworksXstreamIoXmlAbstractPullReader_Event *event = [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->pool_)) hasStuff] ? (ComThoughtworksXstreamIoXmlAbstractPullReader_Event *) check_class_cast([self->pool_ pop], [ComThoughtworksXstreamIoXmlAbstractPullReader_Event class]) : new_ComThoughtworksXstreamIoXmlAbstractPullReader_Event_init();
  event->type_ = [self pullNextEvent];
  if (event->type_ == ComThoughtworksXstreamIoXmlAbstractPullReader_TEXT) {
    event->value_ = [self pullText];
  }
  else
#line 151
  if (event->type_ == ComThoughtworksXstreamIoXmlAbstractPullReader_START_NODE) {
    event->value_ = [self pullElementName];
  }
  else {
    
#line 154
    event->value_ = nil;
  }
  return event;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoXmlAbstractPullReader)


#line 42
@implementation ComThoughtworksXstreamIoXmlAbstractPullReader_Event

- (instancetype)init {
  ComThoughtworksXstreamIoXmlAbstractPullReader_Event_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x0, "I", NULL, NULL,  },
    { "value_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlAbstractPullReader_Event = { 2, "Event", "com.thoughtworks.xstream.io.xml", "AbstractPullReader", 0xa, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamIoXmlAbstractPullReader_Event;
}

@end

void ComThoughtworksXstreamIoXmlAbstractPullReader_Event_init(ComThoughtworksXstreamIoXmlAbstractPullReader_Event *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamIoXmlAbstractPullReader_Event *new_ComThoughtworksXstreamIoXmlAbstractPullReader_Event_init() {
  ComThoughtworksXstreamIoXmlAbstractPullReader_Event *self = [ComThoughtworksXstreamIoXmlAbstractPullReader_Event alloc];
  ComThoughtworksXstreamIoXmlAbstractPullReader_Event_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoXmlAbstractPullReader_Event)
