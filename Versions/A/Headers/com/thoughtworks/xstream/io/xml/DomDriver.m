//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/xml/DomDriver.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/xml/DomDriver.java"

#include "com/thoughtworks/xstream/io/AbstractDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/DomDriver.h"
#include "com/thoughtworks/xstream/io/xml/DomReader.h"
#include "com/thoughtworks/xstream/io/xml/PrettyPrintWriter.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/Reader.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/io/Writer.h"
#include "java/net/URI.h"
#include "java/net/URL.h"
#include "javax/xml/parsers/DocumentBuilder.h"
#include "javax/xml/parsers/DocumentBuilderFactory.h"
#include "javax/xml/parsers/FactoryConfigurationError.h"
#include "javax/xml/parsers/ParserConfigurationException.h"
#include "org/w3c/dom/Document.h"
#include "org/xml/sax/InputSource.h"
#include "org/xml/sax/SAXException.h"


#line 39
@implementation ComThoughtworksXstreamIoXmlDomDriver


#line 47
- (instancetype)init {
  return
#line 48
  [self initComThoughtworksXstreamIoXmlDomDriverWithNSString:nil];
}


#line 55
- (instancetype)initComThoughtworksXstreamIoXmlDomDriverWithNSString:(NSString *)encoding {
  return
#line 56
  [self initComThoughtworksXstreamIoXmlDomDriverWithNSString:encoding withComThoughtworksXstreamIoNamingNameCoder:[[ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder alloc] init]];
}

- (instancetype)initWithNSString:(NSString *)encoding {
  return [self initComThoughtworksXstreamIoXmlDomDriverWithNSString:
#line 55
encoding];
}


#line 62
- (instancetype)initComThoughtworksXstreamIoXmlDomDriverWithNSString:(NSString *)encoding
                         withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  if (self =
#line 63
  [super initWithComThoughtworksXstreamIoNamingNameCoder:nameCoder]) {
    
#line 64
    documentBuilderFactory_ = [JavaxXmlParsersDocumentBuilderFactory newInstance];
    
#line 65
    self->encoding_ = encoding;
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)encoding
withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  return [self initComThoughtworksXstreamIoXmlDomDriverWithNSString:
#line 62
encoding withComThoughtworksXstreamIoNamingNameCoder:nameCoder];
}


#line 72
- (instancetype)initWithNSString:(NSString *)encoding
withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  return
#line 73
  [self initComThoughtworksXstreamIoXmlDomDriverWithNSString:encoding withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>) check_protocol_cast(replacer, @protocol(ComThoughtworksXstreamIoNamingNameCoder))];
}


#line 76
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoReader:(JavaIoReader *)inArg {
  
#line 77
  return [self createReaderWithOrgXmlSaxInputSource:[[OrgXmlSaxInputSource alloc] initWithJavaIoReader:inArg]];
}


#line 80
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  
#line 81
  return [self createReaderWithOrgXmlSaxInputSource:[[OrgXmlSaxInputSource alloc] initWithJavaIoInputStream:inArg]];
}


#line 84
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaNetURL:(JavaNetURL *)inArg {
  
#line 85
  return [self createReaderWithOrgXmlSaxInputSource:[[OrgXmlSaxInputSource alloc] initWithNSString:[((JavaNetURL *) nil_chk(inArg)) toExternalForm]]];
}


#line 88
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoFile:(JavaIoFile *)inArg {
  
#line 89
  return [self createReaderWithOrgXmlSaxInputSource:[[OrgXmlSaxInputSource alloc] initWithNSString:[((JavaNetURI *) nil_chk([((JavaIoFile *) nil_chk(inArg)) toURI])) toASCIIString]]];
}


#line 92
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithOrgXmlSaxInputSource:(OrgXmlSaxInputSource *)source {
  
#line 93
  @try {
    JavaxXmlParsersDocumentBuilder *documentBuilder = [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(documentBuilderFactory_)) newDocumentBuilder];
    if (encoding_ != nil) {
      [((OrgXmlSaxInputSource *) nil_chk(source)) setEncodingWithNSString:encoding_];
    }
    id<OrgW3cDomDocument> document = [((JavaxXmlParsersDocumentBuilder *) nil_chk(documentBuilder)) parseWithOrgXmlSaxInputSource:source];
    return [[ComThoughtworksXstreamIoXmlDomReader alloc] initWithOrgW3cDomDocument:document withComThoughtworksXstreamIoNamingNameCoder:[self getNameCoder]];
  }
  @catch (
#line 100
  JavaxXmlParsersFactoryConfigurationError *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
  @catch (
#line 102
  JavaxXmlParsersParserConfigurationException *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
  @catch (
#line 104
  OrgXmlSaxSAXException *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
  @catch (
#line 106
  JavaIoIOException *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
}


#line 111
- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoWriter:(JavaIoWriter *)outArg {
  
#line 112
  return [[ComThoughtworksXstreamIoXmlPrettyPrintWriter alloc] initWithJavaIoWriter:outArg withComThoughtworksXstreamIoNamingNameCoder:[self getNameCoder]];
}


#line 115
- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  
#line 116
  @try {
    return [self createWriterWithJavaIoWriter:encoding_ != nil ?
#line 118
    [[JavaIoOutputStreamWriter alloc] initWithJavaIoOutputStream:outArg withNSString:encoding_] :
#line 119
    [[JavaIoOutputStreamWriter alloc] initWithJavaIoOutputStream:outArg]];
  }
  @catch (
#line 120
  JavaIoUnsupportedEncodingException *e) {
    @throw [[ComThoughtworksXstreamIoStreamException alloc] initWithJavaLangThrowable:e];
  }
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoXmlDomDriver *)other {
  [super copyAllFieldsTo:other];
  other->documentBuilderFactory_ = documentBuilderFactory_;
  other->encoding_ = encoding_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DomDriver", NULL, 0x1, NULL },
    { "initWithNSString:", "DomDriver", NULL, 0x1, NULL },
    { "initWithNSString:withComThoughtworksXstreamIoNamingNameCoder:", "DomDriver", NULL, 0x1, NULL },
    { "initWithNSString:withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:", "DomDriver", NULL, 0x1, NULL },
    { "createReaderWithJavaIoReader:", "createReader", "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL },
    { "createReaderWithJavaIoInputStream:", "createReader", "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL },
    { "createReaderWithJavaNetURL:", "createReader", "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL },
    { "createReaderWithJavaIoFile:", "createReader", "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x1, NULL },
    { "createReaderWithOrgXmlSaxInputSource:", "createReader", "Lcom.thoughtworks.xstream.io.HierarchicalStreamReader;", 0x2, NULL },
    { "createWriterWithJavaIoWriter:", "createWriter", "Lcom.thoughtworks.xstream.io.HierarchicalStreamWriter;", 0x1, NULL },
    { "createWriterWithJavaIoOutputStream:", "createWriter", "Lcom.thoughtworks.xstream.io.HierarchicalStreamWriter;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "encoding_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
    { "documentBuilderFactory_", NULL, 0x12, "Ljavax.xml.parsers.DocumentBuilderFactory;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlDomDriver = { "DomDriver", "com.thoughtworks.xstream.io.xml", NULL, 0x1, 11, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamIoXmlDomDriver;
}

@end
