//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.java
//

#ifndef _ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_H_
#define _ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_H_

@class IOSObjectArray;
@protocol JavaUtilMap;

#import "JreEmulation.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "java/util/ArrayList.h"

@interface ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder : NSObject < ComThoughtworksXstreamIoNamingNameCoder, NSCopying > {
 @public
  NSString *dollarReplacement_;
  NSString *escapeCharReplacement_;
  id<JavaUtilMap> escapeCache_;
  id<JavaUtilMap> unescapeCache_;
  NSString *hexPrefix_;
}

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)dollarReplacement
                    withNSString:(NSString *)escapeCharReplacement;

- (instancetype)initWithNSString:(NSString *)dollarReplacement
                    withNSString:(NSString *)escapeCharReplacement
                    withNSString:(NSString *)hexPrefix;

- (NSString *)decodeAttributeWithNSString:(NSString *)attributeName;

- (NSString *)decodeNodeWithNSString:(NSString *)elementName;

- (NSString *)encodeAttributeWithNSString:(NSString *)name;

- (NSString *)encodeNodeWithNSString:(NSString *)name;

- (NSString *)encodeNameWithNSString:(NSString *)name;

- (NSString *)decodeNameWithNSString:(NSString *)name;

- (id)clone;

- (id)readResolve;

- (id<JavaUtilMap>)createCacheMap;

+ (jboolean)isXmlNameStartCharWithInt:(jint)cp;

+ (jboolean)isXmlNameCharWithInt:(jint)cp;

+ (jboolean)isInNameCharBoundsWithInt:(jint)cp
withComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_IntPairArray:(IOSObjectArray *)nameCharBounds;

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder *)other;

- (id)copyWithZone:(NSZone *)zone;

@end

FOUNDATION_EXPORT BOOL ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_initialized;
J2OBJC_STATIC_INIT(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder, dollarReplacement_, NSString *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder, escapeCharReplacement_, NSString *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder, escapeCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder, unescapeCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder, hexPrefix_, NSString *)

FOUNDATION_EXPORT IOSObjectArray *ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_XML_NAME_START_CHAR_BOUNDS_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder, XML_NAME_START_CHAR_BOUNDS_, IOSObjectArray *)

FOUNDATION_EXPORT IOSObjectArray *ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_XML_NAME_CHAR_EXTRA_BOUNDS_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder, XML_NAME_CHAR_EXTRA_BOUNDS_, IOSObjectArray *)

@interface ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_IntPairList : JavaUtilArrayList {
}

- (void)addWithInt:(jint)min
           withInt:(jint)max;

- (void)addWithChar:(jchar)cp;

- (instancetype)init;


@end

__attribute__((always_inline)) inline void ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_IntPairList_init() {}

@interface ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_IntPair : NSObject {
 @public
  jint min_;
  jint max_;
}

- (instancetype)initWithInt:(jint)min
                    withInt:(jint)max;

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_IntPair *)other;

@end

__attribute__((always_inline)) inline void ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_IntPair_init() {}

#endif // _ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_H_
