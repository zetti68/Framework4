//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/xml/XppReader.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/xml/XppReader.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ErrorWriter.h"
#include "com/thoughtworks/xstream/io/AbstractReader.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/AbstractPullReader.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "com/thoughtworks/xstream/io/xml/XppReader.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "org/xmlpull/v1/XmlPullParser.h"
#include "org/xmlpull/v1/XmlPullParserException.h"

@interface ComThoughtworksXstreamIoXmlXppReader () {
 @public
  id<OrgXmlpullV1XmlPullParser> parser_;
  JavaIoReader *reader_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlXppReader, parser_, id<OrgXmlpullV1XmlPullParser>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlXppReader, reader_, JavaIoReader *)


#line 30
@implementation ComThoughtworksXstreamIoXmlXppReader


#line 42
- (instancetype)initWithJavaIoReader:(JavaIoReader *)reader
       withOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser {
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_(self, reader, parser);
  return self;
}


#line 54
- (instancetype)initWithJavaIoReader:(JavaIoReader *)reader
       withOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(self, reader, parser, nameCoder);
  return self;
}


#line 69
- (instancetype)initWithJavaIoReader:(JavaIoReader *)reader {
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_(self, reader);
  return self;
}


#line 77
- (instancetype)initWithJavaIoReader:(JavaIoReader *)reader
withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, reader, replacer);
  return self;
}


#line 93
- (id<OrgXmlpullV1XmlPullParser>)createParser {
  JavaLangException *exception = nil;
  @try {
    return (id<OrgXmlpullV1XmlPullParser>) check_protocol_cast([((IOSClass *) nil_chk(IOSClass_forName_initialize_classLoader_(@"org.xmlpull.mxp1.MXParser", YES, [OrgXmlpullV1XmlPullParser_class_() getClassLoader]))) newInstance], @protocol(OrgXmlpullV1XmlPullParser));
  }
  @catch (
#line 97
  JavaLangInstantiationException *e) {
    exception = e;
  }
  @catch (
#line 99
  JavaLangIllegalAccessException *e) {
    exception = e;
  }
  @catch (
#line 101
  JavaLangClassNotFoundException *e) {
    exception = e;
  }
  @throw new_ComThoughtworksXstreamIoStreamException_initWithNSString_withJavaLangThrowable_(@"Cannot create Xpp3 parser instance.", exception);
}


#line 107
- (jint)pullNextEvent {
  @try {
    switch ([((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) next]) {
      case OrgXmlpullV1XmlPullParser_START_DOCUMENT:
      case OrgXmlpullV1XmlPullParser_START_TAG:
      return ComThoughtworksXstreamIoXmlAbstractPullReader_START_NODE;
      case OrgXmlpullV1XmlPullParser_END_DOCUMENT:
      case OrgXmlpullV1XmlPullParser_END_TAG:
      return ComThoughtworksXstreamIoXmlAbstractPullReader_END_NODE;
      case OrgXmlpullV1XmlPullParser_TEXT:
      return ComThoughtworksXstreamIoXmlAbstractPullReader_TEXT;
      case OrgXmlpullV1XmlPullParser_COMMENT:
      return ComThoughtworksXstreamIoXmlAbstractPullReader_COMMENT;
      default:
      return ComThoughtworksXstreamIoXmlAbstractPullReader_OTHER;
    }
  }
  @catch (
#line 123
  OrgXmlpullV1XmlPullParserException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
  @catch (
#line 125
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 130
- (NSString *)pullElementName {
  return [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) getName];
}

- (NSString *)pullText {
  return [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) getText];
}

- (NSString *)getAttributeWithNSString:(NSString *)name {
  return [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) getAttributeValueWithNSString:nil withNSString:[self encodeAttributeWithNSString:name]];
}

- (NSString *)getAttributeWithInt:(jint)index {
  return [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) getAttributeValueWithInt:index];
}

- (jint)getAttributeCount {
  return [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) getAttributeCount];
}

- (NSString *)getAttributeNameWithInt:(jint)index {
  return [self decodeAttributeWithNSString:[((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) getAttributeNameWithInt:index]];
}

- (void)appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:(id<ComThoughtworksXstreamConvertersErrorWriter>)errorWriter {
  [((id<ComThoughtworksXstreamConvertersErrorWriter>) nil_chk(errorWriter)) addWithNSString:@"line number" withNSString:NSString_valueOfInt_([((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser_)) getLineNumber])];
}

- (void)close {
  @try {
    [((JavaIoReader *) nil_chk(reader_)) close];
  }
  @catch (
#line 161
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoReader:withOrgXmlpullV1XmlPullParser:", "XppReader", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoReader:withOrgXmlpullV1XmlPullParser:withComThoughtworksXstreamIoNamingNameCoder:", "XppReader", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoReader:", "XppReader", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoReader:withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:", "XppReader", NULL, 0x1, NULL, NULL },
    { "createParser", NULL, "Lorg.xmlpull.v1.XmlPullParser;", 0x4, NULL, NULL },
    { "pullNextEvent", NULL, "I", 0x4, NULL, NULL },
    { "pullElementName", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "pullText", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getAttributeWithNSString:", "getAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAttributeWithInt:", "getAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAttributeCount", NULL, "I", 0x1, NULL, NULL },
    { "getAttributeNameWithInt:", "getAttributeName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:", "appendErrors", "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parser_", NULL, 0x12, "Lorg.xmlpull.v1.XmlPullParser;", NULL, NULL,  },
    { "reader_", NULL, 0x12, "Ljava.io.Reader;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlXppReader = { 2, "XppReader", "com.thoughtworks.xstream.io.xml", NULL, 0x1, 14, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamIoXmlXppReader;
}

@end


#line 42
void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser) {
  (void) ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(self, reader, parser, new_ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_init());
}


#line 42
ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_(JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser) {
  ComThoughtworksXstreamIoXmlXppReader *self = [ComThoughtworksXstreamIoXmlXppReader alloc];
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_(self, reader, parser);
  return self;
}


#line 54
void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  (void) ComThoughtworksXstreamIoXmlAbstractPullReader_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  self->parser_ = parser;
  self->reader_ = reader;
  @try {
    [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) setInputWithJavaIoReader:self->reader_];
  }
  @catch (
#line 60
  OrgXmlpullV1XmlPullParserException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
  [self moveDown];
}


#line 54
ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  ComThoughtworksXstreamIoXmlXppReader *self = [ComThoughtworksXstreamIoXmlXppReader alloc];
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(self, reader, parser, nameCoder);
  return self;
}


#line 69
void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader) {
  (void) ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, reader, new_ComThoughtworksXstreamIoXmlXmlFriendlyReplacer_init());
}


#line 69
ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_(JavaIoReader *reader) {
  ComThoughtworksXstreamIoXmlXppReader *self = [ComThoughtworksXstreamIoXmlXppReader alloc];
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_(self, reader);
  return self;
}


#line 77
void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  (void) ComThoughtworksXstreamIoXmlAbstractPullReader_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, replacer);
  @try {
    self->parser_ = [self createParser];
    self->reader_ = reader;
    [((id<OrgXmlpullV1XmlPullParser>) nil_chk(self->parser_)) setInputWithJavaIoReader:self->reader_];
    [self moveDown];
  }
  @catch (
#line 84
  OrgXmlpullV1XmlPullParserException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 77
ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoReader *reader, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  ComThoughtworksXstreamIoXmlXppReader *self = [ComThoughtworksXstreamIoXmlXppReader alloc];
  ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, reader, replacer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoXmlXppReader)
