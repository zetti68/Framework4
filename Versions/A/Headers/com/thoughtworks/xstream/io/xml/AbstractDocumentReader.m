//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/xml/AbstractDocumentReader.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/io/xml/AbstractDocumentReader.java"

#include "com/thoughtworks/xstream/converters/ErrorWriter.h"
#include "com/thoughtworks/xstream/core/util/FastStack.h"
#include "com/thoughtworks/xstream/io/AttributeNameIterator.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/AbstractDocumentReader.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "java/util/Iterator.h"

#pragma clang diagnostic ignored "-Wprotocol"


#line 21
@implementation ComThoughtworksXstreamIoXmlAbstractDocumentReader


#line 26
- (instancetype)initWithId:(id)rootElement {
  return
#line 27
  [self initComThoughtworksXstreamIoXmlAbstractDocumentReaderWithId:rootElement withComThoughtworksXstreamIoNamingNameCoder:[[ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder alloc] init]];
}


#line 33
- (instancetype)initComThoughtworksXstreamIoXmlAbstractDocumentReaderWithId:(id)rootElement
                                withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  if (self =
#line 34
  [super initWithComThoughtworksXstreamIoNamingNameCoder:nameCoder]) {
    pointers_ =
#line 23
    [[ComThoughtworksXstreamCoreUtilFastStack alloc] initWithInt:16];
    
#line 35
    self->current_ = rootElement;
    
#line 36
    (void) [pointers_ pushWithId:[[ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer alloc] init]];
    
#line 37
    [self reassignCurrentElementWithId:current_];
  }
  return self;
}

- (instancetype)initWithId:(id)rootElement
withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  return [self initComThoughtworksXstreamIoXmlAbstractDocumentReaderWithId:
#line 33
rootElement withComThoughtworksXstreamIoNamingNameCoder:nameCoder];
}


#line 44
- (instancetype)initWithId:(id)rootElement
withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  return
#line 45
  [self initComThoughtworksXstreamIoXmlAbstractDocumentReaderWithId:rootElement withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>) check_protocol_cast(replacer, @protocol(ComThoughtworksXstreamIoNamingNameCoder))];
}


#line 48
- (void)reassignCurrentElementWithId:(id)current {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 49
- (id)getParent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 50
- (id)getChildWithInt:(jint)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 51
- (jint)getChildCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasMoreChildren {
  
#line 58
  ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *pointer = (ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) check_class_cast([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(pointers_)) peek], [ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer class]);
  
#line 60
  if (((ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) nil_chk(pointer))->v_ < [self getChildCount]) {
    return YES;
  }
  else {
    
#line 63
    return NO;
  }
}


#line 67
- (void)moveUp {
  
#line 68
  current_ = [self getParent];
  [((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(pointers_)) popSilently];
  [self reassignCurrentElementWithId:current_];
}


#line 73
- (void)moveDown {
  
#line 74
  ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *pointer = (ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) check_class_cast([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(pointers_)) peek], [ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer class]);
  (void) [pointers_ pushWithId:[[ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer alloc] init]];
  
#line 77
  current_ = [self getChildWithInt:((ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) nil_chk(pointer))->v_];
  
#line 79
  pointer->v_++;
  [self reassignCurrentElementWithId:current_];
}


#line 83
- (id<JavaUtilIterator>)getAttributeNames {
  
#line 84
  return [[ComThoughtworksXstreamIoAttributeNameIterator alloc] initWithComThoughtworksXstreamIoHierarchicalStreamReader:self];
}


#line 87
- (void)appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:(id<ComThoughtworksXstreamConvertersErrorWriter>)errorWriter {
}

- (id)getCurrent {
  
#line 91
  return self->current_;
}


#line 94
- (void)close {
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoXmlAbstractDocumentReader *)other {
  [super copyAllFieldsTo:other];
  other->current_ = current_;
  other->pointers_ = pointers_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:", "AbstractDocumentReader", NULL, 0x4, NULL },
    { "initWithId:withComThoughtworksXstreamIoNamingNameCoder:", "AbstractDocumentReader", NULL, 0x4, NULL },
    { "initWithId:withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:", "AbstractDocumentReader", NULL, 0x4, NULL },
    { "reassignCurrentElementWithId:", "reassignCurrentElement", "V", 0x404, NULL },
    { "getParent", NULL, "Ljava.lang.Object;", 0x404, NULL },
    { "getChildWithInt:", "getChild", "Ljava.lang.Object;", 0x404, NULL },
    { "getChildCount", NULL, "I", 0x404, NULL },
    { "hasMoreChildren", NULL, "Z", 0x1, NULL },
    { "moveUp", NULL, "V", 0x1, NULL },
    { "moveDown", NULL, "V", 0x1, NULL },
    { "getAttributeNames", NULL, "Ljava.util.Iterator;", 0x1, NULL },
    { "appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:", "appendErrors", "V", 0x1, NULL },
    { "getCurrent", NULL, "Ljava.lang.Object;", 0x1, NULL },
    { "close", NULL, "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pointers_", NULL, 0x2, "Lcom.thoughtworks.xstream.core.util.FastStack;", NULL,  },
    { "current_", NULL, 0x2, "Ljava.lang.Object;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlAbstractDocumentReader = { "AbstractDocumentReader", "com.thoughtworks.xstream.io.xml", NULL, 0x401, 14, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamIoXmlAbstractDocumentReader;
}

@end


#line 53
@implementation ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer

- (instancetype)init {
  return [super init];
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *)other {
  [super copyAllFieldsTo:other];
  other->v_ = v_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "v_", NULL, 0x1, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer = { "Pointer", "com.thoughtworks.xstream.io.xml", "AbstractDocumentReader", 0xa, 1, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer;
}

@end
