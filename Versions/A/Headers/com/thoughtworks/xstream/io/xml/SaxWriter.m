//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/xml/SaxWriter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/io/xml/SaxWriter.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/XStream.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/AbstractXmlWriter.h"
#include "com/thoughtworks/xstream/io/xml/SaxWriter.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/xml/sax/ContentHandler.h"
#include "org/xml/sax/DTDHandler.h"
#include "org/xml/sax/EntityResolver.h"
#include "org/xml/sax/ErrorHandler.h"
#include "org/xml/sax/InputSource.h"
#include "org/xml/sax/SAXException.h"
#include "org/xml/sax/SAXNotRecognizedException.h"
#include "org/xml/sax/SAXNotSupportedException.h"
#include "org/xml/sax/helpers/AttributesImpl.h"

@interface ComThoughtworksXstreamIoXmlSaxWriter () {
 @public
  id<OrgXmlSaxEntityResolver> entityResolver_;
  id<OrgXmlSaxDTDHandler> dtdHandler_;
  id<OrgXmlSaxContentHandler> contentHandler_;
  id<OrgXmlSaxErrorHandler> errorHandler_;
  id<JavaUtilMap> features_;
  id<JavaUtilMap> properties_;
  jboolean includeEnclosingDocument_;
  jint depth_;
  id<JavaUtilList> elementStack_;
  IOSCharArray *buffer_;
  jboolean startTagInProgress_;
  OrgXmlSaxHelpersAttributesImpl *attributeList_;
}

- (void)parse;

- (void)startDocumentWithBoolean:(jboolean)multiObjectMode;

- (void)endDocumentWithBoolean:(jboolean)multiObjectMode;

- (void)flushStartTag;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, entityResolver_, id<OrgXmlSaxEntityResolver>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, dtdHandler_, id<OrgXmlSaxDTDHandler>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, contentHandler_, id<OrgXmlSaxContentHandler>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, errorHandler_, id<OrgXmlSaxErrorHandler>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, features_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, properties_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, elementStack_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, buffer_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlSaxWriter, attributeList_, OrgXmlSaxHelpersAttributesImpl *)

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlSaxWriter_parse(ComThoughtworksXstreamIoXmlSaxWriter *self);

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlSaxWriter_startDocumentWithBoolean_(ComThoughtworksXstreamIoXmlSaxWriter *self, jboolean multiObjectMode);

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlSaxWriter_endDocumentWithBoolean_(ComThoughtworksXstreamIoXmlSaxWriter *self, jboolean multiObjectMode);

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlSaxWriter_flushStartTag(ComThoughtworksXstreamIoXmlSaxWriter *self);

NSString *ComThoughtworksXstreamIoXmlSaxWriter_CONFIGURED_XSTREAM_PROPERTY_ = 
#line 70
@"http://com.thoughtworks.xstream/sax/property/configured-xstream";
NSString *ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_ = 
#line 81
@"http://com.thoughtworks.xstream/sax/property/source-object-list";


#line 62
@implementation ComThoughtworksXstreamIoXmlSaxWriter


#line 127
- (instancetype)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}


#line 135
- (instancetype)initWithBoolean:(jboolean)includeEnclosingDocument
withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoNamingNameCoder_(self, includeEnclosingDocument, nameCoder);
  return self;
}


#line 144
- (instancetype)initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, replacer);
  return self;
}


#line 152
- (instancetype)initWithBoolean:(jboolean)includeEnclosingDocument
withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, includeEnclosingDocument, replacer);
  return self;
}


#line 157
- (instancetype)initWithBoolean:(jboolean)includeEnclosingDocument {
  ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_(self, includeEnclosingDocument);
  return self;
}


#line 161
- (instancetype)init {
  ComThoughtworksXstreamIoXmlSaxWriter_init(self);
  return self;
}


#line 193
- (void)setFeatureWithNSString:(NSString *)name
                   withBoolean:(jboolean)value {
  
#line 195
  if (([((NSString *) nil_chk(name)) isEqual:@"http://xml.org/sax/features/namespaces"]) ||
#line 196
  ([name isEqual:@"http://xml.org/sax/features/namespace-prefixes"])) {
    (void) [((id<JavaUtilMap>) nil_chk(self->features_)) putWithId:name withId:value ? JavaLangBoolean_get_TRUE__() : JavaLangBoolean_get_FALSE__()];
  }
  else {
    
#line 199
    @throw new_OrgXmlSaxSAXNotRecognizedException_initWithNSString_(name);
  }
}


#line 230
- (jboolean)getFeatureWithNSString:(NSString *)name {
  
#line 232
  if (([((NSString *) nil_chk(name)) isEqual:@"http://xml.org/sax/features/namespaces"]) ||
#line 233
  ([name isEqual:@"http://xml.org/sax/features/namespace-prefixes"])) {
    JavaLangBoolean *value = (JavaLangBoolean *) check_class_cast(([((id<JavaUtilMap>) nil_chk(self->features_)) getWithId:name]), [JavaLangBoolean class]);
    
#line 236
    if (value == nil) {
      value = JavaLangBoolean_get_FALSE__();
    }
    return [((JavaLangBoolean *) nil_chk(value)) booleanValue];
  }
  else {
    
#line 241
    @throw new_OrgXmlSaxSAXNotRecognizedException_initWithNSString_(name);
  }
}


#line 276
- (void)setPropertyWithNSString:(NSString *)name
                         withId:(id)value {
  
#line 279
  if ([((NSString *) nil_chk(name)) isEqual:ComThoughtworksXstreamIoXmlSaxWriter_CONFIGURED_XSTREAM_PROPERTY_]) {
    if (!([value isKindOfClass:[ComThoughtworksXstreamXStream class]])) {
      @throw new_OrgXmlSaxSAXNotSupportedException_initWithNSString_(JreStrcat("$$$", @"Value for property \"",
#line 282
      ComThoughtworksXstreamIoXmlSaxWriter_CONFIGURED_XSTREAM_PROPERTY_, @"\" must be a non-null XStream object"));
    }
  }
  else if ([name isEqual:ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_]) {
    if ([JavaUtilList_class_() isInstance:value]) {
      id<JavaUtilList> list = (id<JavaUtilList>) check_protocol_cast(value, @protocol(JavaUtilList));
      
#line 289
      if ([((id<JavaUtilList>) nil_chk(list)) isEmpty]) {
        @throw new_OrgXmlSaxSAXNotSupportedException_initWithNSString_(JreStrcat("$$$", @"Value for property \"",
#line 291
        ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_, @"\" shall not be an empty list"));
      }
      else {
        
#line 296
        value = JavaUtilCollections_unmodifiableListWithJavaUtilList_(new_JavaUtilArrayList_initWithJavaUtilCollection_(list));
      }
    }
    else {
      
#line 299
      @throw new_OrgXmlSaxSAXNotSupportedException_initWithNSString_(JreStrcat("$$$", @"Value for property \"",
#line 300
      ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_, @"\" must be a non-null List object"));
    }
  }
  else {
    @throw new_OrgXmlSaxSAXNotRecognizedException_initWithNSString_(name);
  }
  (void) [((id<JavaUtilMap>) nil_chk(self->properties_)) putWithId:name withId:value];
}


#line 332
- (id)getPropertyWithNSString:(NSString *)name {
  
#line 334
  if (([((NSString *) nil_chk(name)) isEqual:ComThoughtworksXstreamIoXmlSaxWriter_CONFIGURED_XSTREAM_PROPERTY_]) ||
#line 335
  ([name isEqual:ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_])) {
    return [((id<JavaUtilMap>) nil_chk(self->properties_)) getWithId:name];
  }
  else {
    
#line 338
    @throw new_OrgXmlSaxSAXNotRecognizedException_initWithNSString_(name);
  }
}


#line 361
- (void)setEntityResolverWithOrgXmlSaxEntityResolver:(id<OrgXmlSaxEntityResolver>)resolver {
  if (resolver == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"resolver");
  }
  self->entityResolver_ = resolver;
  return;
}


#line 376
- (id<OrgXmlSaxEntityResolver>)getEntityResolver {
  return self->entityResolver_;
}


#line 395
- (void)setDTDHandlerWithOrgXmlSaxDTDHandler:(id<OrgXmlSaxDTDHandler>)handler {
  if (handler == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"handler");
  }
  self->dtdHandler_ = handler;
  return;
}


#line 410
- (id<OrgXmlSaxDTDHandler>)getDTDHandler {
  return self->dtdHandler_;
}


#line 430
- (void)setContentHandlerWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler {
  if (handler == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"handler");
  }
  self->contentHandler_ = handler;
  return;
}


#line 445
- (id<OrgXmlSaxContentHandler>)getContentHandler {
  return self->contentHandler_;
}


#line 467
- (void)setErrorHandlerWithOrgXmlSaxErrorHandler:(id<OrgXmlSaxErrorHandler>)handler {
  if (handler == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"handler");
  }
  self->errorHandler_ = handler;
  return;
}


#line 482
- (id<OrgXmlSaxErrorHandler>)getErrorHandler {
  return self->errorHandler_;
}


#line 516
- (void)parseWithNSString:(NSString *)systemId {
  ComThoughtworksXstreamIoXmlSaxWriter_parse(self);
}


#line 558
- (void)parseWithOrgXmlSaxInputSource:(OrgXmlSaxInputSource *)input {
  ComThoughtworksXstreamIoXmlSaxWriter_parse(self);
}


#line 569
- (void)parse {
  ComThoughtworksXstreamIoXmlSaxWriter_parse(self);
}


#line 607
- (void)startNodeWithNSString:(NSString *)name {
  @try {
    if (self->depth_ != 0) {
      ComThoughtworksXstreamIoXmlSaxWriter_flushStartTag(self);
    }
    else
#line 611
    if (includeEnclosingDocument_) {
      ComThoughtworksXstreamIoXmlSaxWriter_startDocumentWithBoolean_(self, NO);
    }
    [((id<JavaUtilList>) nil_chk(self->elementStack_)) addWithInt:0 withId:[self escapeXmlNameWithNSString:name]];
    
#line 616
    self->startTagInProgress_ = YES;
    self->depth_++;
  }
  @catch (
#line 618
  OrgXmlSaxSAXException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 623
- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  if (self->startTagInProgress_) {
    NSString *escapedName = [self escapeXmlNameWithNSString:name];
    [((OrgXmlSaxHelpersAttributesImpl *) nil_chk(self->attributeList_)) addAttributeWithNSString:@"" withNSString:escapedName withNSString:escapedName withNSString:@"CDATA" withNSString:value];
  }
  else {
    
#line 628
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(new_JavaLangIllegalStateException_initWithNSString_(@"No startElement being processed"));
  }
}


#line 632
- (void)setValueWithNSString:(NSString *)text {
  @try {
    ComThoughtworksXstreamIoXmlSaxWriter_flushStartTag(self);
    
#line 636
    jint lg = ((jint) [((NSString *) nil_chk(text)) length]);
    if (lg > ((IOSCharArray *) nil_chk(buffer_))->size_) {
      buffer_ = [IOSCharArray newArrayWithLength:lg];
    }
    [text getChars:0 sourceEnd:lg destination:buffer_ destinationBegin:0];
    
#line 642
    [((id<OrgXmlSaxContentHandler>) nil_chk(self->contentHandler_)) charactersWithCharArray:buffer_ withInt:0 withInt:lg];
  }
  @catch (
#line 643
  OrgXmlSaxSAXException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 648
- (void)endNode {
  @try {
    ComThoughtworksXstreamIoXmlSaxWriter_flushStartTag(self);
    
#line 652
    NSString *tagName = (NSString *) check_class_cast(([((id<JavaUtilList>) nil_chk(self->elementStack_)) removeWithInt:0]), [NSString class]);
    
#line 654
    [((id<OrgXmlSaxContentHandler>) nil_chk(self->contentHandler_)) endElementWithNSString:@"" withNSString:tagName withNSString:tagName];
    
#line 656
    self->depth_--;
    if (self->depth_ == 0 && includeEnclosingDocument_) {
      ComThoughtworksXstreamIoXmlSaxWriter_endDocumentWithBoolean_(self, NO);
    }
  }
  @catch (
#line 660
  OrgXmlSaxSAXException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 674
- (void)startDocumentWithBoolean:(jboolean)multiObjectMode {
  ComThoughtworksXstreamIoXmlSaxWriter_startDocumentWithBoolean_(self, multiObjectMode);
}


#line 696
- (void)endDocumentWithBoolean:(jboolean)multiObjectMode {
  ComThoughtworksXstreamIoXmlSaxWriter_endDocumentWithBoolean_(self, multiObjectMode);
}


#line 709
- (void)flushStartTag {
  ComThoughtworksXstreamIoXmlSaxWriter_flushStartTag(self);
}


#line 720
- (void)flush {
}


#line 724
- (void)close {
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamIoNamingNameCoder:", "SaxWriter", NULL, 0x1, NULL, NULL },
    { "initWithBoolean:withComThoughtworksXstreamIoNamingNameCoder:", "SaxWriter", NULL, 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:", "SaxWriter", NULL, 0x1, NULL, NULL },
    { "initWithBoolean:withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:", "SaxWriter", NULL, 0x1, NULL, NULL },
    { "initWithBoolean:", "SaxWriter", NULL, 0x1, NULL, NULL },
    { "init", "SaxWriter", NULL, 0x1, NULL, NULL },
    { "setFeatureWithNSString:withBoolean:", "setFeature", "V", 0x1, "Lorg.xml.sax.SAXNotRecognizedException;", NULL },
    { "getFeatureWithNSString:", "getFeature", "Z", 0x1, "Lorg.xml.sax.SAXNotRecognizedException;", NULL },
    { "setPropertyWithNSString:withId:", "setProperty", "V", 0x1, "Lorg.xml.sax.SAXNotRecognizedException;Lorg.xml.sax.SAXNotSupportedException;", NULL },
    { "getPropertyWithNSString:", "getProperty", "Ljava.lang.Object;", 0x1, "Lorg.xml.sax.SAXNotRecognizedException;", NULL },
    { "setEntityResolverWithOrgXmlSaxEntityResolver:", "setEntityResolver", "V", 0x1, NULL, NULL },
    { "getEntityResolver", NULL, "Lorg.xml.sax.EntityResolver;", 0x1, NULL, NULL },
    { "setDTDHandlerWithOrgXmlSaxDTDHandler:", "setDTDHandler", "V", 0x1, NULL, NULL },
    { "getDTDHandler", NULL, "Lorg.xml.sax.DTDHandler;", 0x1, NULL, NULL },
    { "setContentHandlerWithOrgXmlSaxContentHandler:", "setContentHandler", "V", 0x1, NULL, NULL },
    { "getContentHandler", NULL, "Lorg.xml.sax.ContentHandler;", 0x1, NULL, NULL },
    { "setErrorHandlerWithOrgXmlSaxErrorHandler:", "setErrorHandler", "V", 0x1, NULL, NULL },
    { "getErrorHandler", NULL, "Lorg.xml.sax.ErrorHandler;", 0x1, NULL, NULL },
    { "parseWithNSString:", "parse", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "parseWithOrgXmlSaxInputSource:", "parse", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "parse", NULL, "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "startNodeWithNSString:", "startNode", "V", 0x1, NULL, NULL },
    { "addAttributeWithNSString:withNSString:", "addAttribute", "V", 0x1, NULL, NULL },
    { "setValueWithNSString:", "setValue", "V", 0x1, NULL, NULL },
    { "endNode", NULL, "V", 0x1, NULL, NULL },
    { "startDocumentWithBoolean:", "startDocument", "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "endDocumentWithBoolean:", "endDocument", "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "flushStartTag", NULL, "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "flush", NULL, "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CONFIGURED_XSTREAM_PROPERTY_", NULL, 0x19, "Ljava.lang.String;", &ComThoughtworksXstreamIoXmlSaxWriter_CONFIGURED_XSTREAM_PROPERTY_, NULL,  },
    { "SOURCE_OBJECT_LIST_PROPERTY_", NULL, 0x19, "Ljava.lang.String;", &ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_, NULL,  },
    { "entityResolver_", NULL, 0x2, "Lorg.xml.sax.EntityResolver;", NULL, NULL,  },
    { "dtdHandler_", NULL, 0x2, "Lorg.xml.sax.DTDHandler;", NULL, NULL,  },
    { "contentHandler_", NULL, 0x2, "Lorg.xml.sax.ContentHandler;", NULL, NULL,  },
    { "errorHandler_", NULL, 0x2, "Lorg.xml.sax.ErrorHandler;", NULL, NULL,  },
    { "features_", NULL, 0x2, "Ljava.util.Map;", NULL, NULL,  },
    { "properties_", NULL, 0x12, "Ljava.util.Map;", NULL, NULL,  },
    { "includeEnclosingDocument_", NULL, 0x12, "Z", NULL, NULL,  },
    { "depth_", NULL, 0x2, "I", NULL, NULL,  },
    { "elementStack_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
    { "buffer_", NULL, 0x2, "[C", NULL, NULL,  },
    { "startTagInProgress_", NULL, 0x2, "Z", NULL, NULL,  },
    { "attributeList_", NULL, 0x12, "Lorg.xml.sax.helpers.AttributesImpl;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlSaxWriter = { 2, "SaxWriter", "com.thoughtworks.xstream.io.xml", NULL, 0x11, 30, methods, 14, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamIoXmlSaxWriter;
}

@end


#line 127
void ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlSaxWriter *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  (void) ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoNamingNameCoder_(self,
#line 129
  YES, nameCoder);
}


#line 127
ComThoughtworksXstreamIoXmlSaxWriter *new_ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoNamingNameCoder_(id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  ComThoughtworksXstreamIoXmlSaxWriter *self = [ComThoughtworksXstreamIoXmlSaxWriter alloc];
  ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}


#line 135
void ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlSaxWriter *self, jboolean includeEnclosingDocument, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  (void) ComThoughtworksXstreamIoXmlAbstractXmlWriter_initWithComThoughtworksXstreamIoNamingNameCoder_(self,
#line 137
  nameCoder);
  self->entityResolver_ =
#line 90
  nil;
  self->dtdHandler_ =
#line 95
  nil;
  self->contentHandler_ =
#line 100
  nil;
  self->errorHandler_ =
#line 105
  nil;
  self->features_ = new_JavaUtilHashMap_init();
  self->properties_ = new_JavaUtilHashMap_init();
  self->depth_ =
#line 601
  0;
  self->elementStack_ = new_JavaUtilLinkedList_init();
  self->buffer_ = [IOSCharArray newArrayWithLength:128];
  self->startTagInProgress_ = NO;
  self->attributeList_ = new_OrgXmlSaxHelpersAttributesImpl_init();
  
#line 138
  self->includeEnclosingDocument_ = includeEnclosingDocument;
}


#line 135
ComThoughtworksXstreamIoXmlSaxWriter *new_ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoNamingNameCoder_(jboolean includeEnclosingDocument, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  ComThoughtworksXstreamIoXmlSaxWriter *self = [ComThoughtworksXstreamIoXmlSaxWriter alloc];
  ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoNamingNameCoder_(self, includeEnclosingDocument, nameCoder);
  return self;
}


#line 144
void ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlSaxWriter *self, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  (void) ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self,
#line 146
  YES, replacer);
}


#line 144
ComThoughtworksXstreamIoXmlSaxWriter *new_ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  ComThoughtworksXstreamIoXmlSaxWriter *self = [ComThoughtworksXstreamIoXmlSaxWriter alloc];
  ComThoughtworksXstreamIoXmlSaxWriter_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, replacer);
  return self;
}


#line 152
void ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlSaxWriter *self, jboolean includeEnclosingDocument, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  (void) ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoNamingNameCoder_(self,
#line 154
  includeEnclosingDocument, replacer);
}


#line 152
ComThoughtworksXstreamIoXmlSaxWriter *new_ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(jboolean includeEnclosingDocument, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  ComThoughtworksXstreamIoXmlSaxWriter *self = [ComThoughtworksXstreamIoXmlSaxWriter alloc];
  ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, includeEnclosingDocument, replacer);
  return self;
}


#line 157
void ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_(ComThoughtworksXstreamIoXmlSaxWriter *self, jboolean includeEnclosingDocument) {
  (void) ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_withComThoughtworksXstreamIoNamingNameCoder_(self, includeEnclosingDocument, new_ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_init());
}


#line 157
ComThoughtworksXstreamIoXmlSaxWriter *new_ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_(jboolean includeEnclosingDocument) {
  ComThoughtworksXstreamIoXmlSaxWriter *self = [ComThoughtworksXstreamIoXmlSaxWriter alloc];
  ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_(self, includeEnclosingDocument);
  return self;
}


#line 161
void ComThoughtworksXstreamIoXmlSaxWriter_init(ComThoughtworksXstreamIoXmlSaxWriter *self) {
  (void) ComThoughtworksXstreamIoXmlSaxWriter_initWithBoolean_(self, YES);
}


#line 161
ComThoughtworksXstreamIoXmlSaxWriter *new_ComThoughtworksXstreamIoXmlSaxWriter_init() {
  ComThoughtworksXstreamIoXmlSaxWriter *self = [ComThoughtworksXstreamIoXmlSaxWriter alloc];
  ComThoughtworksXstreamIoXmlSaxWriter_init(self);
  return self;
}


#line 569
void ComThoughtworksXstreamIoXmlSaxWriter_parse(ComThoughtworksXstreamIoXmlSaxWriter *self) {
  ComThoughtworksXstreamXStream *xstream = (ComThoughtworksXstreamXStream *) check_class_cast(([((id<JavaUtilMap>) nil_chk(self->properties_)) getWithId:ComThoughtworksXstreamIoXmlSaxWriter_CONFIGURED_XSTREAM_PROPERTY_]), [ComThoughtworksXstreamXStream class]);
  if (xstream == nil) {
    xstream = new_ComThoughtworksXstreamXStream_init();
  }
  
#line 575
  id<JavaUtilList> source = (id<JavaUtilList>) check_protocol_cast(([self->properties_ getWithId:ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_]), @protocol(JavaUtilList));
  if ((source == nil) || ([source isEmpty])) {
    @throw new_OrgXmlSaxSAXException_initWithNSString_(JreStrcat("$$$", @"Missing or empty source object list. Setting property \"", ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY_, @"\" is mandatory"));
  }
  
#line 581
  @try {
    ComThoughtworksXstreamIoXmlSaxWriter_startDocumentWithBoolean_(self, YES);
    for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk(source)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
      [((ComThoughtworksXstreamXStream *) nil_chk(xstream)) marshalWithId:[i next] withComThoughtworksXstreamIoHierarchicalStreamWriter:self];
    }
    ComThoughtworksXstreamIoXmlSaxWriter_endDocumentWithBoolean_(self, YES);
  }
  @catch (
#line 587
  ComThoughtworksXstreamIoStreamException *e) {
    if ([[((ComThoughtworksXstreamIoStreamException *) nil_chk(e)) getCause] isKindOfClass:[OrgXmlSaxSAXException class]]) {
      @throw (OrgXmlSaxSAXException *) check_class_cast(([e getCause]), [OrgXmlSaxSAXException class]);
    }
    else {
      
#line 591
      @throw new_OrgXmlSaxSAXException_initWithJavaLangException_(e);
    }
  }
}


#line 674
void ComThoughtworksXstreamIoXmlSaxWriter_startDocumentWithBoolean_(ComThoughtworksXstreamIoXmlSaxWriter *self, jboolean multiObjectMode) {
  if (self->depth_ == 0) {
    
#line 677
    [((id<OrgXmlSaxContentHandler>) nil_chk(self->contentHandler_)) startDocument];
    
#line 679
    if (multiObjectMode) {
      
#line 682
      self->depth_++;
    }
  }
}


#line 696
void ComThoughtworksXstreamIoXmlSaxWriter_endDocumentWithBoolean_(ComThoughtworksXstreamIoXmlSaxWriter *self, jboolean multiObjectMode) {
  if ((self->depth_ == 0) || ((self->depth_ == 1) && (multiObjectMode))) {
    [((id<OrgXmlSaxContentHandler>) nil_chk(self->contentHandler_)) endDocument];
    self->depth_ = 0;
  }
}


#line 709
void ComThoughtworksXstreamIoXmlSaxWriter_flushStartTag(ComThoughtworksXstreamIoXmlSaxWriter *self) {
  if (self->startTagInProgress_) {
    NSString *tagName = (NSString *) check_class_cast(([((id<JavaUtilList>) nil_chk(self->elementStack_)) getWithInt:0]), [NSString class]);
    
#line 713
    [((id<OrgXmlSaxContentHandler>) nil_chk(self->contentHandler_)) startElementWithNSString:@"" withNSString:tagName withNSString:
#line 714
    tagName withOrgXmlSaxAttributes:self->attributeList_];
    [((OrgXmlSaxHelpersAttributesImpl *) nil_chk(self->attributeList_)) clear];
    self->startTagInProgress_ = NO;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoXmlSaxWriter)
