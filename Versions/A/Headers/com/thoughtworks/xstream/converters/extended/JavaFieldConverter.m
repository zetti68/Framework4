//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/JavaFieldConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/JavaFieldConverter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/extended/JavaClassConverter.h"
#include "com/thoughtworks/xstream/converters/extended/JavaFieldConverter.h"
#include "com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/reflect/Field.h"

@interface ComThoughtworksXstreamConvertersExtendedJavaFieldConverter () {
 @public
  id<ComThoughtworksXstreamConvertersSingleValueConverter> javaClassConverter_;
  id<ComThoughtworksXstreamMapperMapper> mapper_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedJavaFieldConverter, javaClassConverter_, id<ComThoughtworksXstreamConvertersSingleValueConverter>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedJavaFieldConverter, mapper_, id<ComThoughtworksXstreamMapperMapper>)


#line 31
@implementation ComThoughtworksXstreamConvertersExtendedJavaFieldConverter


#line 41
- (instancetype)initWithComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(self, classLoaderReference);
  return self;
}


#line 48
- (instancetype)initWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(self, classLoader);
  return self;
}


#line 58
- (instancetype)initWithComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>)javaClassConverter
                                      withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamConvertersSingleValueConverter_withComThoughtworksXstreamMapperMapper_(self, javaClassConverter, mapper);
  return self;
}


#line 63
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isEqual:JavaLangReflectField_class_()];
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  JavaLangReflectField *field = (JavaLangReflectField *) check_class_cast(source, [JavaLangReflectField class]);
  IOSClass *type = [((JavaLangReflectField *) nil_chk(field)) getDeclaringClass];
  
#line 71
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"name"];
  [writer setValueWithNSString:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) serializedMemberWithIOSClass:type withNSString:[field getName]]];
  [writer endNode];
  
#line 75
  [writer startNodeWithNSString:@"clazz"];
  [writer setValueWithNSString:[((id<ComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(javaClassConverter_)) toStringWithId:type]];
  [writer endNode];
}


#line 80
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  NSString *methodName = nil;
  NSString *declaringClassName = nil;
  
#line 84
  while ((methodName == nil || declaringClassName == nil) && [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveDown];
    
#line 87
    if ([((NSString *) nil_chk([reader getNodeName])) isEqual:@"name"]) {
      methodName = [reader getValue];
    }
    else
#line 89
    if ([((NSString *) nil_chk([reader getNodeName])) isEqual:@"clazz"]) {
      declaringClassName = [reader getValue];
    }
    [reader moveUp];
  }
  
#line 95
  IOSClass *declaringClass = (IOSClass *) check_class_cast([((id<ComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(javaClassConverter_)) fromStringWithNSString:declaringClassName], [IOSClass class]);
  @try {
    return [((IOSClass *) nil_chk(declaringClass)) getDeclaredField:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realMemberWithIOSClass:declaringClass withNSString:methodName]];
  }
  @catch (
#line 98
  JavaLangNoSuchFieldException *e) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithJavaLangThrowable_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamCoreClassLoaderReference:", "JavaFieldConverter", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangClassLoader:", "JavaFieldConverter", NULL, 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamConvertersSingleValueConverter:withComThoughtworksXstreamMapperMapper:", "JavaFieldConverter", NULL, 0x4, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "javaClassConverter_", NULL, 0x12, "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", NULL, NULL,  },
    { "mapper_", NULL, 0x12, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedJavaFieldConverter = { 2, "JavaFieldConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersExtendedJavaFieldConverter;
}

@end


#line 41
void ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  (void) ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamConvertersSingleValueConverter_withComThoughtworksXstreamMapperMapper_(self, new_ComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference), new_ComThoughtworksXstreamMapperDefaultMapper_initWithComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference));
}


#line 41
ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *new_ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self = [ComThoughtworksXstreamConvertersExtendedJavaFieldConverter alloc];
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(self, classLoaderReference);
  return self;
}


#line 48
void ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self, JavaLangClassLoader *classLoader) {
  (void) ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(self, new_ComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader));
}


#line 48
ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *new_ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(JavaLangClassLoader *classLoader) {
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self = [ComThoughtworksXstreamConvertersExtendedJavaFieldConverter alloc];
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(self, classLoader);
  return self;
}


#line 58
void ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamConvertersSingleValueConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self, id<ComThoughtworksXstreamConvertersSingleValueConverter> javaClassConverter, id<ComThoughtworksXstreamMapperMapper> mapper) {
  (void) NSObject_init(self);
  
#line 59
  self->javaClassConverter_ = javaClassConverter;
  self->mapper_ = mapper;
}


#line 58
ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *new_ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamConvertersSingleValueConverter_withComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamConvertersSingleValueConverter> javaClassConverter, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self = [ComThoughtworksXstreamConvertersExtendedJavaFieldConverter alloc];
  ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamConvertersSingleValueConverter_withComThoughtworksXstreamMapperMapper_(self, javaClassConverter, mapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedJavaFieldConverter)
