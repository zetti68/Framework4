//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/CharsetConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/CharsetConverter.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/converters/extended/CharsetConverter.h"
#include "java/nio/charset/Charset.h"


#line 23
@implementation ComThoughtworksXstreamConvertersExtendedCharsetConverter

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  
#line 26
  return [[IOSClass classWithClass:[JavaNioCharsetCharset class]] isAssignableFrom:type];
}


#line 29
- (NSString *)toStringWithId:(id)obj {
  
#line 30
  return obj == nil ? nil : [((JavaNioCharsetCharset *) check_class_cast(obj, [JavaNioCharsetCharset class])) name];
}


#line 34
- (id)fromStringWithNSString:(NSString *)str {
  return [JavaNioCharsetCharset forNameWithNSString:str];
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "toStringWithId:", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "fromStringWithNSString:", "fromString", "Ljava.lang.Object;", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedCharsetConverter = { "CharsetConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 4, methods, 0, NULL, 0, NULL};
  return &_ComThoughtworksXstreamConvertersExtendedCharsetConverter;
}

@end
