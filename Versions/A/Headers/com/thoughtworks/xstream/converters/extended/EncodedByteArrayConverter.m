//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/basic/ByteConverter.h"
#include "com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.h"
#include "com/thoughtworks/xstream/core/util/Base64Encoder.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "java/lang/Byte.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

BOOL ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_initialized = NO;


#line 33
@implementation ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter

ComThoughtworksXstreamCoreUtilBase64Encoder * ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64_;
ComThoughtworksXstreamConvertersBasicByteConverter * ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter_;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  
#line 39
  return [((IOSClass *) nil_chk(type)) isArray] && [((IOSClass *) nil_chk([type getComponentType])) isEqual:[IOSClass byteClass]];
}


#line 42
- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  
#line 43
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:[self toStringWithId:source]];
}


#line 46
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 47
  NSString *data = [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getValue];
  if (![reader hasMoreChildren]) {
    return [self fromStringWithNSString:data];
  }
  else {
    return [self unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context];
  }
}


#line 56
- (id)unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                 withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 57
  id<JavaUtilList> bytes = [[JavaUtilArrayList alloc] init];
  jboolean firstIteration = YES;
  while (firstIteration || [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveDown];
    [bytes addWithId:[((ComThoughtworksXstreamConvertersBasicByteConverter *) nil_chk(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter_)) fromStringWithNSString:[reader getValue]]];
    [reader moveUp];
    firstIteration = NO;
  }
  
#line 66
  IOSByteArray *result = [IOSByteArray arrayWithLength:[bytes size]];
  jint i = 0;
  for (id<JavaUtilIterator> iterator = [bytes iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ) {
    JavaLangByte *b = (JavaLangByte *) check_class_cast([iterator next], [JavaLangByte class]);
    *IOSByteArray_GetRef(result, i) = [((JavaLangByte *) nil_chk(b)) charValue];
    i++;
  }
  return result;
}


#line 76
- (NSString *)toStringWithId:(id)obj {
  
#line 77
  return [((ComThoughtworksXstreamCoreUtilBase64Encoder *) nil_chk(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64_)) encodeWithByteArray:(IOSByteArray *) check_class_cast(obj, [IOSByteArray class])];
}


#line 80
- (id)fromStringWithNSString:(NSString *)str {
  
#line 81
  return [((ComThoughtworksXstreamCoreUtilBase64Encoder *) nil_chk(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64_)) decodeWithNSString:str];
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter class]) {
    ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64_ =
#line 35
    [[ComThoughtworksXstreamCoreUtilBase64Encoder alloc] init];
    ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter_ =
#line 36
    [[ComThoughtworksXstreamConvertersBasicByteConverter alloc] init];
    ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
    { "unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshalIndividualByteElements", "Ljava.lang.Object;", 0x2, NULL },
    { "toStringWithId:", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "fromStringWithNSString:", "fromString", "Ljava.lang.Object;", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "base64_", NULL, 0x1a, "Lcom.thoughtworks.xstream.core.util.Base64Encoder;", &ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64_,  },
    { "byteConverter_", NULL, 0x1a, "Lcom.thoughtworks.xstream.converters.basic.ByteConverter;", &ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter_,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter = { "EncodedByteArrayConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 7, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter;
}

@end
