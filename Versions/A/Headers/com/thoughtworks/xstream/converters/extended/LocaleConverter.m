//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/LocaleConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/LocaleConverter.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/thoughtworks/xstream/converters/extended/LocaleConverter.h"
#include "java/util/Locale.h"


#line 24
@implementation ComThoughtworksXstreamConvertersExtendedLocaleConverter

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  
#line 27
  return [((IOSClass *) nil_chk(type)) isEqual:[IOSClass classWithClass:[JavaUtilLocale class]]];
}


#line 30
- (id)fromStringWithNSString:(NSString *)str {
  
#line 31
  IOSIntArray *underscorePositions = [self underscorePositionsWithNSString:str];
  NSString *language, *country, *variant;
  if (IOSIntArray_Get(nil_chk(underscorePositions), 0) == -1) {
    language = str;
    country = @"";
    variant = @"";
  }
  else
#line 37
  if (IOSIntArray_Get(underscorePositions, 1) == -1) {
    language = [((NSString *) nil_chk(str)) substring:0 endIndex:IOSIntArray_Get(underscorePositions, 0)];
    country = [str substring:IOSIntArray_Get(underscorePositions, 0) + 1];
    variant = @"";
  }
  else {
    
#line 42
    language = [((NSString *) nil_chk(str)) substring:0 endIndex:IOSIntArray_Get(underscorePositions, 0)];
    country = [str substring:IOSIntArray_Get(underscorePositions, 0) + 1 endIndex:IOSIntArray_Get(underscorePositions, 1)];
    variant = [str substring:IOSIntArray_Get(underscorePositions, 1) + 1];
  }
  return [[JavaUtilLocale alloc] initWithNSString:language withNSString:country withNSString:variant];
}


#line 49
- (IOSIntArray *)underscorePositionsWithNSString:(NSString *)inArg {
  
#line 50
  IOSIntArray *result = [IOSIntArray arrayWithLength:2];
  for (jint i = 0; i < result->size_; i++) {
    jint last = i == 0 ? 0 : IOSIntArray_Get(result, i - 1);
    *IOSIntArray_GetRef(result, i) = [((NSString *) nil_chk(inArg)) indexOf:'_' fromIndex:last + 1];
  }
  return result;
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "fromStringWithNSString:", "fromString", "Ljava.lang.Object;", 0x1, NULL },
    { "underscorePositionsWithNSString:", "underscorePositions", "[I", 0x2, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedLocaleConverter = { "LocaleConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 4, methods, 0, NULL, 0, NULL};
  return &_ComThoughtworksXstreamConvertersExtendedLocaleConverter;
}

@end
