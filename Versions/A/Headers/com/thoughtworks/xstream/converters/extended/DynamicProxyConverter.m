//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.h"
#include "com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/DynamicProxyMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationHandler.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Proxy.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

BOOL ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initialized = NO;


#line 38
@implementation ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter

JavaLangReflectField * ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_;
id<JavaLangReflectInvocationHandler> ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_;


#line 52
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return
#line 53
  [self initComThoughtworksXstreamConvertersExtendedDynamicProxyConverterWithComThoughtworksXstreamMapperMapper:mapper withJavaLangClassLoader:[[IOSClass classWithClass:[ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter class]] getClassLoader]];
}


#line 62
- (instancetype)initComThoughtworksXstreamConvertersExtendedDynamicProxyConverterWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                                     withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  if (self = [super init]) {
    
#line 63
    self->classLoaderReference_ = classLoaderReference;
    
#line 64
    self->mapper_ = mapper;
  }
  return self;
}

- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
        withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  return [self initComThoughtworksXstreamConvertersExtendedDynamicProxyConverterWithComThoughtworksXstreamMapperMapper:
#line 62
mapper withComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference];
}


#line 70
- (instancetype)initComThoughtworksXstreamConvertersExtendedDynamicProxyConverterWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                                                                withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  return
#line 71
  [self initComThoughtworksXstreamConvertersExtendedDynamicProxyConverterWithComThoughtworksXstreamMapperMapper:mapper withComThoughtworksXstreamCoreClassLoaderReference:[[ComThoughtworksXstreamCoreClassLoaderReference alloc] initWithJavaLangClassLoader:classLoader]];
}

- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                   withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  return [self initComThoughtworksXstreamConvertersExtendedDynamicProxyConverterWithComThoughtworksXstreamMapperMapper:
#line 70
mapper withJavaLangClassLoader:classLoader];
}


#line 74
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  
#line 75
  return [((IOSClass *) nil_chk(type)) isEqual:[IOSClass classWithClass:[ComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy class]]] || [JavaLangReflectProxy isProxyClassWithIOSClass:type];
}


#line 78
- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  
#line 79
  id<JavaLangReflectInvocationHandler> invocationHandler = [JavaLangReflectProxy getInvocationHandlerWithId:source];
  [self addInterfacesToXmlWithId:source withComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"handler"];
  NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
  if (attributeName != nil) {
    [writer addAttributeWithNSString:attributeName withNSString:[mapper_ serializedClassWithIOSClass:[((id<JavaLangReflectInvocationHandler>) nil_chk(invocationHandler)) getClass]]];
  }
  [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:invocationHandler];
  [writer endNode];
}


#line 90
- (void)addInterfacesToXmlWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  
#line 91
  IOSObjectArray *interfaces = [[nil_chk(source) getClass] getInterfaces];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(interfaces))->size_; i++) {
    IOSClass *currentInterface = IOSObjectArray_Get(interfaces, i);
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"interface"];
    [writer setValueWithNSString:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) serializedClassWithIOSClass:currentInterface]];
    [writer endNode];
  }
}


#line 100
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 101
  id<JavaUtilList> interfaces = [[JavaUtilArrayList alloc] init];
  id<JavaLangReflectInvocationHandler> handler = nil;
  IOSClass *handlerType = nil;
  while ([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    NSString *elementName = [reader getNodeName];
    if ([((NSString *) nil_chk(elementName)) isEqual:@"interface"]) {
      [interfaces addWithId:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realClassWithNSString:[reader getValue]]];
    }
    else
#line 109
    if ([elementName isEqual:@"handler"]) {
      NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
      if (attributeName != nil) {
        handlerType = [mapper_ realClassWithNSString:[reader getAttributeWithNSString:attributeName]];
        break;
      }
    }
    [reader moveUp];
  }
  if (handlerType == nil) {
    @throw [[ComThoughtworksXstreamConvertersConversionException alloc] initWithNSString:@"No InvocationHandler specified for dynamic proxy"];
  }
  IOSObjectArray *interfacesAsArray = [IOSObjectArray arrayWithLength:[interfaces size] type:[IOSClass classWithClass:[IOSClass class]]];
  (void) [interfaces toArrayWithNSObjectArray:interfacesAsArray];
  id proxy = nil;
  if (ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_ != nil) {
    proxy = [JavaLangReflectProxy newProxyInstanceWithJavaLangClassLoader:[((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference] withIOSClassArray:interfacesAsArray withJavaLangReflectInvocationHandler:ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_];
  }
  handler = (id<JavaLangReflectInvocationHandler>) check_protocol_cast([((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:proxy withIOSClass:handlerType], @protocol(JavaLangReflectInvocationHandler));
  [reader moveUp];
  if (ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_ != nil) {
    [ComThoughtworksXstreamCoreUtilFields writeWithJavaLangReflectField:ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_ withId:proxy withId:handler];
  }
  else {
    
#line 132
    proxy = [JavaLangReflectProxy newProxyInstanceWithJavaLangClassLoader:[((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference] withIOSClassArray:interfacesAsArray withJavaLangReflectInvocationHandler:handler];
  }
  return proxy;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *)other {
  [super copyAllFieldsTo:other];
  other->classLoaderReference_ = classLoaderReference_;
  other->mapper_ = mapper_;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter class]) {
    ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_ =
#line 42
    [ComThoughtworksXstreamCoreUtilFields locateWithIOSClass:[IOSClass classWithClass:[JavaLangReflectProxy class]] withIOSClass:[IOSClass classWithProtocol:@protocol(JavaLangReflectInvocationHandler)] withBoolean:NO];
    ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_ =
#line 43
    [[ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 alloc] init];
    ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "DynamicProxyConverter", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamCoreClassLoaderReference:", "DynamicProxyConverter", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamMapperMapper:withJavaLangClassLoader:", "DynamicProxyConverter", NULL, 0x1, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL },
    { "addInterfacesToXmlWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:", "addInterfacesToXml", "V", 0x2, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "classLoaderReference_", NULL, 0x2, "Lcom.thoughtworks.xstream.core.ClassLoaderReference;", NULL,  },
    { "mapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL,  },
    { "HANDLER_", NULL, 0x1a, "Ljava.lang.reflect.Field;", &ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_,  },
    { "DUMMY_", NULL, 0x1a, "Ljava.lang.reflect.InvocationHandler;", &ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter = { "DynamicProxyConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 7, methods, 4, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter;
}

@end

@implementation ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1


#line 44
- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args {
  
#line 45
  return nil;
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "invokeWithId:withJavaLangReflectMethod:withNSObjectArray:", "invoke", "Ljava.lang.Object;", 0x1, "Ljava.lang.Throwable;" },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 = { "$1", "com.thoughtworks.xstream.converters.extended", "DynamicProxyConverter", 0x8000, 2, methods, 0, NULL, 0, NULL};
  return &_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1;
}

@end
