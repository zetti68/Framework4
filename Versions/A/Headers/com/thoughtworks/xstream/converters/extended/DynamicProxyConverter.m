//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.h"
#include "com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/DynamicProxyMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationHandler.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Proxy.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter () {
 @public
  ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference_;
  id<ComThoughtworksXstreamMapperMapper> mapper_;
}

- (void)addInterfacesToXmlWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, classLoaderReference_, ComThoughtworksXstreamCoreClassLoaderReference *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, mapper_, id<ComThoughtworksXstreamMapperMapper>)

static JavaLangReflectField *ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, HANDLER_, JavaLangReflectField *)

static id<JavaLangReflectInvocationHandler> ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, DUMMY_, id<JavaLangReflectInvocationHandler>)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id source, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer);

@interface ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 : NSObject < JavaLangReflectInvocationHandler >

- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1_init(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 *self);

__attribute__((unused)) static ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 *new_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter)


#line 38
@implementation ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter


#line 52
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}


#line 62
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
        withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreClassLoaderReference_(self, mapper, classLoaderReference);
  return self;
}


#line 70
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                   withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(self, mapper, classLoader);
  return self;
}


#line 74
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isEqual:ComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_class_()] || JavaLangReflectProxy_isProxyClassWithIOSClass_(type);
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaLangReflectInvocationHandler> invocationHandler = JavaLangReflectProxy_getInvocationHandlerWithId_(source);
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withComThoughtworksXstreamIoHierarchicalStreamWriter_(self, source, writer);
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"handler"];
  NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
  if (attributeName != nil) {
    [writer addAttributeWithNSString:attributeName withNSString:[mapper_ serializedClassWithIOSClass:[((id<JavaLangReflectInvocationHandler>) nil_chk(invocationHandler)) getClass]]];
  }
  [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:invocationHandler];
  [writer endNode];
}


#line 90
- (void)addInterfacesToXmlWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withComThoughtworksXstreamIoHierarchicalStreamWriter_(self, source, writer);
}


#line 100
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id<JavaUtilList> interfaces = new_JavaUtilArrayList_init();
  id<JavaLangReflectInvocationHandler> handler = nil;
  IOSClass *handlerType = nil;
  while ([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    NSString *elementName = [reader getNodeName];
    if ([((NSString *) nil_chk(elementName)) isEqual:@"interface"]) {
      [interfaces addWithId:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realClassWithNSString:[reader getValue]]];
    }
    else
#line 109
    if ([elementName isEqual:@"handler"]) {
      NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
      if (attributeName != nil) {
        handlerType = [mapper_ realClassWithNSString:[reader getAttributeWithNSString:attributeName]];
        break;
      }
    }
    [reader moveUp];
  }
  if (handlerType == nil) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"No InvocationHandler specified for dynamic proxy");
  }
  IOSObjectArray *interfacesAsArray = [IOSObjectArray newArrayWithLength:[interfaces size] type:IOSClass_class_()];
  (void) [interfaces toArrayWithNSObjectArray:interfacesAsArray];
  id proxy = nil;
  if (ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_ != nil) {
    proxy = JavaLangReflectProxy_newProxyInstanceWithJavaLangClassLoader_withIOSClassArray_withJavaLangReflectInvocationHandler_([((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference], interfacesAsArray, ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_);
  }
  handler = (id<JavaLangReflectInvocationHandler>) check_protocol_cast([((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:proxy withIOSClass:handlerType], @protocol(JavaLangReflectInvocationHandler));
  [reader moveUp];
  if (ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_ != nil) {
    ComThoughtworksXstreamCoreUtilFields_writeWithJavaLangReflectField_withId_withId_(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_, proxy, handler);
  }
  else {
    
#line 132
    proxy = JavaLangReflectProxy_newProxyInstanceWithJavaLangClassLoader_withIOSClassArray_withJavaLangReflectInvocationHandler_([((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference], interfacesAsArray, handler);
  }
  return proxy;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter class]) {
    ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_ = ComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(
#line 42
    JavaLangReflectProxy_class_(), JavaLangReflectInvocationHandler_class_(), NO);
    ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_ = new_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1_init();
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "DynamicProxyConverter", NULL, 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamCoreClassLoaderReference:", "DynamicProxyConverter", NULL, 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamMapperMapper:withJavaLangClassLoader:", "DynamicProxyConverter", NULL, 0x1, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "addInterfacesToXmlWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:", "addInterfacesToXml", "V", 0x2, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "classLoaderReference_", NULL, 0x2, "Lcom.thoughtworks.xstream.core.ClassLoaderReference;", NULL, NULL,  },
    { "mapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL, NULL,  },
    { "HANDLER_", NULL, 0x1a, "Ljava.lang.reflect.Field;", &ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER_, NULL,  },
    { "DUMMY_", NULL, 0x1a, "Ljava.lang.reflect.InvocationHandler;", &ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY_, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter = { 2, "DynamicProxyConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter;
}

@end


#line 52
void ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper) {
  (void) ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(self, mapper, [ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_class_() getClassLoader]);
}


#line 52
ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *new_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self = [ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter alloc];
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}


#line 62
void ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreClassLoaderReference_(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  (void) NSObject_init(self);
  
#line 63
  self->classLoaderReference_ = classLoaderReference;
  self->mapper_ = mapper;
}


#line 62
ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *new_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreClassLoaderReference_(id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self = [ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter alloc];
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreClassLoaderReference_(self, mapper, classLoaderReference);
  return self;
}


#line 70
void ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader) {
  (void) ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreClassLoaderReference_(self, mapper, new_ComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader));
}


#line 70
ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *new_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(id<ComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader) {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self = [ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter alloc];
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(self, mapper, classLoader);
  return self;
}


#line 90
void ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id source, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer) {
  IOSObjectArray *interfaces = [[nil_chk(source) getClass] getInterfaces];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(interfaces))->size_; i++) {
    IOSClass *currentInterface = IOSObjectArray_Get(interfaces, i);
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"interface"];
    [writer setValueWithNSString:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) serializedClassWithIOSClass:currentInterface]];
    [writer endNode];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter)

@implementation ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1


#line 44
- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args {
  return nil;
}

- (instancetype)init {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "invokeWithId:withJavaLangReflectMethod:withNSObjectArray:", "invoke", "Ljava.lang.Object;", 0x1, "Ljava.lang.Throwable;", NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 = { 2, "", "com.thoughtworks.xstream.converters.extended", "DynamicProxyConverter", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1;
}

@end

void ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1_init(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 *new_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1_init() {
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 *self = [ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1 alloc];
  ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_$1)
