//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/JavaClassConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/JavaClassConverter.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/extended/JavaClassConverter.h"
#include "com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Throwable.h"


#line 29
@implementation ComThoughtworksXstreamConvertersExtendedJavaClassConverter


#line 38
- (instancetype)initComThoughtworksXstreamConvertersExtendedJavaClassConverterWithComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  return
#line 39
  [self initComThoughtworksXstreamConvertersExtendedJavaClassConverterWithComThoughtworksXstreamMapperMapper:[[ComThoughtworksXstreamMapperDefaultMapper alloc] initWithComThoughtworksXstreamCoreClassLoaderReference:classLoaderReference]];
}

- (instancetype)initWithComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  return [self initComThoughtworksXstreamConvertersExtendedJavaClassConverterWithComThoughtworksXstreamCoreClassLoaderReference:
#line 38
classLoaderReference];
}


#line 45
- (instancetype)initWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  return
#line 46
  [self initComThoughtworksXstreamConvertersExtendedJavaClassConverterWithComThoughtworksXstreamCoreClassLoaderReference:[[ComThoughtworksXstreamCoreClassLoaderReference alloc] initWithJavaLangClassLoader:classLoader]];
}


#line 55
- (instancetype)initComThoughtworksXstreamConvertersExtendedJavaClassConverterWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  if (self = [super init]) {
    
#line 56
    self->mapper_ = mapper;
  }
  return self;
}

- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return [self initComThoughtworksXstreamConvertersExtendedJavaClassConverterWithComThoughtworksXstreamMapperMapper:
#line 55
mapper];
}


#line 59
- (jboolean)canConvertWithIOSClass:(IOSClass *)clazz {
  
#line 60
  return [[IOSClass classWithClass:[IOSClass class]] isEqual:clazz];
}


#line 63
- (NSString *)toStringWithId:(id)obj {
  
#line 64
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) serializedClassWithIOSClass:((IOSClass *) check_class_cast(obj, [IOSClass class]))];
}


#line 67
- (id)fromStringWithNSString:(NSString *)str {
  
#line 68
  @try {
    return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realClassWithNSString:str];
  }
  @catch (
#line 70
  ComThoughtworksXstreamMapperCannotResolveClassException *e) {
    @throw [[ComThoughtworksXstreamConvertersConversionException alloc] initWithNSString:JreStrcat("$$", @"Cannot load java class ", str) withJavaLangThrowable:[((ComThoughtworksXstreamMapperCannotResolveClassException *) nil_chk(e)) getCause]];
  }
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamConvertersExtendedJavaClassConverter *)other {
  [super copyAllFieldsTo:other];
  other->mapper_ = mapper_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamCoreClassLoaderReference:", "JavaClassConverter", NULL, 0x1, NULL },
    { "initWithJavaLangClassLoader:", "JavaClassConverter", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamMapperMapper:", "JavaClassConverter", NULL, 0x4, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "toStringWithId:", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "fromStringWithNSString:", "fromString", "Ljava.lang.Object;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", NULL, 0x2, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedJavaClassConverter = { "JavaClassConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 6, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersExtendedJavaClassConverter;
}

@end
