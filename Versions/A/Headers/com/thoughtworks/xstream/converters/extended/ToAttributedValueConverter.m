//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/ToAttributedValueConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/ToAttributedValueConverter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/converters/ConverterMatcher.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/extended/ToAttributedValueConverter.h"
#include "com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.h"
#include "com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/util/FastField.h"
#include "com/thoughtworks/xstream/core/util/HierarchicalStreams.h"
#include "com/thoughtworks/xstream/core/util/Primitives.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter () {
 @public
  IOSClass *type_;
  id<ComThoughtworksXstreamMapperMapper> mapper_;
  id<ComThoughtworksXstreamMapperMapper> enumMapper_;
  id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider_;
  id<ComThoughtworksXstreamConvertersConverterLookup> lookup_;
  JavaLangReflectField *valueField_;
}

- (jboolean)fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField:(ComThoughtworksXstreamCoreUtilFastField *)field;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, type_, IOSClass *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, mapper_, id<ComThoughtworksXstreamMapperMapper>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, enumMapper_, id<ComThoughtworksXstreamMapperMapper>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, reflectionProvider_, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, lookup_, id<ComThoughtworksXstreamConvertersConverterLookup>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, valueField_, JavaLangReflectField *)

static NSString *ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_STRUCTURE_MARKER_ = 
#line 52
@"";
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, STRUCTURE_MARKER_, NSString *)

__attribute__((unused)) static jboolean ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, ComThoughtworksXstreamCoreUtilFastField *field);

@interface ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 : NSObject < ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor > {
 @public
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *this$0_;
  id<JavaUtilMap> val$defaultFieldDefinition_;
  IOSClass *val$sourceType_;
  IOSObjectArray *val$definingType_;
  IOSObjectArray *val$fieldType_;
  IOSObjectArray *val$realValue_;
  IOSObjectArray *val$tagValue_;
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
}

- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value;

- (instancetype)initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter:(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *)outer$
                                                                           withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                              withIOSClass:(IOSClass *)capture$1
                                                                         withIOSClassArray:(IOSObjectArray *)capture$2
                                                                         withIOSClassArray:(IOSObjectArray *)capture$3
                                                                         withNSObjectArray:(IOSObjectArray *)capture$4
                                                                         withNSStringArray:(IOSObjectArray *)capture$5
                                      withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$6;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, this$0_, ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, val$defaultFieldDefinition_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, val$sourceType_, IOSClass *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, val$definingType_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, val$fieldType_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, val$realValue_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, val$tagValue_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1, val$writer_, id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 *self, ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6);

__attribute__((unused)) static ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1)


#line 51
@implementation ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter


#line 69
- (instancetype)initWithIOSClass:(IOSClass *)type
withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)lookup
                    withNSString:(NSString *)valueFieldName {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(self, type, mapper, reflectionProvider, lookup, valueFieldName);
  return self;
}


#line 85
- (instancetype)initWithIOSClass:(IOSClass *)type
withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)lookup
                    withNSString:(NSString *)valueFieldName
                    withIOSClass:(IOSClass *)valueDefinedIn {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(self, type, mapper, reflectionProvider, lookup, valueFieldName, valueDefinedIn);
  return self;
}


#line 111
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return self->type_ == type;
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  
#line 117
  IOSClass *sourceType = [nil_chk(source) getClass];
  id<JavaUtilMap> defaultFieldDefinition = new_JavaUtilHashMap_init();
  IOSObjectArray *tagValue = [IOSObjectArray newArrayWithLength:1 type:NSString_class_()];
  IOSObjectArray *realValue = [IOSObjectArray newArrayWithLength:1 type:NSObject_class_()];
  IOSObjectArray *fieldType = [IOSObjectArray newArrayWithLength:1 type:IOSClass_class_()];
  IOSObjectArray *definingType = [IOSObjectArray newArrayWithLength:1 type:IOSClass_class_()];
  [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) visitSerializableFieldsWithId:source withComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor:new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(self, defaultFieldDefinition, sourceType, definingType, fieldType, realValue, tagValue, writer)];
  
#line 182
  if (IOSObjectArray_Get(tagValue, 0) != nil) {
    IOSClass *actualType = [nil_chk(IOSObjectArray_Get(realValue, 0)) getClass];
    IOSClass *defaultType = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) defaultImplementationOfWithIOSClass:IOSObjectArray_Get(fieldType, 0)];
    if (![actualType isEqual:defaultType]) {
      NSString *serializedClassName = [mapper_ serializedClassWithIOSClass:actualType];
      if (![((NSString *) nil_chk(serializedClassName)) isEqual:[mapper_ serializedClassWithIOSClass:defaultType]]) {
        NSString *attributeName = [mapper_ aliasForSystemAttributeWithNSString:@"class"];
        if (attributeName != nil) {
          [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) addAttributeWithNSString:attributeName withNSString:serializedClassName];
        }
      }
    }
    
#line 195
    if (IOSObjectArray_Get(tagValue, 0) == ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_STRUCTURE_MARKER_) {
      [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:IOSObjectArray_Get(realValue, 0)];
    }
    else {
      
#line 198
      [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:IOSObjectArray_Get(tagValue, 0)];
    }
  }
}


#line 203
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 205
  id result = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) newInstanceWithIOSClass:[((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType]];
  IOSClass *resultType = [nil_chk(result) getClass];
  
#line 208
  id<JavaUtilSet> seenFields = new_JavaUtilHashSet_init();
  id<JavaUtilIterator> it = [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeNames];
  
#line 211
  id<JavaUtilSet> systemAttributes = new_JavaUtilHashSet_init();
  [systemAttributes addWithId:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"]];
  
#line 215
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    NSString *attrName = (NSString *) check_class_cast([it next], [NSString class]);
    if ([systemAttributes containsWithId:attrName]) {
      continue;
    }
    
#line 221
    NSString *fieldName = [mapper_ realMemberWithIOSClass:resultType withNSString:attrName];
    JavaLangReflectField *field = [reflectionProvider_ getFieldOrNullWithIOSClass:resultType withNSString:fieldName];
    if (field != nil) {
      if (JavaLangReflectModifier_isTransientWithInt_([field getModifiers])) {
        continue;
      }
      
#line 228
      IOSClass *type = [field getType];
      IOSClass *declaringClass = [field getDeclaringClass];
      id<ComThoughtworksXstreamConvertersConverterMatcher> converter = ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_isEnumWithIOSClass_(type) ? ((id)
#line 231
      [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(enumMapper_)) getConverterFromItemTypeWithNSString:nil withIOSClass:type withIOSClass:nil]) : ((id)
#line 232
      [mapper_ getLocalConverterWithIOSClass:declaringClass withNSString:fieldName]);
      if (converter == nil) {
        converter = [((id<ComThoughtworksXstreamConvertersConverterLookup>) nil_chk(lookup_)) lookupConverterForTypeWithIOSClass:type];
      }
      
#line 237
      if (!([ComThoughtworksXstreamConvertersSingleValueConverter_class_() isInstance:converter])) {
        ComThoughtworksXstreamConvertersConversionException *exception = new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(
#line 239
        @"Cannot read field as a single value for object");
        [exception addWithNSString:@"field" withNSString:fieldName];
        [exception addWithNSString:@"type" withNSString:[resultType getName]];
        @throw exception;
      }
      
#line 245
      if (converter != nil) {
        id value = [((id<ComThoughtworksXstreamConvertersSingleValueConverter>) check_protocol_cast(converter, @protocol(ComThoughtworksXstreamConvertersSingleValueConverter))) fromStringWithNSString:[reader getAttributeWithNSString:
#line 247
        attrName]];
        if ([((IOSClass *) nil_chk(type)) isPrimitive]) {
          type = ComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(type);
        }
        
#line 252
        if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value getClass]]) {
          ComThoughtworksXstreamConvertersConversionException *exception = new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(
#line 254
          @"Cannot assign object to type");
          [exception addWithNSString:@"object type" withNSString:[[value getClass] getName]];
          [exception addWithNSString:@"target type" withNSString:[type getName]];
          @throw exception;
        }
        
#line 260
        [reflectionProvider_ writeFieldWithId:result withNSString:fieldName withId:value withIOSClass:declaringClass];
        if (![seenFields addWithId:new_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(declaringClass, fieldName)]) {
          @throw new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(JreStrcat("$$$C", fieldName, @" [",
#line 264
          [((IOSClass *) nil_chk(declaringClass)) getName], ']'));
        }
      }
    }
  }
  
#line 271
  if (valueField_ != nil) {
    IOSClass *classDefiningField = [valueField_ getDeclaringClass];
    NSString *fieldName = [valueField_ getName];
    JavaLangReflectField *field = fieldName == nil ? nil : [reflectionProvider_ getFieldWithIOSClass:
#line 275
    classDefiningField withNSString:fieldName];
    if (fieldName == nil || field == nil) {
      ComThoughtworksXstreamConvertersConversionException *exception = new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(
#line 278
      @"Cannot assign value to field of type");
      [exception addWithNSString:@"element" withNSString:[reader getNodeName]];
      [exception addWithNSString:@"field" withNSString:fieldName];
      [exception addWithNSString:@"target type" withNSString:[((IOSClass *) nil_chk([context getRequiredType])) getName]];
      @throw exception;
    }
    
#line 285
    IOSClass *type;
    NSString *classAttribute = ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(
#line 287
    reader, mapper_);
    if (classAttribute != nil) {
      type = [mapper_ realClassWithNSString:classAttribute];
    }
    else {
      
#line 291
      type = [mapper_ defaultImplementationOfWithIOSClass:[reflectionProvider_ getFieldTypeWithId:
#line 292
      result withNSString:fieldName withIOSClass:classDefiningField]];
    }
    
#line 295
    id value = [context convertAnotherWithId:
#line 296
    result withIOSClass:type withComThoughtworksXstreamConvertersConverter:
#line 297
    [mapper_ getLocalConverterWithIOSClass:[field getDeclaringClass] withNSString:[field getName]]];
    
#line 299
    IOSClass *definedType = [reflectionProvider_ getFieldTypeWithId:
#line 300
    result withNSString:fieldName withIOSClass:classDefiningField];
    if (![((IOSClass *) nil_chk(definedType)) isPrimitive]) {
      type = definedType;
    }
    
#line 305
    if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value getClass]]) {
      ComThoughtworksXstreamConvertersConversionException *exception = new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(
#line 307
      @"Cannot assign object to type");
      [exception addWithNSString:@"object type" withNSString:[[value getClass] getName]];
      [exception addWithNSString:@"target type" withNSString:[type getName]];
      @throw exception;
    }
    
#line 313
    [reflectionProvider_ writeFieldWithId:result withNSString:fieldName withId:value withIOSClass:classDefiningField];
    if (![seenFields addWithId:new_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(classDefiningField, fieldName)]) {
      @throw new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(JreStrcat("$$$C", fieldName, @" [",
#line 317
      [((IOSClass *) nil_chk(classDefiningField)) getName], ']'));
    }
  }
  
#line 321
  return result;
}


#line 324
- (jboolean)fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField:(ComThoughtworksXstreamCoreUtilFastField *)field {
  return ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(self, field);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamConvertersConverterLookup:withNSString:", "ToAttributedValueConverter", NULL, 0x1, NULL, NULL },
    { "initWithIOSClass:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamConvertersConverterLookup:withNSString:withIOSClass:", "ToAttributedValueConverter", NULL, 0x1, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField:", "fieldIsEqual", "Z", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STRUCTURE_MARKER_", NULL, 0x1a, "Ljava.lang.String;", &ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_STRUCTURE_MARKER_, NULL,  },
    { "type_", NULL, 0x12, "Ljava.lang.Class;", NULL, NULL,  },
    { "mapper_", NULL, 0x12, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL, NULL,  },
    { "enumMapper_", NULL, 0x12, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL, NULL,  },
    { "reflectionProvider_", NULL, 0x12, "Lcom.thoughtworks.xstream.converters.reflection.ReflectionProvider;", NULL, NULL,  },
    { "lookup_", NULL, 0x12, "Lcom.thoughtworks.xstream.converters.ConverterLookup;", NULL, NULL,  },
    { "valueField_", NULL, 0x12, "Ljava.lang.reflect.Field;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter = { 2, "ToAttributedValueConverter", "com.thoughtworks.xstream.converters.extended", NULL, 0x1, 6, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter;
}

@end


#line 69
void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName) {
  (void) ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(self,
#line 72
  type, mapper, reflectionProvider, lookup, valueFieldName, nil);
}


#line 69
ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName) {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self = [ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter alloc];
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(self, type, mapper, reflectionProvider, lookup, valueFieldName);
  return self;
}


#line 85
void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn) {
  (void) NSObject_init(self);
  
#line 88
  self->type_ = type;
  self->mapper_ = mapper;
  self->reflectionProvider_ = reflectionProvider;
  self->lookup_ = lookup;
  
#line 93
  if (valueFieldName == nil) {
    self->valueField_ = nil;
  }
  else {
    
#line 96
    JavaLangReflectField *field = nil;
    @try {
      field = [(valueDefinedIn != nil ? valueDefinedIn : type) getDeclaredField:
#line 99
      valueFieldName];
      if (![((JavaLangReflectField *) nil_chk(field)) isAccessible]) {
        [field setAccessibleWithBoolean:YES];
      }
    }
    @catch (
#line 103
    JavaLangNoSuchFieldException *e) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", [((JavaLangNoSuchFieldException *) nil_chk(e)) getMessage], @": ", valueFieldName));
    }
    self->valueField_ = field;
  }
  self->enumMapper_ = ComThoughtworksXstreamCoreJVM_is15() ? ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_createEnumMapperWithComThoughtworksXstreamMapperMapper_(mapper) : nil;
}


#line 85
ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn) {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self = [ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter alloc];
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(self, type, mapper, reflectionProvider, lookup, valueFieldName, valueDefinedIn);
  return self;
}


#line 324
jboolean ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, ComThoughtworksXstreamCoreUtilFastField *field) {
  return [((NSString *) nil_chk([((JavaLangReflectField *) nil_chk(self->valueField_)) getName])) isEqual:[((ComThoughtworksXstreamCoreUtilFastField *) nil_chk(field)) getName]] &&
#line 326
  [((NSString *) nil_chk([((IOSClass *) nil_chk([self->valueField_ getDeclaringClass])) getName])) isEqual:[field getDeclaringClass]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter)

@implementation ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1


#line 124
- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value {
  
#line 126
  if (![((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:fieldName]) {
    return;
  }
  
#line 130
  ComThoughtworksXstreamCoreUtilFastField *field = new_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(definedIn, fieldName);
  NSString *alias = [this$0_->mapper_ serializedMemberWithIOSClass:definedIn withNSString:fieldName];
  if (![((id<JavaUtilMap>) nil_chk(val$defaultFieldDefinition_)) containsKeyWithId:alias]) {
    IOSClass *lookupType = val$sourceType_;
    (void) [val$defaultFieldDefinition_ putWithId:
#line 135
    alias withId:[((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:lookupType withNSString:fieldName]];
  }
  else
#line 136
  if (!ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(this$0_, field)) {
    ComThoughtworksXstreamConvertersConversionException *exception = new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(
#line 138
    @"Cannot write attribute twice for object");
    [exception addWithNSString:@"alias" withNSString:alias];
    [exception addWithNSString:@"type" withNSString:[((IOSClass *) nil_chk(val$sourceType_)) getName]];
    @throw exception;
  }
  
#line 144
  id<ComThoughtworksXstreamConvertersConverterMatcher> converter = ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_isEnumWithIOSClass_(type) ? ((id)
#line 145
  [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->enumMapper_)) getConverterFromItemTypeWithNSString:nil withIOSClass:type withIOSClass:nil]) : ((id)
#line 146
  [this$0_->mapper_ getLocalConverterWithIOSClass:definedIn withNSString:fieldName]);
  if (converter == nil) {
    converter = [((id<ComThoughtworksXstreamConvertersConverterLookup>) nil_chk(this$0_->lookup_)) lookupConverterForTypeWithIOSClass:type];
  }
  
#line 151
  if (value != nil) {
    jboolean isValueField = this$0_->valueField_ != nil && ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(this$0_, field);
    if (isValueField) {
      (void) IOSObjectArray_Set(nil_chk(val$definingType_), 0, definedIn);
      (void) IOSObjectArray_Set(nil_chk(val$fieldType_), 0, type);
      (void) IOSObjectArray_Set(nil_chk(val$realValue_), 0, value);
      (void) IOSObjectArray_Set(nil_chk(val$tagValue_), 0, ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_get_STRUCTURE_MARKER_());
    }
    if ([ComThoughtworksXstreamConvertersSingleValueConverter_class_() isInstance:converter]) {
      NSString *str = [((id<ComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(((id<ComThoughtworksXstreamConvertersSingleValueConverter>) check_protocol_cast(converter, @protocol(ComThoughtworksXstreamConvertersSingleValueConverter))))) toStringWithId:value];
      
#line 162
      if (isValueField) {
        (void) IOSObjectArray_Set(nil_chk(val$tagValue_), 0, str);
      }
      else {
        
#line 165
        if (str != nil) {
          [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:alias withNSString:str];
        }
      }
    }
    else {
      
#line 170
      if (!isValueField) {
        ComThoughtworksXstreamConvertersConversionException *exception = new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(
#line 172
        @"Cannot write element as attribute");
        [exception addWithNSString:@"alias" withNSString:alias];
        [exception addWithNSString:@"type" withNSString:[((IOSClass *) nil_chk(val$sourceType_)) getName]];
        @throw exception;
      }
    }
  }
}

- (instancetype)initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter:(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *)outer$
                                                                           withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                              withIOSClass:(IOSClass *)capture$1
                                                                         withIOSClassArray:(IOSObjectArray *)capture$2
                                                                         withIOSClassArray:(IOSObjectArray *)capture$3
                                                                         withNSObjectArray:(IOSObjectArray *)capture$4
                                                                         withNSStringArray:(IOSObjectArray *)capture$5
                                      withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$6 {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5, capture$6);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "visitWithNSString:withIOSClass:withIOSClass:withId:", "visit", "V", 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter:withJavaUtilMap:withIOSClass:withIOSClassArray:withIOSClassArray:withNSObjectArray:withNSStringArray:withComThoughtworksXstreamIoHierarchicalStreamWriter:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;", NULL, NULL,  },
    { "val$defaultFieldDefinition_", NULL, 0x1012, "Ljava.util.Map;", NULL, NULL,  },
    { "val$sourceType_", NULL, 0x1012, "Ljava.lang.Class;", NULL, NULL,  },
    { "val$definingType_", NULL, 0x1012, "[Ljava.lang.Class;", NULL, NULL,  },
    { "val$fieldType_", NULL, 0x1012, "[Ljava.lang.Class;", NULL, NULL,  },
    { "val$realValue_", NULL, 0x1012, "[Ljava.lang.Object;", NULL, NULL,  },
    { "val$tagValue_", NULL, 0x1012, "[Ljava.lang.String;", NULL, NULL,  },
    { "val$writer_", NULL, 0x1012, "Lcom.thoughtworks.xstream.io.HierarchicalStreamWriter;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter", "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 = { 2, "", "com.thoughtworks.xstream.converters.extended", "ToAttributedValueConverter", 0x8008, 2, methods, 8, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1;
}

@end

void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 *self, ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6) {
  self->this$0_ = outer$;
  self->val$defaultFieldDefinition_ = capture$0;
  self->val$sourceType_ = capture$1;
  self->val$definingType_ = capture$2;
  self->val$fieldType_ = capture$3;
  self->val$realValue_ = capture$4;
  self->val$tagValue_ = capture$5;
  self->val$writer_ = capture$6;
  (void) NSObject_init(self);
}

ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6) {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 *self = [ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1 alloc];
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5, capture$6);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_$1)
