//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.h"
#include "com/thoughtworks/xstream/core/util/DependencyInjectionFactory.h"
#include "com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Exception.h"


#line 19
@implementation ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper

- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  return
#line 22
  [super initWithComThoughtworksXstreamMapperMapper:wrapped withComThoughtworksXstreamConvertersConverterLookup:nil withComThoughtworksXstreamConvertersReflectionReflectionProvider:nil];
}


#line 28
+ (jboolean)isEnumWithIOSClass:(IOSClass *)type {
  
#line 29
  while (type != nil && type != [IOSClass classWithClass:[NSObject class]]) {
    if ([((NSString *) nil_chk([((IOSClass *) nil_chk(type)) getName])) isEqual:@"java.lang.Enum"]) {
      return YES;
    }
    type = [type getSuperclass];
  }
  return NO;
}


#line 38
- (jboolean)shouldLookForSingleValueConverterWithNSString:(NSString *)fieldName
                                             withIOSClass:(IOSClass *)type
                                             withIOSClass:(IOSClass *)definedIn {
  return [ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper isEnumWithIOSClass:type];
}


#line 43
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                    withIOSClass:(IOSClass *)type
                                                                                    withIOSClass:(IOSClass *)definedIn {
  
#line 45
  return nil;
}


#line 48
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                     withNSString:(NSString *)attribute
                                                                                     withIOSClass:(IOSClass *)type {
  
#line 50
  return nil;
}


#line 53
+ (id<ComThoughtworksXstreamMapperMapper>)createEnumMapperWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  
#line 54
  @try {
    IOSClass *enumMapperClass = [IOSClass forName:
#line 56
    @"com.thoughtworks.xstream.mapper.EnumMapper" initialize:YES classLoader:
#line 57
    [[IOSClass classWithProtocol:@protocol(ComThoughtworksXstreamMapperMapper)] getClassLoader]];
    return (id<ComThoughtworksXstreamMapperMapper>) check_protocol_cast([ComThoughtworksXstreamCoreUtilDependencyInjectionFactory newInstanceWithIOSClass:
#line 59
    enumMapperClass withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){
#line 60
      [[ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper alloc] initWithComThoughtworksXstreamMapperMapper:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper)) lookupMapperOfTypeWithIOSClass:
#line 61
      [IOSClass classWithClass:[ComThoughtworksXstreamMapperDefaultMapper class]]]] } count:1 type:[IOSClass classWithClass:[NSObject class]]]], @protocol(ComThoughtworksXstreamMapperMapper));
    }
    @catch (
#line 62
    JavaLangException *e) {
      return nil;
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "UseAttributeForEnumMapper", NULL, 0x1, NULL },
    { "isEnumWithIOSClass:", "isEnum", "Z", 0x9, NULL },
    { "shouldLookForSingleValueConverterWithNSString:withIOSClass:withIOSClass:", "shouldLookForSingleValueConverter", "Z", 0x1, NULL },
    { "getConverterFromItemTypeWithNSString:withIOSClass:withIOSClass:", "getConverterFromItemType", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL },
    { "getConverterFromAttributeWithIOSClass:withNSString:withIOSClass:", "getConverterFromAttribute", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL },
    { "createEnumMapperWithComThoughtworksXstreamMapperMapper:", "createEnumMapper", "Lcom.thoughtworks.xstream.mapper.Mapper;", 0x8, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper = { "UseAttributeForEnumMapper", "com.thoughtworks.xstream.converters.extended", NULL, 0x0, 6, methods, 0, NULL, 0, NULL};
  return &_ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper;
}

@end
