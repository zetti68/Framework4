//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.h"
#include "com/thoughtworks/xstream/core/util/DependencyInjectionFactory.h"
#include "com/thoughtworks/xstream/mapper/AttributeMapper.h"
#include "com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Exception.h"


#line 19
@implementation ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper

- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}


#line 28
+ (jboolean)isEnumWithIOSClass:(IOSClass *)type {
  return ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_isEnumWithIOSClass_(type);
}


#line 38
- (jboolean)shouldLookForSingleValueConverterWithNSString:(NSString *)fieldName
                                             withIOSClass:(IOSClass *)type
                                             withIOSClass:(IOSClass *)definedIn {
  
#line 40
  return ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_isEnumWithIOSClass_(type);
}


#line 43
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                    withIOSClass:(IOSClass *)type
                                                                                    withIOSClass:(IOSClass *)definedIn {
  
#line 45
  return nil;
}


#line 48
- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                     withNSString:(NSString *)attribute
                                                                                     withIOSClass:(IOSClass *)type {
  
#line 50
  return nil;
}


#line 53
+ (id<ComThoughtworksXstreamMapperMapper>)createEnumMapperWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_createEnumMapperWithComThoughtworksXstreamMapperMapper_(mapper);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "UseAttributeForEnumMapper", NULL, 0x1, NULL, NULL },
    { "isEnumWithIOSClass:", "isEnum", "Z", 0x9, NULL, NULL },
    { "shouldLookForSingleValueConverterWithNSString:withIOSClass:withIOSClass:", "shouldLookForSingleValueConverter", "Z", 0x1, NULL, NULL },
    { "getConverterFromItemTypeWithNSString:withIOSClass:withIOSClass:", "getConverterFromItemType", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
    { "getConverterFromAttributeWithIOSClass:withNSString:withIOSClass:", "getConverterFromAttribute", "Lcom.thoughtworks.xstream.converters.SingleValueConverter;", 0x1, NULL, NULL },
    { "createEnumMapperWithComThoughtworksXstreamMapperMapper:", "createEnumMapper", "Lcom.thoughtworks.xstream.mapper.Mapper;", 0x8, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper = { 2, "UseAttributeForEnumMapper", "com.thoughtworks.xstream.converters.extended", NULL, 0x0, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper;
}

@end


#line 21
void ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped) {
  (void) ComThoughtworksXstreamMapperAttributeMapper_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, wrapped, nil, nil);
}


#line 21
ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper *new_ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) {
  ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper *self = [ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper alloc];
  ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}


#line 28
jboolean ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_isEnumWithIOSClass_(IOSClass *type) {
  ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_initialize();
  
#line 29
  while (type != nil && type != NSObject_class_()) {
    if ([((NSString *) nil_chk([((IOSClass *) nil_chk(type)) getName])) isEqual:@"java.lang.Enum"]) {
      return YES;
    }
    type = [type getSuperclass];
  }
  return NO;
}


#line 53
id<ComThoughtworksXstreamMapperMapper> ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_createEnumMapperWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_initialize();
  
#line 54
  @try {
    IOSClass *enumMapperClass = IOSClass_forName_initialize_classLoader_(
#line 56
    @"com.thoughtworks.xstream.mapper.EnumMapper", YES,
#line 57
    [ComThoughtworksXstreamMapperMapper_class_() getClassLoader]);
    return (id<ComThoughtworksXstreamMapperMapper>) check_protocol_cast(ComThoughtworksXstreamCoreUtilDependencyInjectionFactory_newInstanceWithIOSClass_withNSObjectArray_(
#line 59
    enumMapperClass, [IOSObjectArray newArrayWithObjects:(id[]){ new_ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_initWithComThoughtworksXstreamMapperMapper_(
#line 60
    [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper)) lookupMapperOfTypeWithIOSClass:
#line 61
    ComThoughtworksXstreamMapperDefaultMapper_class_()]) } count:1 type:NSObject_class_()]), @protocol(ComThoughtworksXstreamMapperMapper));
  }
  @catch (
#line 62
  JavaLangException *e) {
    return nil;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper)
