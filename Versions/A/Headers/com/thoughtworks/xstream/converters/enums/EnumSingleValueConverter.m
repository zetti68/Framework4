//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/enums/EnumSingleValueConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/enums/EnumSingleValueConverter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/basic/AbstractSingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/enums/EnumSingleValueConverter.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter () {
 @public
  IOSClass *enumType_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter, enumType_, IOSClass *)


#line 23
@implementation ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter


#line 27
- (instancetype)initWithIOSClass:(IOSClass *)type {
  ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter_initWithIOSClass_(self, type);
  return self;
}


#line 35
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(enumType_)) isAssignableFrom:type];
}


#line 40
- (NSString *)toStringWithId:(id)obj {
  return [((JavaLangEnum *) nil_chk([JavaLangEnum_class_() cast:obj])) name];
}


#line 45
- (id)fromStringWithNSString:(NSString *)str {
  JavaLangEnum *
#line 47
  result = ((JavaLangEnum *) JavaLangEnum_valueOfWithIOSClass_withNSString_(enumType_, str));
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:", "EnumSingleValueConverter", NULL, 0x1, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "toStringWithId:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "fromStringWithNSString:", "fromString", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "enumType_", NULL, 0x12, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<+Ljava/lang/Enum;>;",  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter = { 2, "EnumSingleValueConverter", "com.thoughtworks.xstream.converters.enums", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter;
}

@end


#line 27
void ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter_initWithIOSClass_(ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter *self, IOSClass *type) {
  (void) ComThoughtworksXstreamConvertersBasicAbstractSingleValueConverter_init(self);
  
#line 28
  if (![JavaLangEnum_class_() isAssignableFrom:type] && type != JavaLangEnum_class_()) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Converter can only handle defined enums");
  }
  self->enumType_ = type;
}


#line 27
ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter *new_ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter_initWithIOSClass_(IOSClass *type) {
  ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter *self = [ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter alloc];
  ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter_initWithIOSClass_(self, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersEnumsEnumSingleValueConverter)
