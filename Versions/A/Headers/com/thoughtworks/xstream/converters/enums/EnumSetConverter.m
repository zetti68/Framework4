//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/enums/EnumSetConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/enums/EnumSetConverter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/enums/EnumSetConverter.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/Enum.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/reflect/Field.h"
#include "java/util/EnumSet.h"
#include "java/util/Iterator.h"

@interface ComThoughtworksXstreamConvertersEnumsEnumSetConverter () {
 @public
  id<ComThoughtworksXstreamMapperMapper> mapper_;
}

- (NSString *)joinEnumValuesWithJavaUtilEnumSet:(JavaUtilEnumSet *)set;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersEnumsEnumSetConverter, mapper_, id<ComThoughtworksXstreamMapperMapper>)

static JavaLangReflectField *ComThoughtworksXstreamConvertersEnumsEnumSetConverter_typeField_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersEnumsEnumSetConverter, typeField_, JavaLangReflectField *)

__attribute__((unused)) static NSString *ComThoughtworksXstreamConvertersEnumsEnumSetConverter_joinEnumValuesWithJavaUtilEnumSet_(ComThoughtworksXstreamConvertersEnumsEnumSetConverter *self, JavaUtilEnumSet *set);

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersEnumsEnumSetConverter)

@implementation ComThoughtworksXstreamConvertersEnumsEnumSetConverter


#line 45
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersEnumsEnumSetConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}


#line 49
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return ComThoughtworksXstreamConvertersEnumsEnumSetConverter_typeField_ != nil && [JavaUtilEnumSet_class_() isAssignableFrom:type];
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  JavaUtilEnumSet *set = (JavaUtilEnumSet *) check_class_cast(source, [JavaUtilEnumSet class]);
  IOSClass *enumTypeForSet = (IOSClass *) check_class_cast(ComThoughtworksXstreamCoreUtilFields_readWithJavaLangReflectField_withId_(ComThoughtworksXstreamConvertersEnumsEnumSetConverter_typeField_, set), [IOSClass class]);
  NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"enum-type"];
  if (attributeName != nil) {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) addAttributeWithNSString:attributeName withNSString:[mapper_ serializedClassWithIOSClass:enumTypeForSet]];
  }
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:ComThoughtworksXstreamConvertersEnumsEnumSetConverter_joinEnumValuesWithJavaUtilEnumSet_(self, set)];
}


#line 63
- (NSString *)joinEnumValuesWithJavaUtilEnumSet:(JavaUtilEnumSet *)set {
  return ComThoughtworksXstreamConvertersEnumsEnumSetConverter_joinEnumValuesWithJavaUtilEnumSet_(self, set);
}


#line 79
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"enum-type"];
  if (attributeName == nil) {
    @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"No EnumType specified for EnumSet");
  }
  IOSClass *enumTypeForSet = [mapper_ realClassWithNSString:[((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName]];
  JavaUtilEnumSet *set = JavaUtilEnumSet_noneOfWithIOSClass_(enumTypeForSet);
  IOSObjectArray *enumValues = [((NSString *) nil_chk([reader getValue])) split:@","];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(enumValues))->size_; i++) {
    NSString *enumValue = IOSObjectArray_Get(enumValues, i);
    if (((jint) [((NSString *) nil_chk(enumValue)) length]) > 0) {
      [((JavaUtilEnumSet *) nil_chk(set)) addWithId:JavaLangEnum_valueOfWithIOSClass_withNSString_(enumTypeForSet, enumValue)];
    }
  }
  return set;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersEnumsEnumSetConverter class]) {
    ComThoughtworksXstreamConvertersEnumsEnumSetConverter_typeField_ = ComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(
#line 42
    JavaUtilEnumSet_class_(), IOSClass_class_(), NO);
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersEnumsEnumSetConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "EnumSetConverter", NULL, 0x1, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "joinEnumValuesWithJavaUtilEnumSet:", "joinEnumValues", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "typeField_", NULL, 0x1a, "Ljava.lang.reflect.Field;", &ComThoughtworksXstreamConvertersEnumsEnumSetConverter_typeField_, NULL,  },
    { "mapper_", NULL, 0x12, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersEnumsEnumSetConverter = { 2, "EnumSetConverter", "com.thoughtworks.xstream.converters.enums", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersEnumsEnumSetConverter;
}

@end


#line 45
void ComThoughtworksXstreamConvertersEnumsEnumSetConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersEnumsEnumSetConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper) {
  (void) NSObject_init(self);
  
#line 46
  self->mapper_ = mapper;
}


#line 45
ComThoughtworksXstreamConvertersEnumsEnumSetConverter *new_ComThoughtworksXstreamConvertersEnumsEnumSetConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersEnumsEnumSetConverter *self = [ComThoughtworksXstreamConvertersEnumsEnumSetConverter alloc];
  ComThoughtworksXstreamConvertersEnumsEnumSetConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}


#line 63
NSString *ComThoughtworksXstreamConvertersEnumsEnumSetConverter_joinEnumValuesWithJavaUtilEnumSet_(ComThoughtworksXstreamConvertersEnumsEnumSetConverter *self, JavaUtilEnumSet *set) {
  jboolean seenFirst = NO;
  JavaLangStringBuffer *result = new_JavaLangStringBuffer_init();
  for (id<JavaUtilIterator> iterator = [((JavaUtilEnumSet *) nil_chk(set)) iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ) {
    JavaLangEnum *value = (JavaLangEnum *) check_class_cast([iterator next], [JavaLangEnum class]);
    if (seenFirst) {
      (void) [result appendWithChar:','];
    }
    else {
      
#line 71
      seenFirst = YES;
    }
    (void) [result appendWithNSString:[((JavaLangEnum *) nil_chk(value)) name]];
  }
  return [result description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersEnumsEnumSetConverter)
