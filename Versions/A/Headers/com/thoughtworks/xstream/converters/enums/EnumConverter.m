//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/enums/EnumConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/enums/EnumConverter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/enums/EnumConverter.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"


#line 31
@implementation ComThoughtworksXstreamConvertersEnumsEnumConverter

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isEnum] || [JavaLangEnum_class_() isAssignableFrom:type];
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:[((JavaLangEnum *) nil_chk(((JavaLangEnum *) check_class_cast(source, [JavaLangEnum class])))) name]];
}


#line 42
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  IOSClass *type = [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType];
  if ([((IOSClass *) nil_chk(type)) getSuperclass] != JavaLangEnum_class_()) {
    type = [type getSuperclass];
  }
  NSString *name = [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getValue];
  @try {
    return JavaLangEnum_valueOfWithIOSClass_withNSString_(type, name);
  }
  @catch (
#line 50
  JavaLangIllegalArgumentException *e) {
    {
      IOSObjectArray *a__ = (IOSObjectArray *) check_class_cast([((IOSClass *) nil_chk(type)) getEnumConstants], [IOSObjectArray class]);
      JavaLangEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangEnum * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangEnum *c = *b__++;
        
#line 53
        if ([((NSString *) nil_chk([((JavaLangEnum *) nil_chk(c)) name])) equalsIgnoreCase:name])
#line 54
        return c;
      }
    }
    
#line 56
    @throw e;
  }
}

- (instancetype)init {
  ComThoughtworksXstreamConvertersEnumsEnumConverter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersEnumsEnumConverter = { 2, "EnumConverter", "com.thoughtworks.xstream.converters.enums", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersEnumsEnumConverter;
}

@end

void ComThoughtworksXstreamConvertersEnumsEnumConverter_init(ComThoughtworksXstreamConvertersEnumsEnumConverter *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamConvertersEnumsEnumConverter *new_ComThoughtworksXstreamConvertersEnumsEnumConverter_init() {
  ComThoughtworksXstreamConvertersEnumsEnumConverter *self = [ComThoughtworksXstreamConvertersEnumsEnumConverter alloc];
  ComThoughtworksXstreamConvertersEnumsEnumConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersEnumsEnumConverter)
