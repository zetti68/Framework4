//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/basic/UUIDConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/basic/UUIDConverter.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/basic/UUIDConverter.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/UUID.h"


#line 23
@implementation ComThoughtworksXstreamConvertersBasicUUIDConverter

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  
#line 26
  return [((IOSClass *) nil_chk(type)) isEqual:[IOSClass classWithClass:[JavaUtilUUID class]]];
}


#line 29
- (id)fromStringWithNSString:(NSString *)str {
  
#line 30
  @try {
    return [JavaUtilUUID fromStringWithNSString:str];
  }
  @catch (
#line 32
  JavaLangIllegalArgumentException *e) {
    @throw [[ComThoughtworksXstreamConvertersConversionException alloc] initWithNSString:@"Cannot create UUID instance" withJavaLangThrowable:e];
  }
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "fromStringWithNSString:", "fromString", "Ljava.lang.Object;", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersBasicUUIDConverter = { "UUIDConverter", "com.thoughtworks.xstream.converters.basic", NULL, 0x1, 3, methods, 0, NULL, 0, NULL};
  return &_ComThoughtworksXstreamConvertersBasicUUIDConverter;
}

@end
