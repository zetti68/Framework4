//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/reflection/SortableFieldKeySorter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/reflection/SortableFieldKeySorter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/reflection/FieldKey.h"
#include "com/thoughtworks/xstream/converters/reflection/SortableFieldKeySorter.h"
#include "com/thoughtworks/xstream/core/util/OrderRetainingMap.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter () {
 @public
  id<JavaUtilMap> map_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter, map_, id<JavaUtilMap>)

@interface ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator : NSObject < JavaUtilComparator > {
 @public
  IOSObjectArray *fieldOrder_;
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter:(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *)outer$
                                                                       withNSStringArray:(IOSObjectArray *)fields;

- (jint)compareWithNSString:(NSString *)first
               withNSString:(NSString *)second;

- (jint)compareWithId:(id)firstObject
               withId:(id)secondObject;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator, fieldOrder_, IOSObjectArray *)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *self, ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *new_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator)


#line 30
@implementation ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter


#line 34
- (id<JavaUtilMap>)sortWithIOSClass:(IOSClass *)type
                    withJavaUtilMap:(id<JavaUtilMap>)keyedByFieldKey {
  if ([((id<JavaUtilMap>) nil_chk(map_)) containsKeyWithId:type]) {
    id<JavaUtilMap> result = new_ComThoughtworksXstreamCoreUtilOrderRetainingMap_init();
    IOSObjectArray *fieldKeys = (IOSObjectArray *) check_class_cast([((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(keyedByFieldKey)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:
#line 38
    [keyedByFieldKey size] type:ComThoughtworksXstreamConvertersReflectionFieldKey_class_()]], [IOSObjectArray class]);
    JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(fieldKeys, (id<JavaUtilComparator>) check_protocol_cast([map_ getWithId:type], @protocol(JavaUtilComparator)));
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fieldKeys))->size_; i++) {
      (void) [result putWithId:IOSObjectArray_Get(fieldKeys, i) withId:[keyedByFieldKey getWithId:IOSObjectArray_Get(fieldKeys, i)]];
    }
    return result;
  }
  else {
    
#line 45
    return keyedByFieldKey;
  }
}


#line 57
- (void)registerFieldOrderWithIOSClass:(IOSClass *)type
                     withNSStringArray:(IOSObjectArray *)fields {
  (void) [((id<JavaUtilMap>) nil_chk(map_)) putWithId:type withId:new_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(self, fields)];
}


#line 94
- (void)flushCache {
  [((id<JavaUtilMap>) nil_chk(map_)) clear];
}

- (instancetype)init {
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "sortWithIOSClass:withJavaUtilMap:", "sort", "Ljava.util.Map;", 0x1, NULL, NULL },
    { "registerFieldOrderWithIOSClass:withNSStringArray:", "registerFieldOrder", "V", 0x1, NULL, NULL },
    { "flushCache", NULL, "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "map_", NULL, 0x12, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator;"};
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter = { 2, "SortableFieldKeySorter", "com.thoughtworks.xstream.converters.reflection", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter;
}

@end

void ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *self) {
  (void) NSObject_init(self);
  self->map_ = new_JavaUtilHashMap_init();
}

ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *new_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init() {
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *self = [ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter alloc];
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter)


#line 61
@implementation ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator


#line 65
- (instancetype)initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter:(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *)outer$
                                                                       withNSStringArray:(IOSObjectArray *)fields {
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(self, outer$, fields);
  return self;
}


#line 69
- (jint)compareWithNSString:(NSString *)first
               withNSString:(NSString *)second {
  jint firstPosition = -1, secondPosition = -1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fieldOrder_))->size_; i++) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(fieldOrder_, i))) isEqual:first]) {
      firstPosition = i;
    }
    if ([((NSString *) nil_chk(IOSObjectArray_Get(fieldOrder_, i))) isEqual:second]) {
      secondPosition = i;
    }
  }
  if (firstPosition == -1 || secondPosition == -1) {
    
#line 81
    @throw new_ComThoughtworksXstreamIoStreamException_initWithNSString_(
#line 82
    @"You have not given XStream a list of all fields to be serialized.");
  }
  return firstPosition - secondPosition;
}


#line 87
- (jint)compareWithId:(id)firstObject
               withId:(id)secondObject {
  ComThoughtworksXstreamConvertersReflectionFieldKey *first = (ComThoughtworksXstreamConvertersReflectionFieldKey *) check_class_cast(firstObject, [ComThoughtworksXstreamConvertersReflectionFieldKey class]), *second = (ComThoughtworksXstreamConvertersReflectionFieldKey *) check_class_cast(secondObject, [ComThoughtworksXstreamConvertersReflectionFieldKey class]);
  return [self compareWithNSString:[((ComThoughtworksXstreamConvertersReflectionFieldKey *) nil_chk(first)) getFieldName] withNSString:[((ComThoughtworksXstreamConvertersReflectionFieldKey *) nil_chk(second)) getFieldName]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter:withNSStringArray:", "FieldComparator", NULL, 0x1, NULL, NULL },
    { "compareWithNSString:withNSString:", "compare", "I", 0x1, NULL, NULL },
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fieldOrder_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator = { 2, "FieldComparator", "com.thoughtworks.xstream.converters.reflection", "SortableFieldKeySorter", 0x2, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator;
}

@end


#line 65
void ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *self, ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields) {
  (void) NSObject_init(self);
  
#line 66
  self->fieldOrder_ = fields;
}


#line 65
ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *new_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields) {
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *self = [ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator alloc];
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(self, outer$, fields);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator)
