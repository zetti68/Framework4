//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/reflection/MissingFieldException.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/reflection/MissingFieldException.java"

#include "com/thoughtworks/xstream/converters/reflection/MissingFieldException.h"


#line 20
@implementation ComThoughtworksXstreamConvertersReflectionMissingFieldException


#line 31
- (instancetype)initWithNSString:(NSString *)className_
                    withNSString:(NSString *)fieldName {
  if (self =
#line 32
  [super initWithNSString:JreStrcat("$$$$C", @"No field '", fieldName, @"' found in class '", className_, '\'')]) {
    
#line 33
    self->className__ = className_;
    
#line 34
    self->fieldName_ = fieldName;
  }
  return self;
}


#line 42
- (NSString *)getFieldName {
  
#line 43
  return fieldName_;
}


#line 51
- (NSString *)getClassName {
  
#line 52
  return className__;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamConvertersReflectionMissingFieldException *)other {
  [super copyAllFieldsTo:other];
  other->className__ = className__;
  other->fieldName_ = fieldName_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "MissingFieldException", NULL, 0x1, NULL },
    { "getFieldName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getClassName", NULL, "Ljava.lang.String;", 0x4, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fieldName_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
    { "className__", "className", 0x12, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionMissingFieldException = { "MissingFieldException", "com.thoughtworks.xstream.converters.reflection", NULL, 0x1, 3, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersReflectionMissingFieldException;
}

@end
