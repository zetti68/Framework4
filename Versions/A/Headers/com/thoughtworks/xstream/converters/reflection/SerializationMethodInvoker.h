//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/reflection/SerializationMethodInvoker.java
//

#ifndef _ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_H_
#define _ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_H_

@class IOSClass;
@class IOSObjectArray;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@class JavaLangReflectMethod;
@protocol JavaUtilMap;

#import "JreEmulation.h"
#include "com/thoughtworks/xstream/core/Caching.h"

@interface ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker : NSObject < ComThoughtworksXstreamCoreCaching > {
 @public
  id<JavaUtilMap> cache_;
}

- (id)callReadResolveWithId:(id)result;

- (id)callWriteReplaceWithId:(id)object;

- (jboolean)supportsReadObjectWithIOSClass:(IOSClass *)type
                               withBoolean:(jboolean)includeBaseClasses;

- (void)callReadObjectWithIOSClass:(IOSClass *)type
                            withId:(id)object
       withJavaIoObjectInputStream:(JavaIoObjectInputStream *)stream;

- (jboolean)supportsWriteObjectWithIOSClass:(IOSClass *)type
                                withBoolean:(jboolean)includeBaseClasses;

- (void)callWriteObjectWithIOSClass:(IOSClass *)type
                             withId:(id)instance
       withJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)stream;

- (JavaLangReflectMethod *)getMethodWithIOSClass:(IOSClass *)type
                                    withNSString:(NSString *)name
                               withIOSClassArray:(IOSObjectArray *)parameterTypes
                                     withBoolean:(jboolean)includeBaseclasses;

- (JavaLangReflectMethod *)getMethodWithIOSClass:(IOSClass *)type
                                    withNSString:(NSString *)name
                               withIOSClassArray:(IOSObjectArray *)parameterTypes;

- (void)flushCache;

- (instancetype)init;

- (void)copyAllFieldsTo:(ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *)other;

@end

FOUNDATION_EXPORT BOOL ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_initialized;
J2OBJC_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker, cache_, id<JavaUtilMap>)

FOUNDATION_EXPORT JavaLangReflectMethod *ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_NO_METHOD_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker, NO_METHOD_, JavaLangReflectMethod *)

FOUNDATION_EXPORT IOSObjectArray *ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_EMPTY_ARGS_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker, EMPTY_ARGS_, IOSObjectArray *)

FOUNDATION_EXPORT IOSObjectArray *ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_OBJECT_TYPE_FIELDS_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker, OBJECT_TYPE_FIELDS_, IOSObjectArray *)

@interface ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_$1 : NSObject {
}

- (void)noMethod;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_$1_init() {}

#endif // _ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_H_
