//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/reflection/ReflectionConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/reflection/ReflectionConverter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"

@interface ComThoughtworksXstreamConvertersReflectionReflectionConverter () {
 @public
  IOSClass *type_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionReflectionConverter, type_, IOSClass *)

static IOSClass *ComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersReflectionReflectionConverter, eventHandlerType_, IOSClass *)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersReflectionReflectionConverter)


#line 17
@implementation ComThoughtworksXstreamConvertersReflectionReflectionConverter


#line 23
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider {
  ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  return self;
}


#line 35
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                              withIOSClass:(IOSClass *)type {
  ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(self, mapper, reflectionProvider, type);
  return self;
}


#line 40
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return ((self->type_ != nil && self->type_ == type) || (self->type_ == nil && type != nil && type != ComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType_)) &&
#line 42
  [self canAccessWithIOSClass:type];
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersReflectionReflectionConverter class]) {
    ComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType_ = ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(
#line 20
    @"java.beans.EventHandler");
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersReflectionReflectionConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:", "ReflectionConverter", NULL, 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:withIOSClass:", "ReflectionConverter", NULL, 0x1, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "eventHandlerType_", NULL, 0x1a, "Ljava.lang.Class;", &ComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType_, NULL,  },
    { "type_", NULL, 0x2, "Ljava.lang.Class;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionReflectionConverter = { 2, "ReflectionConverter", "com.thoughtworks.xstream.converters.reflection", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionReflectionConverter;
}

@end


#line 23
void ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(ComThoughtworksXstreamConvertersReflectionReflectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  (void) ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
}


#line 23
ComThoughtworksXstreamConvertersReflectionReflectionConverter *new_ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  ComThoughtworksXstreamConvertersReflectionReflectionConverter *self = [ComThoughtworksXstreamConvertersReflectionReflectionConverter alloc];
  ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  return self;
}


#line 35
void ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(ComThoughtworksXstreamConvertersReflectionReflectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type) {
  (void) ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  self->type_ = type;
}


#line 35
ComThoughtworksXstreamConvertersReflectionReflectionConverter *new_ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type) {
  ComThoughtworksXstreamConvertersReflectionReflectionConverter *self = [ComThoughtworksXstreamConvertersReflectionReflectionConverter alloc];
  ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(self, mapper, reflectionProvider, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionReflectionConverter)
