//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ObjectAccessException.h"
#include "com/thoughtworks/xstream/converters/reflection/PureJavaReflectionProvider.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/converters/reflection/SerializationMethodInvoker.h"
#include "com/thoughtworks/xstream/core/ReferencingMarshallingContext.h"
#include "com/thoughtworks/xstream/core/util/ArrayIterator.h"
#include "com/thoughtworks/xstream/core/util/FastField.h"
#include "com/thoughtworks/xstream/core/util/HierarchicalStreams.h"
#include "com/thoughtworks/xstream/core/util/Primitives.h"
#include "com/thoughtworks/xstream/io/ExtendedHierarchicalStreamWriterHelper.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/Error.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/AbstractList.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter () {
 @public
  id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> pureJavaReflectionProvider_;
}

- (void)handleUnknownFieldWithIOSClass:(IOSClass *)classDefiningField
                          withNSString:(NSString *)fieldName
                          withIOSClass:(IOSClass *)resultType
                          withNSString:(NSString *)originalNodeName;

- (void)writeValueToImplicitCollectionWithId:(id)value
                             withJavaUtilMap:(id<JavaUtilMap>)implicitCollections
                                      withId:(id)result
                                withNSString:(NSString *)implicitFieldName;

- (IOSClass *)readDeclaringClassWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader;

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter, pureJavaReflectionProvider_, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, IOSClass *classDefiningField, NSString *fieldName, IOSClass *resultType, NSString *originalNodeName);

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id value, id<JavaUtilMap> implicitCollections, id result, NSString *implicitFieldName);

__attribute__((unused)) static IOSClass *ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader);

@interface ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo : NSObject {
 @public
  NSString *fieldName_;
  IOSClass *type_;
  IOSClass *definedIn_;
  id value_;
}

- (instancetype)initWithNSString:(NSString *)fieldName
                    withIOSClass:(IOSClass *)type
                    withIOSClass:(IOSClass *)definedIn
                          withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, fieldName_, NSString *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, type_, IOSClass *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, definedIn_, IOSClass *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, value_, id)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *self, NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo)

@interface ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList : JavaUtilArrayList {
 @public
  IOSClass *physicalFieldType_;
}

- (instancetype)initWithIOSClass:(IOSClass *)physicalFieldType;

- (id)toPhysicalArray;


@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList, physicalFieldType_, IOSClass *)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *self, IOSClass *physicalFieldType);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(IOSClass *physicalFieldType) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList)

@interface ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList : JavaUtilAbstractList {
 @public
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *this$0_;
  id<JavaUtilMap> map_;
  NSString *keyFieldName_;
  id<JavaUtilMap> fieldCache_;
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                              withJavaUtilMap:(id<JavaUtilMap>)map
                                                                                 withNSString:(NSString *)keyFieldName;

- (jboolean)addWithId:(id)object;

- (id)getWithInt:(jint)index;

- (jint)size;


@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, this$0_, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, map_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, keyFieldName_, NSString *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, fieldCache_, id<JavaUtilMap>)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *self, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList)

@interface ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 : NSObject < ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor > {
 @public
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *this$0_;
  id<JavaUtilSet> writtenAttributes_;
  id<JavaUtilMap> val$defaultFieldDefinition_;
  id val$source_;
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
  id<JavaUtilList> val$fields_;
}

- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value;

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                              withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                       withId:(id)capture$1
                                         withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$2
                                                                             withJavaUtilList:(id<JavaUtilList>)capture$3;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1, this$0_, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1, writtenAttributes_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1, val$defaultFieldDefinition_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1, val$source_, id)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1, val$writer_, id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1, val$fields_, id<JavaUtilList>)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 *self, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1)

@interface ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 : NSObject {
 @public
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *this$0_;
  id<JavaUtilList> val$fields_;
  id val$source_;
  id<ComThoughtworksXstreamConvertersMarshallingContext> val$context_;
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
  id<JavaUtilMap> val$defaultFieldDefinition_;
}

- (void)writeFieldWithNSString:(NSString *)fieldName
                  withNSString:(NSString *)aliasName
                  withIOSClass:(IOSClass *)fieldType
                  withIOSClass:(IOSClass *)definedIn
                        withId:(id)newObj;

- (void)writeItemWithId:(id)item
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer;

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                             withJavaUtilList:(id<JavaUtilList>)capture$0
                                                                                       withId:(id)capture$1
                                       withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)capture$2
                                         withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$3
                                                                              withJavaUtilMap:(id<JavaUtilMap>)capture$4;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2, this$0_, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2, val$fields_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2, val$source_, id)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2, val$context_, id<ComThoughtworksXstreamConvertersMarshallingContext>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2, val$writer_, id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2, val$defaultFieldDefinition_, id<JavaUtilMap>)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withComThoughtworksXstreamConvertersMarshallingContext_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 *self, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withComThoughtworksXstreamConvertersMarshallingContext_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2)

@interface ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 : JavaUtilHashSet

- (jboolean)addWithId:(id)e;

- (instancetype)init;


@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3_init(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 *self);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3)


#line 45
@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter


#line 52
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  return self;
}

- (jboolean)canAccessWithIOSClass:(IOSClass *)type {
  @try {
    (void) [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) getFieldOrNullWithIOSClass:type withNSString:@"%"];
    return YES;
  }
  @catch (
#line 62
  JavaLangError *e) {
  }
  
#line 65
  return NO;
}


#line 69
- (void)marshalWithId:(id)original
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  
#line 71
  id source = [((ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *) nil_chk(serializationMethodInvoker_)) callWriteReplaceWithId:original];
  
#line 73
  if (source != original && [ComThoughtworksXstreamCoreReferencingMarshallingContext_class_() isInstance:context]) {
    [((id<ComThoughtworksXstreamCoreReferencingMarshallingContext>) nil_chk(((id<ComThoughtworksXstreamCoreReferencingMarshallingContext>) check_protocol_cast(context, @protocol(ComThoughtworksXstreamCoreReferencingMarshallingContext))))) replaceWithId:original withId:source];
  }
  if ([nil_chk(source) getClass] != [nil_chk(original) getClass]) {
    NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"resolves-to"];
    if (attributeName != nil) {
      [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) addAttributeWithNSString:attributeName withNSString:[mapper_ serializedClassWithIOSClass:[source getClass]]];
    }
    [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:source];
  }
  else {
    
#line 83
    [self doMarshalWithId:source withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
  }
}


#line 87
- (void)doMarshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  
#line 89
  id<JavaUtilList> fields = new_JavaUtilArrayList_init();
  id<JavaUtilMap> defaultFieldDefinition = new_JavaUtilHashMap_init();
  
#line 93
  [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) visitSerializableFieldsWithId:source withComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor:new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(self, defaultFieldDefinition, source, writer, fields)];
  
#line 133
  (void) new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withComThoughtworksXstreamConvertersMarshallingContext_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(self, fields, source, context, writer, defaultFieldDefinition);
}


#line 243
- (void)marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context
                                                                     withId:(id)newObj
                                                   withJavaLangReflectField:(JavaLangReflectField *)field {
  [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:newObj withComThoughtworksXstreamConvertersConverter:
#line 245
  [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) getLocalConverterWithIOSClass:[((JavaLangReflectField *) nil_chk(field)) getDeclaringClass] withNSString:[field getName]]];
}


#line 249
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id result = [self instantiateNewInstanceWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context];
  result = [self doUnmarshalWithId:result withComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context];
  return [((ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *) nil_chk(serializationMethodInvoker_)) callReadResolveWithId:result];
}


#line 255
- (id)doUnmarshalWithId:(id)result
withComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 257
  IOSClass *resultType = [nil_chk(result) getClass];
  id<JavaUtilSet> seenFields = new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3_init();
  
#line 269
  id<JavaUtilIterator> it = [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeNames];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    NSString *attrAlias = (NSString *) check_class_cast([it next], [NSString class]);
    
#line 273
    NSString *attrName = [mapper_ realMemberWithIOSClass:resultType withNSString:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) attributeForAliasWithNSString:attrAlias]];
    JavaLangReflectField *field = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) getFieldOrNullWithIOSClass:resultType withNSString:attrName];
    if (field != nil && [self shouldUnmarshalFieldWithJavaLangReflectField:field]) {
      IOSClass *classDefiningField = [field getDeclaringClass];
      if (![mapper_ shouldSerializeMemberWithIOSClass:classDefiningField withNSString:attrName]) {
        continue;
      }
      
#line 282
      id<ComThoughtworksXstreamConvertersSingleValueConverter> converter = [mapper_ getConverterFromAttributeWithIOSClass:classDefiningField withNSString:
#line 283
      attrName withIOSClass:[field getType]];
      IOSClass *type = [field getType];
      if (converter != nil) {
        id value = [converter fromStringWithNSString:[reader getAttributeWithNSString:attrAlias]];
        if ([((IOSClass *) nil_chk(type)) isPrimitive]) {
          type = ComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(type);
        }
        if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value getClass]]) {
          @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Cannot convert type ", [[value getClass] getName], @" to type ",
#line 292
          [type getName]));
        }
        [seenFields addWithId:new_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(classDefiningField, attrName)];
        [reflectionProvider_ writeFieldWithId:result withNSString:attrName withId:value withIOSClass:classDefiningField];
      }
    }
  }
  
#line 300
  id<JavaUtilMap> implicitCollectionsForCurrentObject = nil;
  while ([reader hasMoreChildren]) {
    [reader moveDown];
    
#line 304
    NSString *originalNodeName = [reader getNodeName];
    IOSClass *explicitDeclaringClass = ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader);
    IOSClass *fieldDeclaringClass = explicitDeclaringClass == nil ? resultType :
#line 307
    explicitDeclaringClass;
    NSString *fieldName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realMemberWithIOSClass:fieldDeclaringClass withNSString:originalNodeName];
    id<ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping> implicitCollectionMapping = [mapper_ getImplicitCollectionDefForFieldNameWithIOSClass:
#line 310
    fieldDeclaringClass withNSString:fieldName];
    id value;
    NSString *implicitFieldName = nil;
    JavaLangReflectField *field = nil;
    IOSClass *type = nil;
    if (implicitCollectionMapping == nil) {
      
#line 318
      field = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) getFieldOrNullWithIOSClass:fieldDeclaringClass withNSString:fieldName];
      if (field == nil) {
        
#line 321
        IOSClass *itemType = [mapper_ getItemTypeForItemFieldNameWithIOSClass:resultType withNSString:fieldName];
        if (itemType != nil) {
          NSString *classAttribute = ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(reader, mapper_);
          if (classAttribute != nil) {
            type = [mapper_ realClassWithNSString:classAttribute];
          }
          else {
            
#line 327
            type = itemType;
          }
        }
        else {
          
#line 332
          @try {
            type = [mapper_ realClassWithNSString:originalNodeName];
            implicitFieldName = [mapper_ getFieldNameForItemTypeAndNameWithIOSClass:[((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType] withIOSClass:
#line 335
            type withNSString:originalNodeName];
          }
          @catch (
#line 336
          ComThoughtworksXstreamMapperCannotResolveClassException *e) {
          }
          
#line 339
          if (type == nil || (type != nil && implicitFieldName == nil)) {
            
#line 342
            ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(self, explicitDeclaringClass, fieldName, resultType, originalNodeName);
            
#line 345
            type = nil;
          }
        }
        if (type == nil) {
          
#line 350
          value = nil;
        }
        else {
          
#line 352
          if ([JavaUtilMap_Entry_class_() isEqual:type]) {
            
#line 355
            [reader moveDown];
            id key = [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassTypeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(
#line 357
            reader, mapper_)];
            [reader moveUp];
            [reader moveDown];
            id v = [context convertAnotherWithId:result withIOSClass:ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassTypeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(
#line 361
            reader, mapper_)];
            [reader moveUp];
            value = [((id<JavaUtilIterator>) nil_chk([((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(JavaUtilCollections_singletonMapWithId_withId_(key, v))) entrySet])) iterator])) next];
          }
          else {
            value = [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
          }
        }
      }
      else {
        
#line 370
        jboolean fieldAlreadyChecked = NO;
        
#line 373
        if (explicitDeclaringClass == nil) {
          while (field != nil &&
#line 375
          !(fieldAlreadyChecked = ([self shouldUnmarshalFieldWithJavaLangReflectField:field] &&
#line 376
          [mapper_ shouldSerializeMemberWithIOSClass:[field getDeclaringClass] withNSString:fieldName]))) {
            field = [reflectionProvider_ getFieldOrNullWithIOSClass:[((IOSClass *) nil_chk([field getDeclaringClass])) getSuperclass] withNSString:
#line 378
            fieldName];
          }
        }
        if (field != nil &&
#line 382
        (fieldAlreadyChecked || ([self shouldUnmarshalFieldWithJavaLangReflectField:field] && [mapper_ shouldSerializeMemberWithIOSClass:
#line 383
        [field getDeclaringClass] withNSString:fieldName]))) {
          
#line 385
          NSString *classAttribute = ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(reader, mapper_);
          if (classAttribute != nil) {
            type = [mapper_ realClassWithNSString:classAttribute];
          }
          else {
            
#line 389
            type = [mapper_ defaultImplementationOfWithIOSClass:[field getType]];
          }
          
#line 393
          value = [self unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:context withId:result withIOSClass:type withJavaLangReflectField:field];
          IOSClass *definedType = [field getType];
          if (![((IOSClass *) nil_chk(definedType)) isPrimitive]) {
            type = definedType;
          }
        }
        else {
          
#line 399
          value = nil;
        }
      }
    }
    else {
      implicitFieldName = [implicitCollectionMapping getFieldName];
      type = [implicitCollectionMapping getItemType];
      if (type == nil) {
        NSString *classAttribute = ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(reader, mapper_);
        type = [mapper_ realClassWithNSString:classAttribute != nil ? classAttribute : originalNodeName];
      }
      value = [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
    }
    
#line 413
    if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value getClass]]) {
      @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Cannot convert type ", [[value getClass] getName], @" to type ",
#line 415
      [type getName]));
    }
    
#line 418
    if (field != nil) {
      [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) writeFieldWithId:result withNSString:fieldName withId:value withIOSClass:[field getDeclaringClass]];
      [seenFields addWithId:new_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_([field getDeclaringClass], fieldName)];
    }
    else
#line 421
    if (type != nil) {
      if (implicitFieldName == nil) {
        
#line 424
        implicitFieldName = [mapper_ getFieldNameForItemTypeAndNameWithIOSClass:[((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType] withIOSClass:
#line 425
        value != nil ? [value getClass] : ComThoughtworksXstreamMapperMapper_Null_class_() withNSString:originalNodeName];
      }
      if (implicitCollectionsForCurrentObject == nil) {
        implicitCollectionsForCurrentObject = new_JavaUtilHashMap_init();
      }
      ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(self, value, implicitCollectionsForCurrentObject, result,
#line 431
      implicitFieldName);
    }
    
#line 434
    [reader moveUp];
  }
  
#line 437
  if (implicitCollectionsForCurrentObject != nil) {
    for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk([implicitCollectionsForCurrentObject entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      
#line 440
      id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast([iter next], @protocol(JavaUtilMap_Entry));
      id value = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
      if ([value isKindOfClass:[ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList class]]) {
        id array = [((ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *) nil_chk(((ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *) check_class_cast(value, [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList class])))) toPhysicalArray];
        [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) writeFieldWithId:result withNSString:(NSString *) check_class_cast([entry_ getKey], [NSString class]) withId:array withIOSClass:nil];
      }
    }
  }
  
#line 449
  return result;
}


#line 452
- (id)unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                       withId:(id)result
                                                                 withIOSClass:(IOSClass *)type
                                                     withJavaLangReflectField:(JavaLangReflectField *)field {
  
#line 454
  return [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type withComThoughtworksXstreamConvertersConverter:
#line 455
  [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) getLocalConverterWithIOSClass:[((JavaLangReflectField *) nil_chk(field)) getDeclaringClass] withNSString:[field getName]]];
}


#line 458
- (jboolean)shouldUnmarshalTransientFields {
  return NO;
}

- (jboolean)shouldUnmarshalFieldWithJavaLangReflectField:(JavaLangReflectField *)field {
  return !(JavaLangReflectModifier_isTransientWithInt_([((JavaLangReflectField *) nil_chk(field)) getModifiers]) && ![self shouldUnmarshalTransientFields]);
}

- (void)handleUnknownFieldWithIOSClass:(IOSClass *)classDefiningField
                          withNSString:(NSString *)fieldName
                          withIOSClass:(IOSClass *)resultType
                          withNSString:(NSString *)originalNodeName {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(self, classDefiningField, fieldName, resultType, originalNodeName);
}


#line 478
- (void)writeValueToImplicitCollectionWithId:(id)value
                             withJavaUtilMap:(id<JavaUtilMap>)implicitCollections
                                      withId:(id)result
                                withNSString:(NSString *)implicitFieldName {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(self, value, implicitCollections, result, implicitFieldName);
}


#line 511
- (IOSClass *)readDeclaringClassWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  return ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader);
}


#line 517
- (id)instantiateNewInstanceWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                        withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 519
  NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"resolves-to"];
  NSString *readResolveValue = attributeName == nil ? nil : [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName];
  id currentObject = [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) currentObject];
  if (currentObject != nil) {
    return currentObject;
  }
  else
#line 524
  if (readResolveValue != nil) {
    return [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) newInstanceWithIOSClass:[mapper_ realClassWithNSString:readResolveValue]];
  }
  else {
    
#line 527
    return [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) newInstanceWithIOSClass:[context getRequiredType]];
  }
}


#line 532
- (void)flushCache {
  [((ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *) nil_chk(serializationMethodInvoker_)) flushCache];
}

- (id)readResolve {
  serializationMethodInvoker_ = new_ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_init();
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:", "AbstractReflectionConverter", NULL, 0x1, NULL, NULL },
    { "canAccessWithIOSClass:", "canAccess", "Z", 0x4, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "doMarshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "doMarshal", "V", 0x4, NULL, NULL },
    { "marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:withId:withJavaLangReflectField:", "marshallField", "V", 0x4, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "doUnmarshalWithId:withComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "doUnmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:withId:withIOSClass:withJavaLangReflectField:", "unmarshallField", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "shouldUnmarshalTransientFields", NULL, "Z", 0x4, NULL, NULL },
    { "shouldUnmarshalFieldWithJavaLangReflectField:", "shouldUnmarshalField", "Z", 0x4, NULL, NULL },
    { "handleUnknownFieldWithIOSClass:withNSString:withIOSClass:withNSString:", "handleUnknownField", "V", 0x2, NULL, NULL },
    { "writeValueToImplicitCollectionWithId:withJavaUtilMap:withId:withNSString:", "writeValueToImplicitCollection", "V", 0x2, NULL, NULL },
    { "readDeclaringClassWithComThoughtworksXstreamIoHierarchicalStreamReader:", "readDeclaringClass", "Ljava.lang.Class;", 0x2, NULL, NULL },
    { "instantiateNewInstanceWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "instantiateNewInstance", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "flushCache", NULL, "V", 0x1, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "reflectionProvider_", NULL, 0x14, "Lcom.thoughtworks.xstream.converters.reflection.ReflectionProvider;", NULL, NULL,  },
    { "mapper_", NULL, 0x14, "Lcom.thoughtworks.xstream.mapper.Mapper;", NULL, NULL,  },
    { "serializationMethodInvoker_", NULL, 0x84, "Lcom.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker;", NULL, NULL,  },
    { "pureJavaReflectionProvider_", NULL, 0x82, "Lcom.thoughtworks.xstream.converters.reflection.ReflectionProvider;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException;", "Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException;", "Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$FieldInfo;", "Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$ArraysList;", "Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList;"};
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter = { 2, "AbstractReflectionConverter", "com.thoughtworks.xstream.converters.reflection", NULL, 0x401, 16, methods, 4, fields, 0, NULL, 5, inner_classes, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;
}

@end


#line 52
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  (void) NSObject_init(self);
  
#line 53
  self->mapper_ = mapper;
  self->reflectionProvider_ = reflectionProvider;
  self->serializationMethodInvoker_ = new_ComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_init();
}


#line 466
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, IOSClass *classDefiningField, NSString *fieldName, IOSClass *resultType, NSString *originalNodeName) {
  
#line 468
  if (classDefiningField == nil) {
    for (IOSClass *cls = resultType; cls != nil; cls = [((IOSClass *) nil_chk(cls)) getSuperclass]) {
      if (![((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) shouldSerializeMemberWithIOSClass:cls withNSString:originalNodeName]) {
        return;
      }
    }
  }
  @throw new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_([((IOSClass *) nil_chk(resultType)) getName], fieldName);
}


#line 478
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id value, id<JavaUtilMap> implicitCollections, id result, NSString *implicitFieldName) {
  
#line 480
  id<JavaUtilCollection> collection = (id<JavaUtilCollection>) check_protocol_cast([((id<JavaUtilMap>) nil_chk(implicitCollections)) getWithId:implicitFieldName], @protocol(JavaUtilCollection));
  if (collection == nil) {
    IOSClass *physicalFieldType = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(self->reflectionProvider_)) getFieldTypeWithId:result withNSString:implicitFieldName withIOSClass:nil];
    if ([((IOSClass *) nil_chk(physicalFieldType)) isArray]) {
      collection = new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(physicalFieldType);
    }
    else {
      
#line 486
      IOSClass *fieldType = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) defaultImplementationOfWithIOSClass:physicalFieldType];
      if (!([JavaUtilCollection_class_() isAssignableFrom:fieldType] || [JavaUtilMap_class_() isAssignableFrom:fieldType])) {
        @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_(JreStrcat("$$$$$$", @"Field ", implicitFieldName, @" of ",
#line 489
        [[nil_chk(result) getClass] getName], @" is configured for an implicit Collection or Map, but field is of type ",
#line 491
        [((IOSClass *) nil_chk(fieldType)) getName]));
      }
      if (self->pureJavaReflectionProvider_ == nil) {
        self->pureJavaReflectionProvider_ = new_ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_init();
      }
      id instance = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(self->pureJavaReflectionProvider_)) newInstanceWithIOSClass:fieldType];
      if ([JavaUtilCollection_class_() isInstance:instance]) {
        collection = (id<JavaUtilCollection>) check_protocol_cast(instance, @protocol(JavaUtilCollection));
      }
      else {
        
#line 500
        id<ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping> implicitCollectionMapping = [self->mapper_ getImplicitCollectionDefForFieldNameWithIOSClass:
#line 501
        [nil_chk(result) getClass] withNSString:implicitFieldName];
        collection = new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(self, (id<JavaUtilMap>) check_protocol_cast(instance, @protocol(JavaUtilMap)), [((id<ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>) nil_chk(implicitCollectionMapping)) getKeyFieldName]);
      }
      [self->reflectionProvider_ writeFieldWithId:result withNSString:implicitFieldName withId:instance withIOSClass:nil];
    }
    (void) [implicitCollections putWithId:implicitFieldName withId:collection];
  }
  [((id<JavaUtilCollection>) nil_chk(collection)) addWithId:value];
}


#line 511
IOSClass *ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader) {
  NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) aliasForSystemAttributeWithNSString:@"defined-in"];
  NSString *definedIn = attributeName == nil ? nil : [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName];
  return definedIn == nil ? nil : [self->mapper_ realClassWithNSString:definedIn];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter)


#line 541
@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException


#line 542
- (instancetype)initWithNSString:(NSString *)msg {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "DuplicateFieldException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException = { 2, "DuplicateFieldException", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException;
}

@end


#line 542
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException *self, NSString *msg) {
  (void) ComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, JreStrcat("$$", @"Duplicate field ", msg));
  [self addWithNSString:@"field" withNSString:msg];
}


#line 542
ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(NSString *msg) {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(self, msg);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException)


#line 548
@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException


#line 549
- (instancetype)initWithNSString:(NSString *)type
                    withNSString:(NSString *)field {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(self, type, field);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "UnknownFieldException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException = { 2, "UnknownFieldException", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException;
}

@end


#line 549
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException *self, NSString *type, NSString *field) {
  (void) ComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, JreStrcat("$$C$", @"No such field ", type, '.', field));
  [self addWithNSString:@"field" withNSString:field];
}


#line 549
ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(NSString *type, NSString *field) {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(self, type, field);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException)


#line 555
@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo


#line 561
- (instancetype)initWithNSString:(NSString *)fieldName
                    withIOSClass:(IOSClass *)type
                    withIOSClass:(IOSClass *)definedIn
                          withId:(id)value {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(self, fieldName, type, definedIn, value);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withIOSClass:withIOSClass:withId:", "FieldInfo", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fieldName_", NULL, 0x10, "Ljava.lang.String;", NULL, NULL,  },
    { "type_", NULL, 0x10, "Ljava.lang.Class;", NULL, NULL,  },
    { "definedIn_", NULL, 0x10, "Ljava.lang.Class;", NULL, NULL,  },
    { "value_", NULL, 0x10, "Ljava.lang.Object;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo = { 2, "FieldInfo", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0xa, 1, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo;
}

@end


#line 561
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *self, NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value) {
  (void) NSObject_init(self);
  
#line 562
  self->fieldName_ = fieldName;
  self->type_ = type;
  self->definedIn_ = definedIn;
  self->value_ = value;
}


#line 561
ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value) {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(self, fieldName, type, definedIn, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo)

@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList


#line 572
- (instancetype)initWithIOSClass:(IOSClass *)physicalFieldType {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(self, physicalFieldType);
  return self;
}


#line 576
- (id)toPhysicalArray {
  IOSObjectArray *objects = [self toArray];
  id array = JavaLangReflectArray_newInstanceWithIOSClass_withInt_([((IOSClass *) nil_chk(physicalFieldType_)) getComponentType], ((IOSObjectArray *) nil_chk(objects))->size_);
  if ([((IOSClass *) nil_chk([physicalFieldType_ getComponentType])) isPrimitive]) {
    for (jint i = 0; i < objects->size_; ++i) {
      JavaLangReflectArray_setWithId_withInt_withId_(array, i, JavaLangReflectArray_getWithId_withInt_(objects, i));
    }
  }
  else {
    
#line 584
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects, 0, array, 0, objects->size_);
  }
  return array;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:", "ArraysList", NULL, 0x0, NULL, NULL },
    { "toPhysicalArray", NULL, "Ljava.lang.Object;", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "physicalFieldType_", NULL, 0x10, "Ljava.lang.Class;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList = { 2, "ArraysList", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0xa, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList;
}

@end


#line 572
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *self, IOSClass *physicalFieldType) {
  (void) JavaUtilArrayList_init(self);
  
#line 573
  self->physicalFieldType_ = physicalFieldType;
}


#line 572
ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(IOSClass *physicalFieldType) {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(self, physicalFieldType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList)


#line 590
@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList


#line 596
- (instancetype)initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                              withJavaUtilMap:(id<JavaUtilMap>)map
                                                                                 withNSString:(NSString *)keyFieldName {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(self, outer$, map, keyFieldName);
  return self;
}


#line 602
- (jboolean)addWithId:(id)object {
  if (object == nil) {
    jboolean containsNull = ![((id<JavaUtilMap>) nil_chk(map_)) containsKeyWithId:nil];
    (void) [map_ putWithId:nil withId:nil];
    return containsNull;
  }
  IOSClass *itemType = [nil_chk(object) getClass];
  
#line 610
  if (keyFieldName_ != nil) {
    JavaLangReflectField *field = (JavaLangReflectField *) check_class_cast([((id<JavaUtilMap>) nil_chk(fieldCache_)) getWithId:itemType], [JavaLangReflectField class]);
    if (field == nil) {
      field = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:itemType withNSString:keyFieldName_];
      (void) [fieldCache_ putWithId:itemType withId:field];
    }
    if (field != nil) {
      @try {
        id key = [field getWithId:object];
        return [((id<JavaUtilMap>) nil_chk(map_)) putWithId:key withId:object] == nil;
      }
      @catch (
#line 620
      JavaLangIllegalArgumentException *e) {
        @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@C$", @"Could not get field ", [field getClass], '.',
#line 622
        [field getName]), e);
      }
      @catch (
#line 623
      JavaLangIllegalAccessException *e) {
        @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@C$", @"Could not get field ", [field getClass], '.',
#line 625
        [field getName]), e);
      }
    }
  }
  else
#line 628
  if ([JavaUtilMap_Entry_class_() isInstance:object]) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast(object, @protocol(JavaUtilMap_Entry));
    return [((id<JavaUtilMap>) nil_chk(map_)) putWithId:[entry_ getKey] withId:[entry_ getValue]] == nil;
  }
  
#line 633
  @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Element of type ", [[object getClass] getName], @" is not defined as entry for map of type ",
#line 634
  [[((id<JavaUtilMap>) nil_chk(map_)) getClass] getName]));
}


#line 638
- (id)getWithInt:(jint)index {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 643
- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:withJavaUtilMap:withNSString:", "MappingList", NULL, 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter;", NULL, NULL,  },
    { "map_", NULL, 0x12, "Ljava.util.Map;", NULL, NULL,  },
    { "keyFieldName_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "fieldCache_", NULL, 0x12, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList = { 2, "MappingList", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0x2, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList;
}

@end


#line 596
void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *self, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName) {
  self->this$0_ = outer$;
  (void) JavaUtilAbstractList_init(self);
  self->fieldCache_ = new_JavaUtilHashMap_init();
  
#line 597
  self->map_ = map;
  self->keyFieldName_ = keyFieldName;
}


#line 596
ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName) {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(self, outer$, map, keyFieldName);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList)

@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1


#line 97
- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value {
  if (![((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:fieldName]) {
    return;
  }
  if (![((id<JavaUtilMap>) nil_chk(val$defaultFieldDefinition_)) containsKeyWithId:fieldName]) {
    IOSClass *lookupType = [nil_chk(val$source_) getClass];
    
#line 104
    if (definedIn != [val$source_ getClass] &&
#line 105
    ![this$0_->mapper_ shouldSerializeMemberWithIOSClass:lookupType withNSString:fieldName]) {
      lookupType = definedIn;
    }
    (void) [val$defaultFieldDefinition_ putWithId:fieldName withId:[((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:lookupType withNSString:fieldName]];
  }
  
#line 111
  id<ComThoughtworksXstreamConvertersSingleValueConverter> converter = [this$0_->mapper_ getConverterFromItemTypeWithNSString:
#line 112
  fieldName withIOSClass:type withIOSClass:definedIn];
  if (converter != nil) {
    NSString *attribute = [this$0_->mapper_ aliasForAttributeWithNSString:[this$0_->mapper_ serializedMemberWithIOSClass:definedIn withNSString:
#line 115
    fieldName]];
    if (value != nil) {
      if ([((id<JavaUtilSet>) nil_chk(writtenAttributes_)) containsWithId:fieldName]) {
        @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Cannot write field with name '", fieldName, @"' twice as attribute for object of type ",
#line 119
        [[nil_chk(val$source_) getClass] getName]));
      }
      NSString *str = [converter toStringWithId:value];
      if (str != nil) {
        [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:attribute withNSString:str];
      }
    }
    [((id<JavaUtilSet>) nil_chk(writtenAttributes_)) addWithId:fieldName];
  }
  else {
    
#line 128
    [((id<JavaUtilList>) nil_chk(val$fields_)) addWithId:new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(fieldName, type, definedIn, value)];
  }
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                              withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                       withId:(id)capture$1
                                         withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$2
                                                                             withJavaUtilList:(id<JavaUtilList>)capture$3 {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(self, outer$, capture$0, capture$1, capture$2, capture$3);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "visitWithNSString:withIOSClass:withIOSClass:withId:", "visit", "V", 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:withJavaUtilMap:withId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withJavaUtilList:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter;", NULL, NULL,  },
    { "writtenAttributes_", NULL, 0x10, "Ljava.util.Set;", NULL, NULL,  },
    { "val$defaultFieldDefinition_", NULL, 0x1012, "Ljava.util.Map;", NULL, NULL,  },
    { "val$source_", NULL, 0x1012, "Ljava.lang.Object;", NULL, NULL,  },
    { "val$writer_", NULL, 0x1012, "Lcom.thoughtworks.xstream.io.HierarchicalStreamWriter;", NULL, NULL,  },
    { "val$fields_", NULL, 0x1012, "Ljava.util.List;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter", "doMarshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 = { 2, "", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0x8008, 2, methods, 6, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1;
}

@end

void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 *self, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3) {
  self->this$0_ = outer$;
  self->val$defaultFieldDefinition_ = capture$0;
  self->val$source_ = capture$1;
  self->val$writer_ = capture$2;
  self->val$fields_ = capture$3;
  (void) NSObject_init(self);
  self->writtenAttributes_ = new_JavaUtilHashSet_init();
}

ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3) {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1 alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(self, outer$, capture$0, capture$1, capture$2, capture$3);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$1)

@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2


#line 196
- (void)writeFieldWithNSString:(NSString *)fieldName
                  withNSString:(NSString *)aliasName
                  withIOSClass:(IOSClass *)fieldType
                  withIOSClass:(IOSClass *)definedIn
                        withId:(id)newObj {
  
#line 198
  IOSClass *actualType = newObj != nil ? [newObj getClass] : fieldType;
  ComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(val$writer_, aliasName != nil ? aliasName :
#line 200
  [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) serializedMemberWithIOSClass:[nil_chk(val$source_) getClass] withNSString:fieldName], actualType);
  
#line 202
  if (newObj != nil) {
    IOSClass *defaultType = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) defaultImplementationOfWithIOSClass:fieldType];
    if (![actualType isEqual:defaultType]) {
      NSString *serializedClassName = [this$0_->mapper_ serializedClassWithIOSClass:actualType];
      if (![((NSString *) nil_chk(serializedClassName)) isEqual:[this$0_->mapper_ serializedClassWithIOSClass:defaultType]]) {
        NSString *attributeName = [this$0_->mapper_ aliasForSystemAttributeWithNSString:@"class"];
        if (attributeName != nil) {
          [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:attributeName withNSString:serializedClassName];
        }
      }
    }
    
#line 214
    JavaLangReflectField *defaultField = (JavaLangReflectField *) check_class_cast([((id<JavaUtilMap>) nil_chk(val$defaultFieldDefinition_)) getWithId:fieldName], [JavaLangReflectField class]);
    if ([((JavaLangReflectField *) nil_chk(defaultField)) getDeclaringClass] != definedIn) {
      NSString *attributeName = [this$0_->mapper_ aliasForSystemAttributeWithNSString:@"defined-in"];
      if (attributeName != nil) {
        [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:attributeName withNSString:[this$0_->mapper_ serializedClassWithIOSClass:definedIn]];
      }
    }
    
#line 222
    JavaLangReflectField *field = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:definedIn withNSString:fieldName];
    [this$0_ marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:val$context_ withId:newObj withJavaLangReflectField:field];
  }
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) endNode];
}


#line 228
- (void)writeItemWithId:(id)item
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  if (item == nil) {
    NSString *name = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) serializedClassWithIOSClass:nil];
    ComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(writer, name, ComThoughtworksXstreamMapperMapper_Null_class_());
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) endNode];
  }
  else {
    
#line 234
    NSString *name = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) serializedClassWithIOSClass:[item getClass]];
    ComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(writer, name, [item getClass]);
    [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:item];
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) endNode];
  }
}

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                             withJavaUtilList:(id<JavaUtilList>)capture$0
                                                                                       withId:(id)capture$1
                                       withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)capture$2
                                         withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$3
                                                                              withJavaUtilMap:(id<JavaUtilMap>)capture$4 {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withComThoughtworksXstreamConvertersMarshallingContext_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "writeFieldWithNSString:withNSString:withIOSClass:withIOSClass:withId:", "writeField", "V", 0x0, NULL, NULL },
    { "writeItemWithId:withComThoughtworksXstreamConvertersMarshallingContext:withComThoughtworksXstreamIoHierarchicalStreamWriter:", "writeItem", "V", 0x0, NULL, NULL },
    { "initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:withJavaUtilList:withId:withComThoughtworksXstreamConvertersMarshallingContext:withComThoughtworksXstreamIoHierarchicalStreamWriter:withJavaUtilMap:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter;", NULL, NULL,  },
    { "val$fields_", NULL, 0x1012, "Ljava.util.List;", NULL, NULL,  },
    { "val$source_", NULL, 0x1012, "Ljava.lang.Object;", NULL, NULL,  },
    { "val$context_", NULL, 0x1012, "Lcom.thoughtworks.xstream.converters.MarshallingContext;", NULL, NULL,  },
    { "val$writer_", NULL, 0x1012, "Lcom.thoughtworks.xstream.io.HierarchicalStreamWriter;", NULL, NULL,  },
    { "val$defaultFieldDefinition_", NULL, 0x1012, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter", "doMarshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 = { 2, "", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0x8008, 3, methods, 6, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2;
}

@end

void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withComThoughtworksXstreamConvertersMarshallingContext_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 *self, ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4) {
  self->this$0_ = outer$;
  self->val$fields_ = capture$0;
  self->val$source_ = capture$1;
  self->val$context_ = capture$2;
  self->val$writer_ = capture$3;
  self->val$defaultFieldDefinition_ = capture$4;
  (void) NSObject_init(self);
  {
    
#line 135
    for (id<JavaUtilIterator> fieldIter = [((id<JavaUtilList>) nil_chk(self->val$fields_)) iterator]; [((id<JavaUtilIterator>) nil_chk(fieldIter)) hasNext]; ) {
      ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *info = (ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *) check_class_cast([fieldIter next], [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo class]);
      if (((ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *) nil_chk(info))->value_ != nil) {
        id<ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping> mapping = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(outer$->mapper_)) getImplicitCollectionDefForFieldNameWithIOSClass:
#line 139
        [nil_chk(self->val$source_) getClass] withNSString:info->fieldName_];
        if (mapping != nil) {
          if ([ComThoughtworksXstreamCoreReferencingMarshallingContext_class_() isInstance:self->val$context_]) {
            if (info->value_ != JavaUtilCollections_get_EMPTY_LIST_() && info->value_ != JavaUtilCollections_get_EMPTY_SET_() &&
#line 143
            info->value_ != JavaUtilCollections_get_EMPTY_MAP_()) {
              id<ComThoughtworksXstreamCoreReferencingMarshallingContext> refContext = (id<ComThoughtworksXstreamCoreReferencingMarshallingContext>) check_protocol_cast(self->val$context_, @protocol(ComThoughtworksXstreamCoreReferencingMarshallingContext));
              [((id<ComThoughtworksXstreamCoreReferencingMarshallingContext>) nil_chk(refContext)) registerImplicitWithId:info->value_];
            }
          }
          jboolean isCollection = [JavaUtilCollection_class_() isInstance:info->value_];
          jboolean isMap = [JavaUtilMap_class_() isInstance:info->value_];
          jboolean isEntry = isMap && [mapping getKeyFieldName] == nil;
          jboolean isArray = [[info->value_ getClass] isArray];
          
#line 153
          id<JavaUtilIterator> iter = nil;
          if (isArray) {
            iter = new_ComThoughtworksXstreamCoreUtilArrayIterator_initWithId_(info->value_);
          }
          else
#line 156
          if (isCollection) {
            iter = [((id<JavaUtilCollection>) check_protocol_cast(info->value_, @protocol(JavaUtilCollection))) iterator];
          }
          else
#line 158
          if (isEntry) {
            iter = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) check_protocol_cast(info->value_, @protocol(JavaUtilMap))) entrySet])) iterator];
          }
          else {
            
#line 161
            iter = [((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) check_protocol_cast(info->value_, @protocol(JavaUtilMap))) values])) iterator];
          }
          for (id obj = [((id<JavaUtilIterator>) nil_chk(iter)) next]; [iter hasNext]; ) {
            NSString *itemName;
            IOSClass *itemType;
            if (obj == nil) {
              itemType = NSObject_class_();
              itemName = [outer$->mapper_ serializedClassWithIOSClass:nil];
            }
            else
#line 169
            if (isEntry) {
              NSString *entryName = [mapping getItemFieldName] != nil ? [mapping getItemFieldName] :
#line 171
              [outer$->mapper_ serializedClassWithIOSClass:JavaUtilMap_Entry_class_()];
              id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
              ComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(self->val$writer_, entryName,
#line 174
              [entry_ getClass]);
              [self writeItemWithId:[entry_ getKey] withComThoughtworksXstreamConvertersMarshallingContext:self->val$context_ withComThoughtworksXstreamIoHierarchicalStreamWriter:self->val$writer_];
              [self writeItemWithId:[entry_ getValue] withComThoughtworksXstreamConvertersMarshallingContext:self->val$context_ withComThoughtworksXstreamIoHierarchicalStreamWriter:self->val$writer_];
              [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(self->val$writer_)) endNode];
              continue;
            }
            else
#line 179
            if ([mapping getItemFieldName] != nil) {
              itemType = [mapping getItemType];
              itemName = [mapping getItemFieldName];
            }
            else {
              
#line 183
              itemType = [obj getClass];
              itemName = [outer$->mapper_ serializedClassWithIOSClass:itemType];
            }
            [self writeFieldWithNSString:info->fieldName_ withNSString:itemName withIOSClass:itemType withIOSClass:info->definedIn_ withId:obj];
          }
        }
        else {
          
#line 189
          [self writeFieldWithNSString:info->fieldName_ withNSString:nil withIOSClass:info->type_ withIOSClass:info->definedIn_ withId:info->value_];
        }
      }
    }
  }
}

ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withComThoughtworksXstreamConvertersMarshallingContext_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4) {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2 alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2_initWithComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withComThoughtworksXstreamConvertersMarshallingContext_withComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$2)

@implementation ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3


#line 260
- (jboolean)addWithId:(id)e {
  if (![super addWithId:e]) {
    @throw new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_([((ComThoughtworksXstreamCoreUtilFastField *) nil_chk(((ComThoughtworksXstreamCoreUtilFastField *) check_class_cast(e, [ComThoughtworksXstreamCoreUtilFastField class])))) getName]);
  }
  return YES;
}

- (instancetype)init {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3_init(self);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "Z", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter", "doUnmarshalWithId:withComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 = { 2, "", "com.thoughtworks.xstream.converters.reflection", "AbstractReflectionConverter", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3;
}

@end

void ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3_init(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 *self) {
  (void) JavaUtilHashSet_init(self);
}

ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 *new_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3_init() {
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 *self = [ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3 alloc];
  ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_$3)
