//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/reflection/PureJavaReflectionProvider.java
//

#ifndef _ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_H_
#define _ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_H_

@class ComThoughtworksXstreamConvertersReflectionFieldDictionary;
@class IOSClass;
@class JavaIoByteArrayInputStream;
@class JavaIoObjectStreamClass;
@class JavaLangReflectField;
@protocol ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor;
@protocol JavaUtilMap;

#import "JreEmulation.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "java/io/ObjectInputStream.h"

@interface ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider : NSObject < ComThoughtworksXstreamConvertersReflectionReflectionProvider > {
 @public
  id<JavaUtilMap> serializedDataCache_;
  ComThoughtworksXstreamConvertersReflectionFieldDictionary *fieldDictionary_;
}

- (instancetype)init;

- (instancetype)initWithComThoughtworksXstreamConvertersReflectionFieldDictionary:(ComThoughtworksXstreamConvertersReflectionFieldDictionary *)fieldDictionary;

- (id)newInstanceWithIOSClass:(IOSClass *)type OBJC_METHOD_FAMILY_NONE;

- (id)instantiateUsingSerializationWithIOSClass:(IOSClass *)type;

- (void)visitSerializableFieldsWithId:(id)object
withComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor>)visitor;

- (void)writeFieldWithId:(id)object
            withNSString:(NSString *)fieldName
                  withId:(id)value
            withIOSClass:(IOSClass *)definedIn;

- (IOSClass *)getFieldTypeWithId:(id)object
                    withNSString:(NSString *)fieldName
                    withIOSClass:(IOSClass *)definedIn;

- (jboolean)fieldDefinedInClassWithNSString:(NSString *)fieldName
                               withIOSClass:(IOSClass *)type;

- (jboolean)fieldModifiersSupportedWithJavaLangReflectField:(JavaLangReflectField *)field;

- (void)validateFieldAccessWithJavaLangReflectField:(JavaLangReflectField *)field;

- (JavaLangReflectField *)getFieldWithIOSClass:(IOSClass *)definedIn
                                  withNSString:(NSString *)fieldName;

- (JavaLangReflectField *)getFieldOrNullWithIOSClass:(IOSClass *)definedIn
                                        withNSString:(NSString *)fieldName;

- (void)setFieldDictionaryWithComThoughtworksXstreamConvertersReflectionFieldDictionary:(ComThoughtworksXstreamConvertersReflectionFieldDictionary *)dictionary;

- (id)readResolve;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (void)copyAllFieldsTo:(ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider *)other;

@end

__attribute__((always_inline)) inline void ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_init() {}

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider, serializedDataCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider, fieldDictionary_, ComThoughtworksXstreamConvertersReflectionFieldDictionary *)

@interface ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_$1 : JavaIoObjectInputStream {
 @public
  IOSClass *val$type_;
}

- (IOSClass *)resolveClassWithJavaIoObjectStreamClass:(JavaIoObjectStreamClass *)desc;

- (instancetype)initWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)arg$0
                                      withIOSClass:(IOSClass *)capture$0;

@end

__attribute__((always_inline)) inline void ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_$1_init() {}

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_$1, val$type_, IOSClass *)

#endif // _ComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_H_
