//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/PropertiesConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/PropertiesConverter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/PropertiesConverter.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "java/lang/reflect/Field.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"

@interface ComThoughtworksXstreamConvertersCollectionsPropertiesConverter () {
 @public
  jboolean sort_;
}

@end

static JavaLangReflectField *ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_defaultsField_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersCollectionsPropertiesConverter, defaultsField_, JavaLangReflectField *)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersCollectionsPropertiesConverter)


#line 45
@implementation ComThoughtworksXstreamConvertersCollectionsPropertiesConverter


#line 50
- (instancetype)init {
  ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_init(self);
  return self;
}


#line 54
- (instancetype)initWithBoolean:(jboolean)sort {
  ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_initWithBoolean_(self, sort);
  return self;
}


#line 58
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return JavaUtilProperties_class_() == type;
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  JavaUtilProperties *properties = (JavaUtilProperties *) check_class_cast(source, [JavaUtilProperties class]);
  id<JavaUtilMap> map = sort_ ? new_JavaUtilTreeMap_initWithJavaUtilMap_(properties) : properties;
  for (id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([map entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast([iterator next], @protocol(JavaUtilMap_Entry));
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"property"];
    [writer addAttributeWithNSString:@"name" withNSString:[nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]) description]];
    [writer addAttributeWithNSString:@"value" withNSString:[nil_chk([entry_ getValue]) description]];
    [writer endNode];
  }
  if (ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_defaultsField_ != nil) {
    JavaUtilProperties *defaults = (JavaUtilProperties *) check_class_cast(ComThoughtworksXstreamCoreUtilFields_readWithJavaLangReflectField_withId_(ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_defaultsField_, properties), [JavaUtilProperties class]);
    if (defaults != nil) {
      [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"defaults"];
      [self marshalWithId:defaults withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
      [writer endNode];
    }
  }
}


#line 82
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  JavaUtilProperties *properties = new_JavaUtilProperties_init();
  JavaUtilProperties *defaults = nil;
  while ([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    if ([((NSString *) nil_chk([reader getNodeName])) isEqual:@"defaults"]) {
      defaults = (JavaUtilProperties *) check_class_cast([self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context], [JavaUtilProperties class]);
    }
    else {
      
#line 90
      NSString *name = [reader getAttributeWithNSString:@"name"];
      NSString *value = [reader getAttributeWithNSString:@"value"];
      (void) [properties setPropertyWithNSString:name withNSString:value];
    }
    [reader moveUp];
  }
  if (defaults == nil) {
    return properties;
  }
  else {
    
#line 99
    JavaUtilProperties *propertiesWithDefaults = new_JavaUtilProperties_initWithJavaUtilProperties_(defaults);
    [propertiesWithDefaults putAllWithJavaUtilMap:properties];
    return propertiesWithDefaults;
  }
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersCollectionsPropertiesConverter class]) {
    ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_defaultsField_ = ComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(
#line 47
    JavaUtilProperties_class_(), JavaUtilProperties_class_(), NO);
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersCollectionsPropertiesConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PropertiesConverter", NULL, 0x1, NULL, NULL },
    { "initWithBoolean:", "PropertiesConverter", NULL, 0x1, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "defaultsField_", NULL, 0x1a, "Ljava.lang.reflect.Field;", &ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_defaultsField_, NULL,  },
    { "sort_", NULL, 0x12, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsPropertiesConverter = { 2, "PropertiesConverter", "com.thoughtworks.xstream.converters.collections", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersCollectionsPropertiesConverter;
}

@end


#line 50
void ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_init(ComThoughtworksXstreamConvertersCollectionsPropertiesConverter *self) {
  (void) ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_initWithBoolean_(self, NO);
}


#line 50
ComThoughtworksXstreamConvertersCollectionsPropertiesConverter *new_ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_init() {
  ComThoughtworksXstreamConvertersCollectionsPropertiesConverter *self = [ComThoughtworksXstreamConvertersCollectionsPropertiesConverter alloc];
  ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_init(self);
  return self;
}


#line 54
void ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_initWithBoolean_(ComThoughtworksXstreamConvertersCollectionsPropertiesConverter *self, jboolean sort) {
  (void) NSObject_init(self);
  
#line 55
  self->sort_ = sort;
}


#line 54
ComThoughtworksXstreamConvertersCollectionsPropertiesConverter *new_ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_initWithBoolean_(jboolean sort) {
  ComThoughtworksXstreamConvertersCollectionsPropertiesConverter *self = [ComThoughtworksXstreamConvertersCollectionsPropertiesConverter alloc];
  ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_initWithBoolean_(self, sort);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsPropertiesConverter)
