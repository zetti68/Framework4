//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/collections/SingletonMapConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/collections/SingletonMapConverter.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/SingletonMapConverter.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/Boolean.h"
#include "java/util/Collections.h"
#include "java/util/Map.h"

BOOL ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_initialized = NO;


#line 30
@implementation ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter

IOSClass * ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_MAP_;


#line 39
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  return
#line 40
  [super initWithComThoughtworksXstreamMapperMapper:mapper];
}


#line 43
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  
#line 44
  return ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_MAP_ == type;
}


#line 47
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 48
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveDown];
  [reader moveDown];
  id key = [self readItemWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withId:nil];
  [reader moveUp];
  
#line 53
  [reader moveDown];
  id value = [self readItemWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withId:nil];
  [reader moveUp];
  [reader moveUp];
  
#line 58
  return [JavaUtilCollections singletonMapWithId:key withId:value];
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter class]) {
    ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_MAP_ =
#line 32
    [((id<JavaUtilMap>) nil_chk([JavaUtilCollections singletonMapWithId:JavaLangBoolean_get_TRUE__() withId:nil])) getClass];
    ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "SingletonMapConverter", NULL, 0x1, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAP_", NULL, 0x1a, "Ljava.lang.Class;", &ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_MAP_,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter = { "SingletonMapConverter", "com.thoughtworks.xstream.converters.collections", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter;
}

@end
