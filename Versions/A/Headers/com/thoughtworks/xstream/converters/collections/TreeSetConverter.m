//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/TreeSetConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/TreeSetConverter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeSetConverter.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/core/util/PresortedSet.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/reflect/Field.h"
#include "java/util/AbstractList.h"
#include "java/util/Comparator.h"
#include "java/util/Map.h"
#include "java/util/SortedMap.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"

@interface ComThoughtworksXstreamConvertersCollectionsTreeSetConverter () {
 @public
  ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *treeMapConverter_;
}

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter, treeMapConverter_, ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *)

static JavaLangReflectField *ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter, sortedMapField_, JavaLangReflectField *)

__attribute__((unused)) static id ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self);

@interface ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 : ComThoughtworksXstreamConvertersCollectionsTreeMapConverter {
 @public
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *this$0_;
}

- (void)populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
               withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilMap:(id<JavaUtilMap>)map
                                                        withJavaUtilMap:(id<JavaUtilMap>)target;

- (void)putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                          withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                   withJavaUtilMap:(id<JavaUtilMap>)map
                                                                   withJavaUtilMap:(id<JavaUtilMap>)target;

- (instancetype)initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)outer$
                                             withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1, this$0_, ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 *self, ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> arg$0);

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1)

@interface ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 : JavaUtilAbstractList {
 @public
  id<JavaUtilMap> val$target_;
}

- (jboolean)addWithId:(id)object;

- (id)getWithInt:(jint)location;

- (jint)size;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)capture$0;


@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1, val$target_, id<JavaUtilMap>)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1_initWithJavaUtilMap_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 *self, id<JavaUtilMap> capture$0);

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter)


#line 42
@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter


#line 47
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaUtilSortedSet> sortedSet = (id<JavaUtilSortedSet>) check_protocol_cast(source, @protocol(JavaUtilSortedSet));
  [((ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) marshalComparatorWithJavaUtilComparator:[((id<JavaUtilSortedSet>) nil_chk(sortedSet)) comparator] withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
  [super marshalWithId:source withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
}


#line 58
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  JavaUtilTreeSet *result = nil;
  JavaUtilTreeMap *treeMap;
  id<JavaUtilComparator> unmarshalledComparator = [((ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) unmarshalComparatorWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:nil];
  jboolean inFirstElement = [unmarshalledComparator isKindOfClass:[ComThoughtworksXstreamMapperMapper_Null class]];
  id<JavaUtilComparator> comparator = inFirstElement ? nil : unmarshalledComparator;
  if (ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_ != nil) {
    JavaUtilTreeSet *possibleResult = comparator == nil ? new_JavaUtilTreeSet_init() : new_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator);
    id backingMap = nil;
    @try {
      backingMap = [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_ getWithId:possibleResult];
    }
    @catch (
#line 69
    JavaLangIllegalAccessException *e) {
      @throw new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Cannot get backing map of TreeSet", e);
    }
    if ([backingMap isKindOfClass:[JavaUtilTreeMap class]]) {
      treeMap = (JavaUtilTreeMap *) check_class_cast(backingMap, [JavaUtilTreeMap class]);
      result = possibleResult;
    }
    else {
      
#line 76
      treeMap = nil;
    }
  }
  else {
    
#line 79
    treeMap = nil;
  }
  if (treeMap == nil) {
    ComThoughtworksXstreamCoreUtilPresortedSet *set = new_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(comparator);
    result = comparator == nil ? new_JavaUtilTreeSet_init() : new_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator);
    if (inFirstElement) {
      
#line 86
      [self addCurrentElementToCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
      [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveUp];
    }
    [self populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
    if ([set size] > 0) {
      [result addAllWithJavaUtilCollection:set];
    }
  }
  else {
    
#line 94
    [treeMapConverter_ populateTreeMapWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:treeMap withJavaUtilComparator:unmarshalledComparator];
  }
  return result;
}


#line 99
- (id)readResolve {
  return ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(self);
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter class]) {
    ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_ =
#line 45
    ComThoughtworksXstreamCoreJVM_hasOptimizedTreeSetAddAll() ? ComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(JavaUtilTreeSet_class_(), JavaUtilSortedMap_class_(), NO) : nil;
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "TreeSetConverter", NULL, 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "treeMapConverter_", NULL, 0x82, "Lcom.thoughtworks.xstream.converters.collections.TreeMapConverter;", NULL, NULL,  },
    { "sortedMapField_", NULL, 0x1a, "Ljava.lang.reflect.Field;", &ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter = { 2, "TreeSetConverter", "com.thoughtworks.xstream.converters.collections", NULL, 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter;
}

@end


#line 47
void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper) {
  (void) ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, JavaUtilTreeSet_class_());
  (void) ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(self);
}


#line 47
ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self = [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter alloc];
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}


#line 99
id ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self) {
  self->treeMapConverter_ = new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(self, [self mapper]);
  
#line 125
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter)

@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1


#line 102
- (void)populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
               withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilMap:(id<JavaUtilMap>)map
                                                        withJavaUtilMap:(id<JavaUtilMap>)target {
  
#line 104
  [this$0_ populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1_initWithJavaUtilMap_(target)];
}


#line 119
- (void)putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                          withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                   withJavaUtilMap:(id<JavaUtilMap>)map
                                                                   withJavaUtilMap:(id<JavaUtilMap>)target {
  
#line 121
  id key = [self readItemWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withId:map];
  (void) [((id<JavaUtilMap>) nil_chk(target)) putWithId:key withId:key];
}

- (instancetype)initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)outer$
                                             withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)arg$0 {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(self, outer$, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:", "populateMap", "V", 0x4, NULL, NULL },
    { "putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:", "putCurrentEntryIntoMap", "V", 0x4, NULL, NULL },
    { "initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:withComThoughtworksXstreamMapperMapper:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.converters.collections.TreeSetConverter;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComThoughtworksXstreamConvertersCollectionsTreeSetConverter", "readResolve" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 = { 2, "", "com.thoughtworks.xstream.converters.collections", "TreeSetConverter", 0x8008, 3, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1;
}

@end

void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 *self, ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> arg$0) {
  self->this$0_ = outer$;
  (void) ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithComThoughtworksXstreamMapperMapper_(self, arg$0);
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> arg$0) {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 *self = [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 alloc];
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(self, outer$, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1)

@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1


#line 105
- (jboolean)addWithId:(id)object {
  return [((id<JavaUtilMap>) nil_chk(val$target_)) putWithId:object withId:object] != nil;
}

- (id)getWithInt:(jint)location {
  return nil;
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(val$target_)) size];
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)capture$0 {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1_initWithJavaUtilMap_(self, capture$0);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "Z", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "initWithJavaUtilMap:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$target_", NULL, 0x1012, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1", "populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 = { 2, "", "com.thoughtworks.xstream.converters.collections", "TreeSetConverter$", 0x8008, 4, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1;
}

@end

void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1_initWithJavaUtilMap_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 *self, id<JavaUtilMap> capture$0) {
  self->val$target_ = capture$0;
  (void) JavaUtilAbstractList_init(self);
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 *self = [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 alloc];
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1_initWithJavaUtilMap_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1)
