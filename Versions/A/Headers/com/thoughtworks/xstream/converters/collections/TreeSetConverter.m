//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/collections/TreeSetConverter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/converters/collections/TreeSetConverter.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeSetConverter.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/core/util/PresortedSet.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/reflect/Field.h"
#include "java/util/Comparator.h"
#include "java/util/Map.h"
#include "java/util/SortedMap.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"

BOOL ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initialized = NO;


#line 42
@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter

JavaLangReflectField * ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_;


#line 47
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  if (self =
#line 48
  [super initWithComThoughtworksXstreamMapperMapper:mapper withIOSClass:[IOSClass classWithClass:[JavaUtilTreeSet class]]]) {
    
#line 49
    (void) [self readResolve];
  }
  return self;
}


#line 52
- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  
#line 53
  id<JavaUtilSortedSet> sortedSet = (id<JavaUtilSortedSet>) check_protocol_cast(source, @protocol(JavaUtilSortedSet));
  [((ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) marshalComparatorWithJavaUtilComparator:[((id<JavaUtilSortedSet>) nil_chk(sortedSet)) comparator] withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
  [super marshalWithId:source withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
}


#line 58
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 59
  JavaUtilTreeSet *result = nil;
  JavaUtilTreeMap *treeMap;
  id<JavaUtilComparator> unmarshalledComparator = [((ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) unmarshalComparatorWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:nil];
  jboolean inFirstElement = [(id) unmarshalledComparator isKindOfClass:[ComThoughtworksXstreamMapperMapper_Null class]];
  id<JavaUtilComparator> comparator = inFirstElement ? nil : unmarshalledComparator;
  if (ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_ != nil) {
    JavaUtilTreeSet *possibleResult = comparator == nil ? [[JavaUtilTreeSet alloc] init] : [[JavaUtilTreeSet alloc] initWithJavaUtilComparator:comparator];
    id backingMap = nil;
    @try {
      backingMap = [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_ getWithId:possibleResult];
    }
    @catch (
#line 69
    JavaLangIllegalAccessException *e) {
      @throw [[ComThoughtworksXstreamConvertersConversionException alloc] initWithNSString:@"Cannot get backing map of TreeSet" withJavaLangThrowable:e];
    }
    if ([backingMap isKindOfClass:[JavaUtilTreeMap class]]) {
      treeMap = (JavaUtilTreeMap *) check_class_cast(backingMap, [JavaUtilTreeMap class]);
      result = possibleResult;
    }
    else {
      
#line 76
      treeMap = nil;
    }
  }
  else {
    
#line 79
    treeMap = nil;
  }
  if (treeMap == nil) {
    ComThoughtworksXstreamCoreUtilPresortedSet *set = [[ComThoughtworksXstreamCoreUtilPresortedSet alloc] initWithJavaUtilComparator:comparator];
    result = comparator == nil ? [[JavaUtilTreeSet alloc] init] : [[JavaUtilTreeSet alloc] initWithJavaUtilComparator:comparator];
    if (inFirstElement) {
      
#line 86
      [self addCurrentElementToCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
      [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveUp];
    }
    [self populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
    if ([set size] > 0) {
      [result addAllWithJavaUtilCollection:set];
    }
  }
  else {
    
#line 94
    [treeMapConverter_ populateTreeMapWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:treeMap withJavaUtilComparator:unmarshalledComparator];
  }
  return result;
}


#line 99
- (id)readResolve {
  
#line 100
  treeMapConverter_ = [[ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 alloc] initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:self withComThoughtworksXstreamMapperMapper:[self mapper]];
  
#line 125
  return self;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)other {
  [super copyAllFieldsTo:other];
  other->treeMapConverter_ = treeMapConverter_;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter class]) {
    ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_ =
#line 45
    [ComThoughtworksXstreamCoreJVM hasOptimizedTreeSetAddAll] ? [ComThoughtworksXstreamCoreUtilFields locateWithIOSClass:[IOSClass classWithClass:[JavaUtilTreeSet class]] withIOSClass:[IOSClass classWithProtocol:@protocol(JavaUtilSortedMap)] withBoolean:NO] : nil;
    ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "TreeSetConverter", NULL, 0x1, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "treeMapConverter_", NULL, 0x82, "Lcom.thoughtworks.xstream.converters.collections.TreeMapConverter;", NULL,  },
    { "sortedMapField_", NULL, 0x1a, "Ljava.lang.reflect.Field;", &ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField_,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter = { "TreeSetConverter", "com.thoughtworks.xstream.converters.collections", NULL, 0x1, 4, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter;
}

@end

@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1


#line 102
- (void)populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
               withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilMap:(id<JavaUtilMap>)map
                                                        withJavaUtilMap:(id<JavaUtilMap>)target {
  
#line 104
  [this$0_ populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:[[ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 alloc] initWithJavaUtilMap:target]];
}


#line 119
- (void)putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                          withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                   withJavaUtilMap:(id<JavaUtilMap>)map
                                                                   withJavaUtilMap:(id<JavaUtilMap>)target {
  
#line 121
  id key = [self readItemWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withId:map];
  (void) [((id<JavaUtilMap>) nil_chk(target)) putWithId:key withId:key];
}

- (instancetype)initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)outer$
                                             withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)arg$0 {
  this$0_ = outer$;
  return [super initWithComThoughtworksXstreamMapperMapper:arg$0];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:", "populateMap", "V", 0x4, NULL },
    { "putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:", "putCurrentEntryIntoMap", "V", 0x4, NULL },
    { "initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:withComThoughtworksXstreamMapperMapper:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.converters.collections.TreeSetConverter;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1 = { "$1", "com.thoughtworks.xstream.converters.collections", "TreeSetConverter", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1;
}

@end

@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1


#line 105
- (jboolean)addWithId:(id)object {
  
#line 106
  return [((id<JavaUtilMap>) nil_chk(val$target_)) putWithId:object withId:object] != nil;
}


#line 109
- (id)getWithInt:(jint)location {
  
#line 110
  return nil;
}


#line 113
- (jint)size {
  
#line 114
  return [((id<JavaUtilMap>) nil_chk(val$target_)) size];
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)capture$0 {
  val$target_ = capture$0;
  return [super init];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "Z", 0x1, NULL },
    { "getWithInt:", "get", "Ljava.lang.Object;", 0x1, NULL },
    { "size", NULL, "I", 0x1, NULL },
    { "initWithJavaUtilMap:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$target_", NULL, 0x1012, "Ljava.util.Map;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1 = { "$1", "com.thoughtworks.xstream.converters.collections", "TreeSetConverter$$1", 0x8000, 4, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_$1_$1;
}

@end
