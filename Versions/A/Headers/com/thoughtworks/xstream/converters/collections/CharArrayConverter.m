//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/CharArrayConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/CharArrayConverter.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/CharArrayConverter.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"


#line 26
@implementation ComThoughtworksXstreamConvertersCollectionsCharArrayConverter

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isArray] && [((IOSClass *) nil_chk([type getComponentType])) isEqual:[IOSClass charClass]];
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  IOSCharArray *chars = (IOSCharArray *) check_class_cast(source, [IOSCharArray class]);
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:[NSString stringWithCharacters:chars]];
}


#line 37
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  return [((NSString *) nil_chk([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getValue])) toCharArray];
}

- (instancetype)init {
  ComThoughtworksXstreamConvertersCollectionsCharArrayConverter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsCharArrayConverter = { 2, "CharArrayConverter", "com.thoughtworks.xstream.converters.collections", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersCollectionsCharArrayConverter;
}

@end

void ComThoughtworksXstreamConvertersCollectionsCharArrayConverter_init(ComThoughtworksXstreamConvertersCollectionsCharArrayConverter *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamConvertersCollectionsCharArrayConverter *new_ComThoughtworksXstreamConvertersCollectionsCharArrayConverter_init() {
  ComThoughtworksXstreamConvertersCollectionsCharArrayConverter *self = [ComThoughtworksXstreamConvertersCollectionsCharArrayConverter alloc];
  ComThoughtworksXstreamConvertersCollectionsCharArrayConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsCharArrayConverter)
