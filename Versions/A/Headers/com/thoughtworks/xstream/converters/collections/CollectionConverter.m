//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/CollectionConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/CollectionConverter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/Vector.h"

@interface ComThoughtworksXstreamConvertersCollectionsCollectionConverter () {
 @public
  IOSClass *type_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersCollectionsCollectionConverter, type_, IOSClass *)


#line 37
@implementation ComThoughtworksXstreamConvertersCollectionsCollectionConverter


#line 41
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}


#line 51
- (instancetype)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                              withIOSClass:(IOSClass *)type {
  ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, type);
  return self;
}


#line 59
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  if (self->type_ != nil) {
    return [((IOSClass *) nil_chk(type)) isEqual:self->type_];
  }
  return [((IOSClass *) nil_chk(type)) isEqual:JavaUtilArrayList_class_()] ||
#line 64
  [type isEqual:JavaUtilHashSet_class_()] ||
#line 65
  [type isEqual:JavaUtilLinkedList_class_()] ||
#line 66
  [type isEqual:JavaUtilVector_class_()] ||
#line 67
  (ComThoughtworksXstreamCoreJVM_is14() && [((NSString *) nil_chk([type getName])) isEqual:@"java.util.LinkedHashSet"]);
}


#line 70
- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaUtilCollection> collection = (id<JavaUtilCollection>) check_protocol_cast(source, @protocol(JavaUtilCollection));
  for (id<JavaUtilIterator> iterator = [((id<JavaUtilCollection>) nil_chk(collection)) iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ) {
    id item = [iterator next];
    [self writeItemWithId:item withComThoughtworksXstreamConvertersMarshallingContext:context withComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
}


#line 78
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id<JavaUtilCollection> collection = (id<JavaUtilCollection>) check_protocol_cast([self createCollectionWithIOSClass:[((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType]], @protocol(JavaUtilCollection));
  [self populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:collection];
  return collection;
}


#line 84
- (void)populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                      withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  [self populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:collection withJavaUtilCollection:collection];
}


#line 88
- (void)populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                      withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilCollection:(id<JavaUtilCollection>)collection
                                                        withJavaUtilCollection:(id<JavaUtilCollection>)target {
  while ([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    [self addCurrentElementToCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:collection withJavaUtilCollection:target];
    [reader moveUp];
  }
}


#line 96
- (void)addCurrentElementToCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                 withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                   withJavaUtilCollection:(id<JavaUtilCollection>)collection
                                                                   withJavaUtilCollection:(id<JavaUtilCollection>)target {
  
#line 98
  id item = [self readItemWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withId:collection];
  [((id<JavaUtilCollection>) nil_chk(target)) addWithId:item];
}


#line 102
- (id)createCollectionWithIOSClass:(IOSClass *)type {
  return [super createCollectionWithIOSClass:self->type_ != nil ? self->type_ : type];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamMapperMapper:", "CollectionConverter", NULL, 0x1, NULL, NULL },
    { "initWithComThoughtworksXstreamMapperMapper:withIOSClass:", "CollectionConverter", NULL, 0x1, NULL, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilCollection:", "populateCollection", "V", 0x4, NULL, NULL },
    { "populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilCollection:withJavaUtilCollection:", "populateCollection", "V", 0x4, NULL, NULL },
    { "addCurrentElementToCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilCollection:withJavaUtilCollection:", "addCurrentElementToCollection", "V", 0x4, NULL, NULL },
    { "createCollectionWithIOSClass:", "createCollection", "Ljava.lang.Object;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x12, "Ljava.lang.Class;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsCollectionConverter = { 2, "CollectionConverter", "com.thoughtworks.xstream.converters.collections", NULL, 0x1, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersCollectionsCollectionConverter;
}

@end


#line 41
void ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsCollectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper) {
  (void) ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, nil);
}


#line 41
ComThoughtworksXstreamConvertersCollectionsCollectionConverter *new_ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersCollectionsCollectionConverter *self = [ComThoughtworksXstreamConvertersCollectionsCollectionConverter alloc];
  ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}


#line 51
void ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(ComThoughtworksXstreamConvertersCollectionsCollectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  (void) ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  self->type_ = type;
  if (type != nil && ![JavaUtilCollection_class_() isAssignableFrom:type]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("@$@", type, @" not of type ", JavaUtilCollection_class_()));
  }
}


#line 51
ComThoughtworksXstreamConvertersCollectionsCollectionConverter *new_ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  ComThoughtworksXstreamConvertersCollectionsCollectionConverter *self = [ComThoughtworksXstreamConvertersCollectionsCollectionConverter alloc];
  ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsCollectionConverter)
