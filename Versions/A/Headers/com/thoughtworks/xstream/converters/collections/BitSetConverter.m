//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/BitSetConverter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/converters/collections/BitSetConverter.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/BitSetConverter.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/BitSet.h"
#include "java/util/StringTokenizer.h"


#line 29
@implementation ComThoughtworksXstreamConvertersCollectionsBitSetConverter

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isEqual:JavaUtilBitSet_class_()];
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  JavaUtilBitSet *bitSet = (JavaUtilBitSet *) check_class_cast(source, [JavaUtilBitSet class]);
  JavaLangStringBuffer *buffer = new_JavaLangStringBuffer_init();
  jboolean seenFirst = NO;
  for (jint i = 0; i < [((JavaUtilBitSet *) nil_chk(bitSet)) length]; i++) {
    if ([bitSet getWithInt:i]) {
      if (seenFirst) {
        (void) [buffer appendWithChar:','];
      }
      else {
        
#line 44
        seenFirst = YES;
      }
      (void) [buffer appendWithInt:i];
    }
  }
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:[buffer description]];
}


#line 52
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  JavaUtilBitSet *result = new_JavaUtilBitSet_init();
  JavaUtilStringTokenizer *tokenizer = new_JavaUtilStringTokenizer_initWithNSString_withNSString_withBoolean_([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getValue], @",", NO);
  while ([tokenizer hasMoreTokens]) {
    jint index = JavaLangInteger_parseIntWithNSString_([tokenizer nextToken]);
    [result setWithInt:index];
  }
  return result;
}

- (instancetype)init {
  ComThoughtworksXstreamConvertersCollectionsBitSetConverter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsBitSetConverter = { 2, "BitSetConverter", "com.thoughtworks.xstream.converters.collections", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamConvertersCollectionsBitSetConverter;
}

@end

void ComThoughtworksXstreamConvertersCollectionsBitSetConverter_init(ComThoughtworksXstreamConvertersCollectionsBitSetConverter *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamConvertersCollectionsBitSetConverter *new_ComThoughtworksXstreamConvertersCollectionsBitSetConverter_init() {
  ComThoughtworksXstreamConvertersCollectionsBitSetConverter *self = [ComThoughtworksXstreamConvertersCollectionsBitSetConverter alloc];
  ComThoughtworksXstreamConvertersCollectionsBitSetConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsBitSetConverter)
