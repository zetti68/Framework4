//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/FastStack.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/FastStack.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/FastStack.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"

@interface ComThoughtworksXstreamCoreUtilFastStack () {
 @public
  IOSObjectArray *stack_;
  jint pointer_;
}

- (void)resizeStackWithInt:(jint)newCapacity;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilFastStack, stack_, IOSObjectArray *)

__attribute__((unused)) static void ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(ComThoughtworksXstreamCoreUtilFastStack *self, jint newCapacity);


#line 20
@implementation ComThoughtworksXstreamCoreUtilFastStack


#line 25
- (instancetype)initWithInt:(jint)initialCapacity {
  ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(self, initialCapacity);
  return self;
}


#line 29
- (id)pushWithId:(id)value {
  if (pointer_ + 1 >= ((IOSObjectArray *) nil_chk(stack_))->size_) {
    ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(self, stack_->size_ * 2);
  }
  (void) IOSObjectArray_Set(stack_, pointer_++, value);
  return value;
}

- (void)popSilently {
  (void) IOSObjectArray_Set(nil_chk(stack_), --pointer_, nil);
}

- (id)pop {
  id result = IOSObjectArray_Get(nil_chk(stack_), --pointer_);
  (void) IOSObjectArray_Set(stack_, pointer_, nil);
  return result;
}

- (id)peek {
  return pointer_ == 0 ? nil : IOSObjectArray_Get(nil_chk(stack_), pointer_ - 1);
}

- (id)replaceWithId:(id)value {
  id result = IOSObjectArray_Get(nil_chk(stack_), pointer_ - 1);
  (void) IOSObjectArray_Set(stack_, pointer_ - 1, value);
  return result;
}

- (void)replaceSilentlyWithId:(id)value {
  (void) IOSObjectArray_Set(nil_chk(stack_), pointer_ - 1, value);
}

- (jint)size {
  return pointer_;
}

- (jboolean)hasStuff {
  return pointer_ > 0;
}

- (id)getWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(stack_), i);
}

- (void)resizeStackWithInt:(jint)newCapacity {
  ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(self, newCapacity);
}


#line 79
- (NSString *)description {
  JavaLangStringBuffer *result = new_JavaLangStringBuffer_initWithNSString_(@"[");
  for (jint i = 0; i < pointer_; i++) {
    if (i > 0) {
      (void) [result appendWithNSString:@", "];
    }
    (void) [result appendWithId:IOSObjectArray_Get(nil_chk(stack_), i)];
  }
  (void) [result appendWithChar:']'];
  return [result description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "FastStack", NULL, 0x1, NULL, NULL },
    { "pushWithId:", "push", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "popSilently", NULL, "V", 0x1, NULL, NULL },
    { "pop", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "peek", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "replaceWithId:", "replace", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "replaceSilentlyWithId:", "replaceSilently", "V", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "hasStuff", NULL, "Z", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "resizeStackWithInt:", "resizeStack", "V", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "stack_", NULL, 0x2, "[Ljava.lang.Object;", NULL, NULL,  },
    { "pointer_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilFastStack = { 2, "FastStack", "com.thoughtworks.xstream.core.util", NULL, 0x11, 12, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamCoreUtilFastStack;
}

@end


#line 25
void ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(ComThoughtworksXstreamCoreUtilFastStack *self, jint initialCapacity) {
  (void) NSObject_init(self);
  
#line 26
  self->stack_ = [IOSObjectArray newArrayWithLength:initialCapacity type:NSObject_class_()];
}


#line 25
ComThoughtworksXstreamCoreUtilFastStack *new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(jint initialCapacity) {
  ComThoughtworksXstreamCoreUtilFastStack *self = [ComThoughtworksXstreamCoreUtilFastStack alloc];
  ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(self, initialCapacity);
  return self;
}


#line 73
void ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(ComThoughtworksXstreamCoreUtilFastStack *self, jint newCapacity) {
  IOSObjectArray *newStack = [IOSObjectArray newArrayWithLength:newCapacity type:NSObject_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->stack_, 0, newStack, 0, JavaLangMath_minWithInt_withInt_(self->pointer_, newCapacity));
  self->stack_ = newStack;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilFastStack)
