//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/ThreadSafeSimpleDateFormat.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/ThreadSafeSimpleDateFormat.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/core/util/Pool.h"
#include "com/thoughtworks/xstream/core/util/ThreadSafeSimpleDateFormat.h"
#include "java/text/DateFormat.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"


#line 36
@implementation ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat


#line 42
- (instancetype)initWithNSString:(NSString *)format
            withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                         withInt:(jint)initialPoolSize
                         withInt:(jint)maxPoolSize
                     withBoolean:(jboolean)lenient {
  return
#line 45
  [self initComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormatWithNSString:format withJavaUtilTimeZone:timeZone withJavaUtilLocale:JavaUtilLocale_get_ENGLISH_() withInt:initialPoolSize withInt:maxPoolSize withBoolean:lenient];
}


#line 48
- (instancetype)initComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormatWithNSString:(NSString *)format
                                                                    withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                                                                      withJavaUtilLocale:(JavaUtilLocale *)locale
                                                                                 withInt:(jint)initialPoolSize
                                                                                 withInt:(jint)maxPoolSize
                                                                             withBoolean:(jboolean)lenient {
  if (self = [super init]) {
    formatString_ = format;
    
#line 52
    self->timeZone_ = timeZone;
    
#line 53
    pool_ = [[ComThoughtworksXstreamCoreUtilPool alloc] initWithInt:initialPoolSize withInt:maxPoolSize withComThoughtworksXstreamCoreUtilPool_Factory:[[ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_$1 alloc] initWithComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat:self withJavaUtilLocale:locale withBoolean:lenient]];
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)format
            withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
              withJavaUtilLocale:(JavaUtilLocale *)locale
                         withInt:(jint)initialPoolSize
                         withInt:(jint)maxPoolSize
                     withBoolean:(jboolean)lenient {
  return [self initComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormatWithNSString:
#line 49
format withJavaUtilTimeZone:timeZone withJavaUtilLocale:locale withInt:initialPoolSize withInt:
#line 50
maxPoolSize withBoolean:lenient];
}


#line 63
- (NSString *)formatWithJavaUtilDate:(JavaUtilDate *)date {
  
#line 64
  JavaTextDateFormat *format = [self fetchFromPool];
  @try {
    return [((JavaTextDateFormat *) nil_chk(format)) formatWithJavaUtilDate:date];
  }
  @finally {
    
#line 68
    [((ComThoughtworksXstreamCoreUtilPool *) nil_chk(pool_)) putInPoolWithId:format];
  }
}


#line 72
- (JavaUtilDate *)parseWithNSString:(NSString *)date {
  
#line 73
  JavaTextDateFormat *format = [self fetchFromPool];
  @try {
    return [((JavaTextDateFormat *) nil_chk(format)) parseWithNSString:date];
  }
  @finally {
    
#line 77
    [((ComThoughtworksXstreamCoreUtilPool *) nil_chk(pool_)) putInPoolWithId:format];
  }
}


#line 81
- (JavaTextDateFormat *)fetchFromPool {
  
#line 82
  JavaTextDateFormat *format = (JavaTextDateFormat *) check_class_cast([((ComThoughtworksXstreamCoreUtilPool *) nil_chk(pool_)) fetchFromPool], [JavaTextDateFormat class]);
  JavaUtilTimeZone *tz = timeZone_ != nil ? timeZone_ : [JavaUtilTimeZone getDefault];
  if (![tz isEqual:[((JavaTextDateFormat *) nil_chk(format)) getTimeZone]]) {
    [format setTimeZoneWithJavaUtilTimeZone:tz];
  }
  return format;
}

- (NSString *)description {
  
#line 91
  return formatString_;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *)other {
  [super copyAllFieldsTo:other];
  other->formatString_ = formatString_;
  other->pool_ = pool_;
  other->timeZone_ = timeZone_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaUtilTimeZone:withInt:withInt:withBoolean:", "ThreadSafeSimpleDateFormat", NULL, 0x1, NULL },
    { "initWithNSString:withJavaUtilTimeZone:withJavaUtilLocale:withInt:withInt:withBoolean:", "ThreadSafeSimpleDateFormat", NULL, 0x1, NULL },
    { "formatWithJavaUtilDate:", "format", "Ljava.lang.String;", 0x1, NULL },
    { "parseWithNSString:", "parse", "Ljava.util.Date;", 0x1, "Ljava.text.ParseException;" },
    { "fetchFromPool", NULL, "Ljava.text.DateFormat;", 0x2, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "formatString_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
    { "pool_", NULL, 0x12, "Lcom.thoughtworks.xstream.core.util.Pool;", NULL,  },
    { "timeZone_", NULL, 0x12, "Ljava.util.TimeZone;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat = { "ThreadSafeSimpleDateFormat", "com.thoughtworks.xstream.core.util", NULL, 0x1, 6, methods, 3, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat;
}

@end

@implementation ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_$1


#line 54
- (id)newInstance {
  
#line 55
  JavaTextSimpleDateFormat *dateFormat = [[JavaTextSimpleDateFormat alloc] initWithNSString:this$0_->formatString_ withJavaUtilLocale:val$locale_];
  [dateFormat setLenientWithBoolean:val$lenient_];
  return dateFormat;
}

- (instancetype)initWithComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat:(ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *)outer$
                                                              withJavaUtilLocale:(JavaUtilLocale *)capture$0
                                                                     withBoolean:(jboolean)capture$1 {
  this$0_ = outer$;
  val$locale_ = capture$0;
  val$lenient_ = capture$1;
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newInstance", NULL, "Ljava.lang.Object;", 0x1, NULL },
    { "initWithComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat:withJavaUtilLocale:withBoolean:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat;", NULL,  },
    { "val$locale_", NULL, 0x1012, "Ljava.util.Locale;", NULL,  },
    { "val$lenient_", NULL, 0x1012, "Z", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_$1 = { "$1", "com.thoughtworks.xstream.core.util", "ThreadSafeSimpleDateFormat", 0x8000, 2, methods, 3, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_$1;
}

@end
