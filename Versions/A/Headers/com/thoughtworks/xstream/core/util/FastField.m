//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/FastField.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/FastField.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/core/util/FastField.h"


#line 13
@implementation ComThoughtworksXstreamCoreUtilFastField


#line 17
- (instancetype)initComThoughtworksXstreamCoreUtilFastFieldWithNSString:(NSString *)definedIn
                                                           withNSString:(NSString *)name {
  if (self = [super init]) {
    
#line 18
    self->name_ = name;
    
#line 19
    self->declaringClass_ = definedIn;
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)definedIn
                    withNSString:(NSString *)name {
  return [self initComThoughtworksXstreamCoreUtilFastFieldWithNSString:
#line 17
definedIn withNSString:name];
}


#line 22
- (instancetype)initWithIOSClass:(IOSClass *)definedIn
                    withNSString:(NSString *)name {
  return
#line 23
  [self initComThoughtworksXstreamCoreUtilFastFieldWithNSString:definedIn == nil ? nil : [definedIn getName] withNSString:name];
}


#line 26
- (NSString *)getName {
  
#line 27
  return self->name_;
}


#line 30
- (NSString *)getDeclaringClass {
  
#line 31
  return self->declaringClass_;
}

- (jboolean)isEqual:(id)obj {
  
#line 35
  if (self == obj) {
    return YES;
  }
  if (obj == nil) {
    return NO;
  }
  if ([obj isKindOfClass:[ComThoughtworksXstreamCoreUtilFastField class]]) {
    ComThoughtworksXstreamCoreUtilFastField *field = (ComThoughtworksXstreamCoreUtilFastField *) check_class_cast(obj, [ComThoughtworksXstreamCoreUtilFastField class]);
    if ((declaringClass_ == nil && ((ComThoughtworksXstreamCoreUtilFastField *) nil_chk(field))->declaringClass_ != nil) ||
#line 44
    (declaringClass_ != nil && ((ComThoughtworksXstreamCoreUtilFastField *) nil_chk(field))->declaringClass_ == nil)) {
      return NO;
    }
    return [((NSString *) nil_chk(name_)) isEqual:[((ComThoughtworksXstreamCoreUtilFastField *) nil_chk(field)) getName]] &&
#line 48
    (declaringClass_ == nil || [declaringClass_ isEqual:[field getDeclaringClass]]);
  }
  return NO;
}

- (NSUInteger)hash {
  
#line 54
  return ((jint) [((NSString *) nil_chk(name_)) hash]) ^ (declaringClass_ == nil ? 0 : ((jint) [declaringClass_ hash]));
}

- (NSString *)description {
  
#line 58
  return JreStrcat("$$", (declaringClass_ == nil ? @"" : JreStrcat("$C", declaringClass_, '.')), name_);
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamCoreUtilFastField *)other {
  [super copyAllFieldsTo:other];
  other->declaringClass_ = declaringClass_;
  other->name_ = name_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "FastField", NULL, 0x1, NULL },
    { "initWithIOSClass:withNSString:", "FastField", NULL, 0x1, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getDeclaringClass", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
    { "declaringClass_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilFastField = { "FastField", "com.thoughtworks.xstream.core.util", NULL, 0x11, 7, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilFastField;
}

@end
