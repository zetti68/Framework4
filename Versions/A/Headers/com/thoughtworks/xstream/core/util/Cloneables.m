//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/Cloneables.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/Cloneables.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/reflection/ObjectAccessException.h"
#include "com/thoughtworks/xstream/core/util/Cloneables.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"


#line 25
@implementation ComThoughtworksXstreamCoreUtilCloneables

+ (id)cloneWithId:(id)o {
  return ComThoughtworksXstreamCoreUtilCloneables_cloneWithId_(o);
}


#line 58
+ (id)cloneIfPossibleWithId:(id)o {
  return ComThoughtworksXstreamCoreUtilCloneables_cloneIfPossibleWithId_(o);
}

- (instancetype)init {
  ComThoughtworksXstreamCoreUtilCloneables_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "cloneWithId:", "clone", "Ljava.lang.Object;", 0x9, NULL, NULL },
    { "cloneIfPossibleWithId:", "cloneIfPossible", "Ljava.lang.Object;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilCloneables = { 2, "Cloneables", "com.thoughtworks.xstream.core.util", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamCoreUtilCloneables;
}

@end


#line 27
id ComThoughtworksXstreamCoreUtilCloneables_cloneWithId_(id o) {
  ComThoughtworksXstreamCoreUtilCloneables_initialize();
  
#line 28
  if ([NSCopying_class_() isInstance:o]) {
    if ([[nil_chk(o) getClass] isArray]) {
      IOSClass *componentType = [[o getClass] getComponentType];
      if (![((IOSClass *) nil_chk(componentType)) isPrimitive]) {
        return [((IOSObjectArray *) check_class_cast(o, [IOSObjectArray class])) clone];
      }
      else {
        
#line 34
        jint length = JavaLangReflectArray_getLengthWithId_(o);
        id clone = JavaLangReflectArray_newInstanceWithIOSClass_withInt_(componentType, length);
        while (length-- > 0) {
          JavaLangReflectArray_setWithId_withInt_withId_(clone, length, JavaLangReflectArray_getWithId_withInt_(o, length));
        }
        
#line 40
        return clone;
      }
    }
    else {
      
#line 43
      @try {
        JavaLangReflectMethod *clone = [[o getClass] getMethod:@"clone" parameterTypes:nil];
        return [((JavaLangReflectMethod *) nil_chk(clone)) invokeWithId:o withNSObjectArray:nil];
      }
      @catch (
#line 46
      JavaLangNoSuchMethodException *e) {
        @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(@"Cloneable type has no clone method", e);
      }
      @catch (
#line 48
      JavaLangIllegalAccessException *e) {
        @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(@"Cannot clone Cloneable type", e);
      }
      @catch (
#line 50
      JavaLangReflectInvocationTargetException *e) {
        @throw new_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(@"Exception cloning Cloneable type", [((JavaLangReflectInvocationTargetException *) nil_chk(e)) getCause]);
      }
    }
  }
  return nil;
}


#line 58
id ComThoughtworksXstreamCoreUtilCloneables_cloneIfPossibleWithId_(id o) {
  ComThoughtworksXstreamCoreUtilCloneables_initialize();
  
#line 59
  id clone = ComThoughtworksXstreamCoreUtilCloneables_cloneWithId_(o);
  return clone == nil ? o : clone;
}

void ComThoughtworksXstreamCoreUtilCloneables_init(ComThoughtworksXstreamCoreUtilCloneables *self) {
  (void) NSObject_init(self);
}

ComThoughtworksXstreamCoreUtilCloneables *new_ComThoughtworksXstreamCoreUtilCloneables_init() {
  ComThoughtworksXstreamCoreUtilCloneables *self = [ComThoughtworksXstreamCoreUtilCloneables alloc];
  ComThoughtworksXstreamCoreUtilCloneables_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilCloneables)
