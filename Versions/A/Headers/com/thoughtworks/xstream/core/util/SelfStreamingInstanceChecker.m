//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/SelfStreamingInstanceChecker.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/SelfStreamingInstanceChecker.java"

#include "IOSClass.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/core/util/SelfStreamingInstanceChecker.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"


#line 30
@implementation ComThoughtworksXstreamCoreUtilSelfStreamingInstanceChecker


#line 39
- (instancetype)initWithComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)lookup
                                                                 withId:(id)xstream {
  if (self = [super init]) {
    
#line 40
    self->lookup_ = lookup;
    
#line 41
    self->self__ = xstream;
  }
  return self;
}


#line 47
- (instancetype)initWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)defaultConverter
                                                           withId:(id)xstream {
  if (self = [super init]) {
    
#line 48
    self->defaultConverter_ = defaultConverter;
    
#line 49
    self->self__ = xstream;
    
#line 50
    lookup_ = nil;
  }
  return self;
}


#line 53
- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  
#line 54
  return type == [nil_chk(self__) getClass];
}


#line 57
- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  
#line 58
  if (source == self__) {
    @throw [[ComThoughtworksXstreamConvertersConversionException alloc] initWithNSString:@"Cannot marshal the XStream instance in action"];
  }
  [((id<ComThoughtworksXstreamConvertersConverter>) nil_chk([self getConverter])) marshalWithId:source withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
}


#line 64
- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  
#line 65
  return [((id<ComThoughtworksXstreamConvertersConverter>) nil_chk([self getConverter])) unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context];
}


#line 68
- (id<ComThoughtworksXstreamConvertersConverter>)getConverter {
  
#line 69
  return defaultConverter_ != nil ? defaultConverter_ : [((id<ComThoughtworksXstreamConvertersConverterLookup>) nil_chk(lookup_)) lookupConverterForTypeWithIOSClass:[IOSClass classWithClass:[NSObject class]]];
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamCoreUtilSelfStreamingInstanceChecker *)other {
  [super copyAllFieldsTo:other];
  other->defaultConverter_ = defaultConverter_;
  other->lookup_ = lookup_;
  other->self__ = self__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamConvertersConverterLookup:withId:", "SelfStreamingInstanceChecker", NULL, 0x1, NULL },
    { "initWithComThoughtworksXstreamConvertersConverter:withId:", "SelfStreamingInstanceChecker", NULL, 0x1, NULL },
    { "canConvertWithIOSClass:", "canConvert", "Z", 0x1, NULL },
    { "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:", "marshal", "V", 0x1, NULL },
    { "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:", "unmarshal", "Ljava.lang.Object;", 0x1, NULL },
    { "getConverter", NULL, "Lcom.thoughtworks.xstream.converters.Converter;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "self__", "self", 0x12, "Ljava.lang.Object;", NULL,  },
    { "defaultConverter_", NULL, 0x2, "Lcom.thoughtworks.xstream.converters.Converter;", NULL,  },
    { "lookup_", NULL, 0x12, "Lcom.thoughtworks.xstream.converters.ConverterLookup;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilSelfStreamingInstanceChecker = { "SelfStreamingInstanceChecker", "com.thoughtworks.xstream.core.util", NULL, 0x1, 6, methods, 3, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilSelfStreamingInstanceChecker;
}

@end
