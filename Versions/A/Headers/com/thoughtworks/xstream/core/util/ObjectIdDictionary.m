//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/ObjectIdDictionary.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/ObjectIdDictionary.java"

#include "com/thoughtworks/xstream/core/util/ObjectIdDictionary.h"
#include "java/lang/System.h"
#include "java/lang/ref/Reference.h"
#include "java/lang/ref/ReferenceQueue.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"


#line 28
@implementation ComThoughtworksXstreamCoreUtilObjectIdDictionary


#line 90
- (void)associateIdWithId:(id)obj
                   withId:(id)id_ {
  
#line 91
  (void) [((id<JavaUtilMap>) nil_chk(map_)) putWithId:[[ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper alloc] initWithComThoughtworksXstreamCoreUtilObjectIdDictionary:self withId:obj] withId:id_];
  [self cleanup];
}


#line 95
- (id)lookupIdWithId:(id)obj {
  
#line 96
  id id_ = [((id<JavaUtilMap>) nil_chk(map_)) getWithId:[[ComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper alloc] initWithId:obj]];
  return id_;
}


#line 100
- (jboolean)containsIdWithId:(id)item {
  
#line 101
  jboolean b = [((id<JavaUtilMap>) nil_chk(map_)) containsKeyWithId:[[ComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper alloc] initWithId:item]];
  return b;
}


#line 105
- (void)removeIdWithId:(id)item {
  
#line 106
  (void) [((id<JavaUtilMap>) nil_chk(map_)) removeWithId:[[ComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper alloc] initWithId:item]];
  [self cleanup];
}


#line 110
- (jint)size {
  
#line 111
  [self cleanup];
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}


#line 115
- (void)cleanup {
  
#line 116
  ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *wrapper;
  while ((wrapper = (ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *) check_class_cast([((JavaLangRefReferenceQueue *) nil_chk(queue_)) poll], [ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper class])) != nil) {
    
#line 119
    (void) [((id<JavaUtilMap>) nil_chk(map_)) removeWithId:wrapper];
  }
}

- (instancetype)init {
  if (self = [super init]) {
    map_ =
#line 30
    [[JavaUtilHashMap alloc] init];
    queue_ =
#line 31
    [[JavaLangRefReferenceQueue alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamCoreUtilObjectIdDictionary *)other {
  [super copyAllFieldsTo:other];
  other->map_ = map_;
  other->queue_ = queue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "associateIdWithId:withId:", "associateId", "V", 0x1, NULL },
    { "lookupIdWithId:", "lookupId", "Ljava.lang.Object;", 0x1, NULL },
    { "containsIdWithId:", "containsId", "Z", 0x1, NULL },
    { "removeIdWithId:", "removeId", "V", 0x1, NULL },
    { "size", NULL, "I", 0x1, NULL },
    { "cleanup", NULL, "V", 0x2, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "map_", NULL, 0x12, "Ljava.util.Map;", NULL,  },
    { "queue_", NULL, 0x12, "Ljava.lang.ref.ReferenceQueue;", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilObjectIdDictionary = { "ObjectIdDictionary", "com.thoughtworks.xstream.core.util", NULL, 0x1, 7, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilObjectIdDictionary;
}

@end

@interface ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper : NSObject
@end

@implementation ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hash", "hashCode", "I", 0x401, NULL },
    { "isEqual:", "equals", "Z", 0x401, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x401, NULL },
    { "get", NULL, "Ljava.lang.Object;", 0x401, NULL },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper = { "Wrapper", "com.thoughtworks.xstream.core.util", "ObjectIdDictionary", 0x20a, 4, methods, 0, NULL, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper;
}

@end



#line 40
@implementation ComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper


#line 45
- (instancetype)initWithId:(id)obj {
  if (self = [super init]) {
    
#line 46
    hashCode__ = [JavaLangSystem identityHashCodeWithId:obj];
    
#line 47
    self->obj_ = obj;
  }
  return self;
}

- (NSUInteger)hash {
  
#line 51
  return hashCode__;
}

- (jboolean)isEqual:(id)other {
  
#line 55
  return obj_ == [((id<ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) nil_chk(((id<ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) check_protocol_cast(other, @protocol(ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper))))) get];
}

- (NSString *)description {
  
#line 59
  return [nil_chk(obj_) description];
}


#line 62
- (id)get {
  
#line 63
  return obj_;
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper *)other {
  [super copyAllFieldsTo:other];
  other->hashCode__ = hashCode__;
  other->obj_ = obj_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:", "IdWrapper", NULL, 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "get", NULL, "Ljava.lang.Object;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "obj_", NULL, 0x12, "Ljava.lang.Object;", NULL,  },
    { "hashCode__", "hashCode", 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper = { "IdWrapper", "com.thoughtworks.xstream.core.util", "ObjectIdDictionary", 0xa, 5, methods, 2, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper;
}

@end


#line 67
@implementation ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper


#line 71
- (instancetype)initWithComThoughtworksXstreamCoreUtilObjectIdDictionary:(ComThoughtworksXstreamCoreUtilObjectIdDictionary *)outer$
                                                                  withId:(id)obj {
  if (self =
#line 72
  [super initWithId:obj withJavaLangRefReferenceQueue:outer$->queue_]) {
    
#line 73
    hashCode__ = [JavaLangSystem identityHashCodeWithId:obj];
  }
  return self;
}

- (NSUInteger)hash {
  
#line 77
  return hashCode__;
}

- (jboolean)isEqual:(id)other {
  
#line 81
  return [self get] == [((id<ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) nil_chk(((id<ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) check_protocol_cast(other, @protocol(ComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper))))) get];
}

- (NSString *)description {
  
#line 85
  id obj = [self get];
  return obj == nil ? @"(null)" : [obj description];
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *)other {
  [super copyAllFieldsTo:other];
  other->hashCode__ = hashCode__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamCoreUtilObjectIdDictionary:withId:", "WeakIdWrapper", NULL, 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "hashCode__", "hashCode", 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper = { "WeakIdWrapper", "com.thoughtworks.xstream.core.util", "ObjectIdDictionary", 0x2, 4, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper;
}

@end
