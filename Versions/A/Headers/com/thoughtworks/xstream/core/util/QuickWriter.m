//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/QuickWriter.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/QuickWriter.java"

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/QuickWriter.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/System.h"

@interface ComThoughtworksXstreamCoreUtilQuickWriter () {
 @public
  JavaIoWriter *writer_;
  IOSCharArray *buffer_;
  jint pointer_;
}

- (void)rawWithCharArray:(IOSCharArray *)c;

- (void)rawWithChar:(jchar)c;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilQuickWriter, writer_, JavaIoWriter *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilQuickWriter, buffer_, IOSCharArray *)

__attribute__((unused)) static void ComThoughtworksXstreamCoreUtilQuickWriter_rawWithCharArray_(ComThoughtworksXstreamCoreUtilQuickWriter *self, IOSCharArray *c);

__attribute__((unused)) static void ComThoughtworksXstreamCoreUtilQuickWriter_rawWithChar_(ComThoughtworksXstreamCoreUtilQuickWriter *self, jchar c);


#line 19
@implementation ComThoughtworksXstreamCoreUtilQuickWriter


#line 25
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)writer {
  ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_(self, writer);
  return self;
}


#line 29
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)writer
                             withInt:(jint)bufferSize {
  ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_withInt_(self, writer, bufferSize);
  return self;
}


#line 34
- (void)writeWithNSString:(NSString *)str {
  jint len = ((jint) [((NSString *) nil_chk(str)) length]);
  if (pointer_ + len >= ((IOSCharArray *) nil_chk(buffer_))->size_) {
    [self flush];
    if (len > buffer_->size_) {
      ComThoughtworksXstreamCoreUtilQuickWriter_rawWithCharArray_(self, [str toCharArray]);
      return;
    }
  }
  [str getChars:0 sourceEnd:len destination:buffer_ destinationBegin:pointer_];
  pointer_ += len;
}

- (void)writeWithChar:(jchar)c {
  if (pointer_ + 1 >= ((IOSCharArray *) nil_chk(buffer_))->size_) {
    [self flush];
    if (buffer_->size_ == 0) {
      ComThoughtworksXstreamCoreUtilQuickWriter_rawWithChar_(self, c);
      return;
    }
  }
  *IOSCharArray_GetRef(buffer_, pointer_++) = c;
}

- (void)writeWithCharArray:(IOSCharArray *)c {
  jint len = ((IOSCharArray *) nil_chk(c))->size_;
  if (pointer_ + len >= ((IOSCharArray *) nil_chk(buffer_))->size_) {
    [self flush];
    if (len > buffer_->size_) {
      ComThoughtworksXstreamCoreUtilQuickWriter_rawWithCharArray_(self, c);
      return;
    }
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(c, 0, buffer_, pointer_, len);
  pointer_ += len;
}

- (void)flush {
  @try {
    [((JavaIoWriter *) nil_chk(writer_)) writeWithCharArray:buffer_ withInt:0 withInt:pointer_];
    pointer_ = 0;
    [writer_ flush];
  }
  @catch (
#line 76
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 81
- (void)close {
  @try {
    [((JavaIoWriter *) nil_chk(writer_)) writeWithCharArray:buffer_ withInt:0 withInt:pointer_];
    pointer_ = 0;
    [writer_ close];
  }
  @catch (
#line 86
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 91
- (void)rawWithCharArray:(IOSCharArray *)c {
  ComThoughtworksXstreamCoreUtilQuickWriter_rawWithCharArray_(self, c);
}


#line 100
- (void)rawWithChar:(jchar)c {
  ComThoughtworksXstreamCoreUtilQuickWriter_rawWithChar_(self, c);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoWriter:", "QuickWriter", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoWriter:withInt:", "QuickWriter", NULL, 0x1, NULL, NULL },
    { "writeWithNSString:", "write", "V", 0x1, NULL, NULL },
    { "writeWithChar:", "write", "V", 0x1, NULL, NULL },
    { "writeWithCharArray:", "write", "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "rawWithCharArray:", "raw", "V", 0x2, NULL, NULL },
    { "rawWithChar:", "raw", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", NULL, 0x12, "Ljava.io.Writer;", NULL, NULL,  },
    { "buffer_", NULL, 0x2, "[C", NULL, NULL,  },
    { "pointer_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilQuickWriter = { 2, "QuickWriter", "com.thoughtworks.xstream.core.util", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamCoreUtilQuickWriter;
}

@end


#line 25
void ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_(ComThoughtworksXstreamCoreUtilQuickWriter *self, JavaIoWriter *writer) {
  (void) ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_withInt_(self, writer, 1024);
}


#line 25
ComThoughtworksXstreamCoreUtilQuickWriter *new_ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_(JavaIoWriter *writer) {
  ComThoughtworksXstreamCoreUtilQuickWriter *self = [ComThoughtworksXstreamCoreUtilQuickWriter alloc];
  ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_(self, writer);
  return self;
}


#line 29
void ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_withInt_(ComThoughtworksXstreamCoreUtilQuickWriter *self, JavaIoWriter *writer, jint bufferSize) {
  (void) NSObject_init(self);
  
#line 30
  self->writer_ = writer;
  self->buffer_ = [IOSCharArray newArrayWithLength:bufferSize];
}


#line 29
ComThoughtworksXstreamCoreUtilQuickWriter *new_ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint bufferSize) {
  ComThoughtworksXstreamCoreUtilQuickWriter *self = [ComThoughtworksXstreamCoreUtilQuickWriter alloc];
  ComThoughtworksXstreamCoreUtilQuickWriter_initWithJavaIoWriter_withInt_(self, writer, bufferSize);
  return self;
}


#line 91
void ComThoughtworksXstreamCoreUtilQuickWriter_rawWithCharArray_(ComThoughtworksXstreamCoreUtilQuickWriter *self, IOSCharArray *c) {
  @try {
    [((JavaIoWriter *) nil_chk(self->writer_)) writeWithCharArray:c];
    [self->writer_ flush];
  }
  @catch (
#line 95
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}


#line 100
void ComThoughtworksXstreamCoreUtilQuickWriter_rawWithChar_(ComThoughtworksXstreamCoreUtilQuickWriter *self, jchar c) {
  @try {
    [((JavaIoWriter *) nil_chk(self->writer_)) writeWithInt:c];
    [self->writer_ flush];
  }
  @catch (
#line 104
  JavaIoIOException *e) {
    @throw new_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilQuickWriter)
