//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/PresortedSet.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/util/PresortedSet.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/PresortedSet.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/SortedSet.h"

@interface ComThoughtworksXstreamCoreUtilPresortedSet () {
 @public
  id<JavaUtilList> list_;
  id<JavaUtilComparator> comparator__;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilPresortedSet, list_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilPresortedSet, comparator__, id<JavaUtilComparator>)


#line 19
@implementation ComThoughtworksXstreamCoreUtilPresortedSet


#line 23
- (instancetype)init {
  ComThoughtworksXstreamCoreUtilPresortedSet_init(self);
  return self;
}


#line 27
- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(self, comparator);
  return self;
}


#line 31
- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
                    withJavaUtilCollection:(id<JavaUtilCollection>)c {
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(self, comparator, c);
  return self;
}


#line 38
- (jboolean)addWithId:(id)e {
  return [((id<JavaUtilList>) nil_chk(self->list_)) addWithId:e];
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) addAllWithJavaUtilCollection:c];
}

- (void)clear {
  [((id<JavaUtilList>) nil_chk(self->list_)) clear];
}

- (jboolean)containsWithId:(id)o {
  return [((id<JavaUtilList>) nil_chk(self->list_)) containsWithId:o];
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) containsAllWithJavaUtilCollection:c];
}

- (jboolean)isEqual:(id)o {
  return [((id<JavaUtilList>) nil_chk(self->list_)) isEqual:o];
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilList>) nil_chk(self->list_)) hash]);
}

- (jboolean)isEmpty {
  return [((id<JavaUtilList>) nil_chk(self->list_)) isEmpty];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(self->list_)) iterator];
}

- (jboolean)removeWithId:(id)o {
  return [((id<JavaUtilList>) nil_chk(self->list_)) removeWithId:o];
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) removeAllWithJavaUtilCollection:c];
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) retainAllWithJavaUtilCollection:c];
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(self->list_)) size];
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  return [((id<JavaUtilList>) nil_chk(self->list_)) subListWithInt:fromIndex withInt:toIndex];
}


#line 94
- (IOSObjectArray *)toArray {
  return [((id<JavaUtilList>) nil_chk(self->list_)) toArray];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a {
  return [((id<JavaUtilList>) nil_chk(self->list_)) toArrayWithNSObjectArray:a];
}

- (id<JavaUtilComparator>)comparator {
  return comparator__;
}

- (id)first {
  return [((id<JavaUtilList>) nil_chk(list_)) isEmpty] ? nil : [list_ getWithInt:0];
}

- (id<JavaUtilSortedSet>)headSetWithId:(id)toElement {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)last {
  return [((id<JavaUtilList>) nil_chk(list_)) isEmpty] ? nil : [list_ getWithInt:[list_ size] - 1];
}

- (id<JavaUtilSortedSet>)subSetWithId:(id)fromElement
                               withId:(id)toElement {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 122
- (id<JavaUtilSortedSet>)tailSetWithId:(id)fromElement {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PresortedSet", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilComparator:", "PresortedSet", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilComparator:withJavaUtilCollection:", "PresortedSet", NULL, 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, NULL },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "subListWithInt:withInt:", "subList", "Ljava.util.List;", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "comparator", NULL, "Ljava.util.Comparator;", 0x1, NULL, NULL },
    { "first", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "headSetWithId:", "headSet", "Ljava.util.SortedSet;", 0x1, NULL, NULL },
    { "last", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "subSetWithId:withId:", "subSet", "Ljava.util.SortedSet;", 0x1, NULL, NULL },
    { "tailSetWithId:", "tailSet", "Ljava.util.SortedSet;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "list_", NULL, 0x12, "Ljava.util.List;", NULL, NULL,  },
    { "comparator__", "comparator", 0x12, "Ljava.util.Comparator;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilPresortedSet = { 2, "PresortedSet", "com.thoughtworks.xstream.core.util", NULL, 0x1, 25, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamCoreUtilPresortedSet;
}

@end


#line 23
void ComThoughtworksXstreamCoreUtilPresortedSet_init(ComThoughtworksXstreamCoreUtilPresortedSet *self) {
  (void) ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(self, nil);
}


#line 23
ComThoughtworksXstreamCoreUtilPresortedSet *new_ComThoughtworksXstreamCoreUtilPresortedSet_init() {
  ComThoughtworksXstreamCoreUtilPresortedSet *self = [ComThoughtworksXstreamCoreUtilPresortedSet alloc];
  ComThoughtworksXstreamCoreUtilPresortedSet_init(self);
  return self;
}


#line 27
void ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(ComThoughtworksXstreamCoreUtilPresortedSet *self, id<JavaUtilComparator> comparator) {
  (void) ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(self, comparator, nil);
}


#line 27
ComThoughtworksXstreamCoreUtilPresortedSet *new_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  ComThoughtworksXstreamCoreUtilPresortedSet *self = [ComThoughtworksXstreamCoreUtilPresortedSet alloc];
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(self, comparator);
  return self;
}


#line 31
void ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(ComThoughtworksXstreamCoreUtilPresortedSet *self, id<JavaUtilComparator> comparator, id<JavaUtilCollection> c) {
  (void) NSObject_init(self);
  self->list_ = new_JavaUtilArrayList_init();
  
#line 32
  self->comparator__ = comparator;
  if (c != nil) {
    [self addAllWithJavaUtilCollection:c];
  }
}


#line 31
ComThoughtworksXstreamCoreUtilPresortedSet *new_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(id<JavaUtilComparator> comparator, id<JavaUtilCollection> c) {
  ComThoughtworksXstreamCoreUtilPresortedSet *self = [ComThoughtworksXstreamCoreUtilPresortedSet alloc];
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(self, comparator, c);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilPresortedSet)
