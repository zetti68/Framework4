//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/Primitives.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/util/Primitives.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/thoughtworks/xstream/core/util/Primitives.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/Void.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

BOOL ComThoughtworksXstreamCoreUtilPrimitives_initialized = NO;


#line 22
@implementation ComThoughtworksXstreamCoreUtilPrimitives

id<JavaUtilMap> ComThoughtworksXstreamCoreUtilPrimitives_BOX_;
id<JavaUtilMap> ComThoughtworksXstreamCoreUtilPrimitives_UNBOX_;
id<JavaUtilMap> ComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE_;
id<JavaUtilMap> ComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR_;


#line 67
+ (IOSClass *)boxWithIOSClass:(IOSClass *)type {
  
#line 68
  return (IOSClass *) check_class_cast([((id<JavaUtilMap>) nil_chk(ComThoughtworksXstreamCoreUtilPrimitives_BOX_)) getWithId:type], [IOSClass class]);
}


#line 77
+ (IOSClass *)unboxWithIOSClass:(IOSClass *)type {
  
#line 78
  return (IOSClass *) check_class_cast([((id<JavaUtilMap>) nil_chk(ComThoughtworksXstreamCoreUtilPrimitives_UNBOX_)) getWithId:type], [IOSClass class]);
}


#line 88
+ (jboolean)isBoxedWithIOSClass:(IOSClass *)type {
  
#line 89
  return [((id<JavaUtilMap>) nil_chk(ComThoughtworksXstreamCoreUtilPrimitives_UNBOX_)) containsKeyWithId:type];
}


#line 99
+ (IOSClass *)primitiveTypeWithNSString:(NSString *)name {
  
#line 100
  return (IOSClass *) check_class_cast([((id<JavaUtilMap>) nil_chk(ComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE_)) getWithId:name], [IOSClass class]);
}


#line 110
+ (jchar)representingCharWithIOSClass:(IOSClass *)type {
  
#line 111
  JavaLangCharacter *ch = (JavaLangCharacter *) check_class_cast([((id<JavaUtilMap>) nil_chk(ComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR_)) getWithId:type], [JavaLangCharacter class]);
  return ch == nil ? 0 : [ch charValue];
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamCoreUtilPrimitives class]) {
    ComThoughtworksXstreamCoreUtilPrimitives_BOX_ =
#line 23
    [[JavaUtilHashMap alloc] init];
    ComThoughtworksXstreamCoreUtilPrimitives_UNBOX_ =
#line 24
    [[JavaUtilHashMap alloc] init];
    ComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE_ =
#line 25
    [[JavaUtilHashMap alloc] init];
    ComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR_ =
#line 26
    [[JavaUtilHashMap alloc] init];
    {
      
#line 29
      IOSObjectArray *boxing = [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ JavaLangByte_get_TYPE_(),
#line 30
      [IOSClass classWithClass:[JavaLangByte class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangCharacter_get_TYPE_(),
#line 31
      [IOSClass classWithClass:[JavaLangCharacter class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangShort_get_TYPE_(),
#line 32
      [IOSClass classWithClass:[JavaLangShort class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_get_TYPE_(),
#line 33
      [IOSClass classWithClass:[JavaLangInteger class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_get_TYPE_(),
#line 34
      [IOSClass classWithClass:[JavaLangLong class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangFloat_get_TYPE_(),
#line 35
      [IOSClass classWithClass:[JavaLangFloat class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_get_TYPE_(),
#line 36
      [IOSClass classWithClass:[JavaLangDouble class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangBoolean_get_TYPE_(),
#line 37
      [IOSClass classWithClass:[JavaLangBoolean class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]], [IOSObjectArray arrayWithObjects:(id[]){ JavaLangVoid_get_TYPE_(),
#line 38
      [IOSClass classWithClass:[JavaLangVoid class]] } count:2 type:[IOSClass classWithClass:[IOSClass class]]] } count:9 type:[IOSObjectArray iosClassWithType:[IOSClass classWithClass:[IOSClass class]]]];
      
#line 40
      IOSObjectArray *representingChars = [IOSObjectArray arrayWithObjects:(id[]){
#line 41
        [[JavaLangCharacter alloc] initWithChar:'B'],
#line 42
        [[JavaLangCharacter alloc] initWithChar:'C'],
#line 43
        [[JavaLangCharacter alloc] initWithChar:'S'],
#line 44
        [[JavaLangCharacter alloc] initWithChar:'I'],
#line 45
        [[JavaLangCharacter alloc] initWithChar:'J'],
#line 46
        [[JavaLangCharacter alloc] initWithChar:'F'],
#line 47
        [[JavaLangCharacter alloc] initWithChar:'D'],
#line 48
        [[JavaLangCharacter alloc] initWithChar:'Z'],
#line 49
        nil } count:9 type:[IOSClass classWithClass:[JavaLangCharacter class]]];
        
#line 51
        for (jint i = 0; i < boxing->size_; i++) {
          IOSClass *primitiveType = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(boxing, i)), 0);
          IOSClass *boxedType = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(boxing, i)), 1);
          (void) [ComThoughtworksXstreamCoreUtilPrimitives_BOX_ putWithId:primitiveType withId:boxedType];
          (void) [ComThoughtworksXstreamCoreUtilPrimitives_UNBOX_ putWithId:boxedType withId:primitiveType];
          (void) [ComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE_ putWithId:[((IOSClass *) nil_chk(primitiveType)) getName] withId:primitiveType];
          (void) [ComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR_ putWithId:primitiveType withId:IOSObjectArray_Get(representingChars, i)];
        }
      }
      ComThoughtworksXstreamCoreUtilPrimitives_initialized = YES;
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "boxWithIOSClass:", "box", "Ljava.lang.Class;", 0x9, NULL },
    { "unboxWithIOSClass:", "unbox", "Ljava.lang.Class;", 0x9, NULL },
    { "isBoxedWithIOSClass:", "isBoxed", "Z", 0x9, NULL },
    { "primitiveTypeWithNSString:", "primitiveType", "Ljava.lang.Class;", 0x9, NULL },
    { "representingCharWithIOSClass:", "representingChar", "C", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BOX_", NULL, 0x1a, "Ljava.util.Map;", &ComThoughtworksXstreamCoreUtilPrimitives_BOX_,  },
    { "UNBOX_", NULL, 0x1a, "Ljava.util.Map;", &ComThoughtworksXstreamCoreUtilPrimitives_UNBOX_,  },
    { "NAMED_PRIMITIVE_", NULL, 0x1a, "Ljava.util.Map;", &ComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE_,  },
    { "REPRESENTING_CHAR_", NULL, 0x1a, "Ljava.util.Map;", &ComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR_,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilPrimitives = { "Primitives", "com.thoughtworks.xstream.core.util", NULL, 0x11, 6, methods, 4, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreUtilPrimitives;
}

@end
