//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/AbstractReferenceUnmarshaller.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/AbstractReferenceUnmarshaller.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/core/AbstractReferenceUnmarshaller.h"
#include "com/thoughtworks/xstream/core/TreeUnmarshaller.h"
#include "com/thoughtworks/xstream/core/util/FastStack.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller () {
 @public
  id<JavaUtilMap> values_;
  ComThoughtworksXstreamCoreUtilFastStack *parentStack_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller, values_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller, parentStack_, ComThoughtworksXstreamCoreUtilFastStack *)

static id ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_NULL__;
J2OBJC_STATIC_FIELD_GETTER(ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller, NULL__, id)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller)


#line 31
@implementation ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller


#line 37
- (instancetype)initWithId:(id)root
withComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self, root, reader, converterLookup, mapper);
  return self;
}


#line 42
- (id)convertWithId:(id)parent
       withIOSClass:(IOSClass *)type
withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  if ([((ComThoughtworksXstreamCoreUtilFastStack *) nil_chk(parentStack_)) size] > 0) {
    id parentReferenceKey = [parentStack_ peek];
    if (parentReferenceKey != nil) {
      if (![((id<JavaUtilMap>) nil_chk(values_)) containsKeyWithId:parentReferenceKey]) {
        (void) [values_ putWithId:parentReferenceKey withId:parent];
      }
    }
  }
  id result;
  NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk([self getMapper])) aliasForSystemAttributeWithNSString:@"reference"];
  NSString *reference = attributeName == nil ? nil : [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader_)) getAttributeWithNSString:attributeName];
  if (reference != nil) {
    id cache = [((id<JavaUtilMap>) nil_chk(values_)) getWithId:[self getReferenceKeyWithNSString:reference]];
    if (cache == nil) {
      ComThoughtworksXstreamConvertersConversionException *ex = new_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Invalid reference");
      [ex addWithNSString:@"reference" withNSString:reference];
      @throw ex;
    }
    result = cache == ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_NULL__ ? nil : cache;
  }
  else {
    
#line 63
    id currentReferenceKey = [self getCurrentReferenceKey];
    (void) [parentStack_ pushWithId:currentReferenceKey];
    result = [super convertWithId:parent withIOSClass:type withComThoughtworksXstreamConvertersConverter:converter];
    if (currentReferenceKey != nil) {
      (void) [((id<JavaUtilMap>) nil_chk(values_)) putWithId:currentReferenceKey withId:result == nil ? ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_NULL__ : result];
    }
    [parentStack_ popSilently];
  }
  return result;
}


#line 74
- (id)getReferenceKeyWithNSString:(NSString *)reference {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 75
- (id)getCurrentReferenceKey {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller class]) {
    ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_NULL__ = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamMapperMapper:", "AbstractReferenceUnmarshaller", NULL, 0x1, NULL, NULL },
    { "convertWithId:withIOSClass:withComThoughtworksXstreamConvertersConverter:", "convert", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "getReferenceKeyWithNSString:", "getReferenceKey", "Ljava.lang.Object;", 0x404, NULL, NULL },
    { "getCurrentReferenceKey", NULL, "Ljava.lang.Object;", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NULL__", "NULL", 0x1a, "Ljava.lang.Object;", &ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_NULL__, NULL,  },
    { "values_", NULL, 0x2, "Ljava.util.Map;", NULL, NULL,  },
    { "parentStack_", NULL, 0x2, "Lcom.thoughtworks.xstream.core.util.FastStack;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller = { 2, "AbstractReferenceUnmarshaller", "com.thoughtworks.xstream.core", NULL, 0x401, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller;
}

@end


#line 37
void ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller *self, id root, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamMapperMapper> mapper) {
  (void) ComThoughtworksXstreamCoreTreeUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self,
#line 39
  root, reader, converterLookup, mapper);
  self->values_ = new_JavaUtilHashMap_init();
  self->parentStack_ = new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(
#line 35
  16);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller)
