//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/ReferenceByXPathUnmarshaller.java
//


#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/bin/src/com/thoughtworks/xstream/core/ReferenceByXPathUnmarshaller.java"

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/core/AbstractReferenceUnmarshaller.h"
#include "com/thoughtworks/xstream/core/ReferenceByXPathUnmarshaller.h"
#include "com/thoughtworks/xstream/io/AbstractReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/path/Path.h"
#include "com/thoughtworks/xstream/io/path/PathTracker.h"
#include "com/thoughtworks/xstream/io/path/PathTrackingReader.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"

@interface ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller () {
 @public
  ComThoughtworksXstreamIoPathPathTracker *pathTracker_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller, pathTracker_, ComThoughtworksXstreamIoPathPathTracker *)


#line 22
@implementation ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller


#line 27
- (instancetype)initWithId:(id)root
withComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self, root, reader, converterLookup, mapper);
  return self;
}


#line 34
- (id)getReferenceKeyWithNSString:(NSString *)reference {
  ComThoughtworksXstreamIoPathPath *path = new_ComThoughtworksXstreamIoPathPath_initWithNSString_(isNameEncoding_ ? [((ComThoughtworksXstreamIoAbstractReader *) nil_chk(((ComThoughtworksXstreamIoAbstractReader *) check_class_cast([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader_)) underlyingReader], [ComThoughtworksXstreamIoAbstractReader class])))) decodeNodeWithNSString:reference] : reference);
  
#line 37
  return [((NSString *) nil_chk(reference)) charAtWithInt:0] != '/' ? [((ComThoughtworksXstreamIoPathPath *) nil_chk([((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) getPath])) applyWithComThoughtworksXstreamIoPathPath:path] : path;
}


#line 40
- (id)getCurrentReferenceKey {
  return [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) getPath];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamMapperMapper:", "ReferenceByXPathUnmarshaller", NULL, 0x1, NULL, NULL },
    { "getReferenceKeyWithNSString:", "getReferenceKey", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "getCurrentReferenceKey", NULL, "Ljava.lang.Object;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pathTracker_", NULL, 0x2, "Lcom.thoughtworks.xstream.io.path.PathTracker;", NULL, NULL,  },
    { "isNameEncoding_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller = { 2, "ReferenceByXPathUnmarshaller", "com.thoughtworks.xstream.core", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller;
}

@end


#line 27
void ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller *self, id root, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamMapperMapper> mapper) {
  (void) ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self,
#line 29
  root, reader, converterLookup, mapper);
  self->pathTracker_ = new_ComThoughtworksXstreamIoPathPathTracker_init();
  
#line 30
  self->reader_ = new_ComThoughtworksXstreamIoPathPathTrackingReader_initWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamIoPathPathTracker_(reader, self->pathTracker_);
  self->isNameEncoding_ = [[((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) underlyingReader] isKindOfClass:[ComThoughtworksXstreamIoAbstractReader class]];
}


#line 27
ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller *new_ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(id root, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller *self = [ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller alloc];
  ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self, root, reader, converterLookup, mapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller)
