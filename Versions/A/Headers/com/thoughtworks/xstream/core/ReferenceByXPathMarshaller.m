//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/ReferenceByXPathMarshaller.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.thoughtworks.xstream/src/com/thoughtworks/xstream/core/ReferenceByXPathMarshaller.java"

#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/core/ReferenceByXPathMarshaller.h"
#include "com/thoughtworks/xstream/core/ReferenceByXPathMarshallingStrategy.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/path/Path.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"


#line 19
@implementation ComThoughtworksXstreamCoreReferenceByXPathMarshaller


#line 23
- (instancetype)initWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                     withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                  withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                                 withInt:(jint)mode {
  if (self =
#line 24
  [super initWithComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersConverterLookup:converterLookup withComThoughtworksXstreamMapperMapper:mapper]) {
    
#line 25
    self->mode_ = mode;
  }
  return self;
}


#line 28
- (NSString *)createReferenceWithComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)currentPath
                                                           withId:(id)existingReferenceKey {
  
#line 29
  ComThoughtworksXstreamIoPathPath *existingPath = (ComThoughtworksXstreamIoPathPath *) check_class_cast(existingReferenceKey, [ComThoughtworksXstreamIoPathPath class]);
  ComThoughtworksXstreamIoPathPath *referencePath = (mode_ & ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_ABSOLUTE_()) > 0 ? existingPath : [((ComThoughtworksXstreamIoPathPath *) nil_chk(currentPath)) relativeToWithComThoughtworksXstreamIoPathPath:existingPath];
  return (mode_ & ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_get_SINGLE_NODE_()) > 0 ? [referencePath explicit__] : [referencePath description];
}


#line 34
- (id)createReferenceKeyWithComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)currentPath
                                                      withId:(id)item {
  
#line 35
  return currentPath;
}


#line 38
- (void)fireValidReferenceWithId:(id)referenceKey {
}

- (void)copyAllFieldsTo:(ComThoughtworksXstreamCoreReferenceByXPathMarshaller *)other {
  [super copyAllFieldsTo:other];
  other->mode_ = mode_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamMapperMapper:withInt:", "ReferenceByXPathMarshaller", NULL, 0x1, NULL },
    { "createReferenceWithComThoughtworksXstreamIoPathPath:withId:", "createReference", "Ljava.lang.String;", 0x4, NULL },
    { "createReferenceKeyWithComThoughtworksXstreamIoPathPath:withId:", "createReferenceKey", "Ljava.lang.Object;", 0x4, NULL },
    { "fireValidReferenceWithId:", "fireValidReference", "V", 0x4, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mode_", NULL, 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreReferenceByXPathMarshaller = { "ReferenceByXPathMarshaller", "com.thoughtworks.xstream.core", NULL, 0x1, 4, methods, 1, fields, 0, NULL};
  return &_ComThoughtworksXstreamCoreReferenceByXPathMarshaller;
}

@end
